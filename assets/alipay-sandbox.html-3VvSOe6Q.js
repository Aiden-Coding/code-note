import{_ as e,r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"【小场景训练营】商品下单支付场景-ddd设计实现「支付宝沙箱」",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#【小场景训练营】商品下单支付场景-ddd设计实现「支付宝沙箱」","aria-hidden":"true"},"#"),s(" 【小场景训练营】商品下单支付场景，DDD设计实现「支付宝沙箱」")],-1),r=n("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=922461679&bvid=BV1ku4y1M7E1&cid=1372506705&p=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),v=p('<p>哈喽，大家伙我是技术UP主小傅哥。</p><p>经历了半年多💐，<strong>《DDD 技术小册》</strong> 整个系列已完成<code>理论知识</code>与<code>技术实践</code>两个部分，接下来小傅哥将带着小伙伴们开启<code>DDD 技术小册之场景方案</code>的学习旅程。—— 学理论、练技术、找场景锻炼，综合的学习会快速的提高编程技术。</p><div align="center"><img src="https://bugstack.cn/images/system/zsxq/xingqiu-231018-01.png?raw=true" width="650px"></div><p>技术，是承接业务需求提供解决方案的综合运用，而从实际需求中摘取出来的小场景学习，包括；支付、短信、地图、人脸、规则、短信猫、三方登录等，都可以非常好的锻炼思维，提高编码能力。</p><p>那么，本节我们先来完成下支付场景在 DDD 领域驱动下的场景设计和编码实现。这里选用支付宝的沙箱支付，因为这个支付对接非常好申请，这样可以方便大家一起参与学习。</p>',5),b={href:"https://gaga.plus",target:"_blank",rel:"noopener noreferrer"},g=p('<h2 id="一、场景说明" tabindex="-1"><a class="header-anchor" href="#一、场景说明" aria-hidden="true">#</a> 一、场景说明</h2><p>在本节小傅哥会带着大家先以最简单的方式完成对接支付验证。再以商品下单模型，通过 DDD 的领域驱动设计，最终完成对<code>支付宝沙箱</code>的对接使用。【如图】</p><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-02.png?raw=true" width="650px"></div><ul><li>包括；商城、出行、外卖等场景，凡是对接支付，都会先创建一条订单。在基于订单的唯一ID创建支付单。这是因为调用的支付都是外部的接口提供，没法和自己流程做一个统一的事务。那么这里就需要考虑最终一致性问题，要幂等可重试。—— 所以有这样的流程，调单也可以补偿。</li><li>商品支付完成后，会收到支付完成的回调。回调调用你提供好的一个接口，用于接收支付完成的通知。这个通知用于变更支付单的状态，以及自己系统内再发一个异步的MQ消息，用于处理后续的流程。</li><li>所有的这些流程节点，支付掉单、回调失败、MQ发送失败，在各个流程节点都有唯一ID，所以都可以用定时任务补偿。</li></ul><h2 id="二、支付申请-alipay-沙箱支付" tabindex="-1"><a class="header-anchor" href="#二、支付申请-alipay-沙箱支付" aria-hidden="true">#</a> 二、支付申请 - Alipay 沙箱支付</h2><h3 id="_1-沙箱应用" tabindex="-1"><a class="header-anchor" href="#_1-沙箱应用" aria-hidden="true">#</a> 1. 沙箱应用</h3>',6),h=n("strong",null,"支付宝|开放平台",-1),y={href:"https://open.alipay.com/develop/manage",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"任何人都可以申请，不要企业资质",-1),_=n("div",{align:"center"},[n("img",{src:"https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-03.png?raw=true",width:"750px"})],-1),q=n("div",{align:"center"},[n("img",{src:"https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-04.png?raw=true",width:"750px"})],-1),w=n("h3",{id:"_2-秘钥工具",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-秘钥工具","aria-hidden":"true"},"#"),s(" 2. 秘钥工具")],-1),x=n("strong",null,"文档中心 | 开放平台",-1),I={href:"https://opendocs.alipay.com/common/02kipk",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"下载支付宝开放平台秘钥工具",-1),O=p(`<div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-07.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-05.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-06.png?raw=true" width="750px"></div><h3 id="_3-秘钥填写" tabindex="-1"><a class="header-anchor" href="#_3-秘钥填写" aria-hidden="true">#</a> 3. 秘钥填写</h3><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-08.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-09.png?raw=true" width="750px"></div><ul><li>在秘钥工具中生成的<strong>应用公钥</strong>，复制到如图中填写保存。填写后就可以看到对应的支付宝公钥了。</li></ul><h2 id="三、简单案例" tabindex="-1"><a class="header-anchor" href="#三、简单案例" aria-hidden="true">#</a> 三、简单案例</h2><p>有了前面这些步骤的申请操作，接下来我们就可以先做一个小支付案例了。这个支付案例在工程代码中 xfg-dev-tech-app ApiTest 下。</p><h3 id="_1-后端代码" tabindex="-1"><a class="header-anchor" href="#_1-后端代码" aria-hidden="true">#</a> 1. 后端代码</h3><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.test.ApiTest</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiTest</span> <span class="token punctuation">{</span>

    <span class="token comment">// 「沙箱环境」应用ID - 您的APPID，收款账号既是你的APPID对应支付宝账号。获取地址；https://open.alipay.com/develop/sandbox/app</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> app_id <span class="token operator">=</span> <span class="token string">&quot;9021000132689924&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 「沙箱环境」商户私钥，你的PKCS8格式RSA2私钥</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> merchant_private_key <span class="token operator">=</span> <span class="token string">&quot;上文中，【秘钥工具】所创建的公户私钥&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 「沙箱环境」支付宝公钥</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> alipay_public_key <span class="token operator">=</span> <span class="token string">&quot;上文中，【秘钥填写】后提供给你的支付宝公钥&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 「沙箱环境」服务器异步通知页面路径。这里小傅哥用了 natapp.cn 内网穿透工具</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> notify_url <span class="token operator">=</span> <span class="token string">&quot;https://xfg.natapp.cn/api/v1/alipay/alipay_notify_url&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 「沙箱环境」页面跳转同步通知页面路径 需http://格式的完整路径，必须外网可以正常访问，才会同步跳转</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> return_url <span class="token operator">=</span> <span class="token string">&quot;https://gaga.plus&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 「沙箱环境」</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> gatewayUrl <span class="token operator">=</span> <span class="token string">&quot;https://openapi-sandbox.dl.alipaydev.com/gateway.do&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 签名方式</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> sign_type <span class="token operator">=</span> <span class="token string">&quot;RSA2&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 字符编码格式</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> charset <span class="token operator">=</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_AliPay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AlipayApiException</span> <span class="token punctuation">{</span>
        <span class="token class-name">AlipayClient</span> alipayClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultAlipayClient</span><span class="token punctuation">(</span>gatewayUrl<span class="token punctuation">,</span>
                app_id<span class="token punctuation">,</span>
                merchant_private_key<span class="token punctuation">,</span>
                <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
                charset<span class="token punctuation">,</span>
                alipay_public_key<span class="token punctuation">,</span>
                sign_type<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">AlipayTradePagePayRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlipayTradePagePayRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 发送请求的 Request类</span>
        request<span class="token punctuation">.</span><span class="token function">setNotifyUrl</span><span class="token punctuation">(</span>notify_url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setReturnUrl</span><span class="token punctuation">(</span>return_url<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">JSONObject</span> bizContent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bizContent<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;out_trade_no&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;daniel82AAAA000032333361X02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 我们自己生成的订单编号</span>
        bizContent<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;total_amount&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0.01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 订单的总金额</span>
        bizContent<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;subject&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;测试商品&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 支付的名称</span>
        bizContent<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;product_code&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FAST_INSTANT_TRADE_PAY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 固定配置</span>
        request<span class="token punctuation">.</span><span class="token function">setBizContent</span><span class="token punctuation">(</span>bizContent<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> form <span class="token operator">=</span> alipayClient<span class="token punctuation">.</span><span class="token function">pageExecute</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> form<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>支付配置</strong>：</p>`,13),A={href:"https://open.alipay.com/develop/sandbox/app",target:"_blank",rel:"noopener noreferrer"},E=n("li",null,"merchant_private_key：商户私钥，【通过支付宝开放平台秘钥工具】创建出来的私钥。公钥填写到网页上，私钥程序里使用。",-1),P=n("li",null,"alipay_public_key：支付宝公钥，在网页上填写公钥后，会给你一个支付宝的公钥。",-1),C=n("li",null,"notify_url：服务器异步通知回调地址，也就是你支付完成后，支付宝调用你的地址。因为我们是在本地做测试，外网是访问不到的。所以为了能做这样的测试，可以回调到我们。那么这里需要使用 natapp.cn 做一个内网穿透。",-1),j=n("li",null,"return_url：支付完成后跳转的地址",-1),F=n("li",null,"gatewayUrl：支付宝沙箱环境的地址，固定的。",-1),D=n("li",null,"sign_type：签名方式固定的",-1),N=n("li",null,"charset：字符编码固定的",-1),R=p(`<p><strong>调用配置</strong></p><ul><li>out_trade_no：你的单号，用你的单号类生成支付单信息。</li><li>total_amount：支付金额</li><li>subject：商品名称</li><li>product_code：固定值；FAST_INSTANT_TRADE_PAY</li></ul><p><strong>测试结果</strong></p><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-10.png?raw=true" width="750px"></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span>form name<span class="token operator">=</span><span class="token string">&quot;punchout_form&quot;</span> method<span class="token operator">=</span><span class="token string">&quot;post&quot;</span> action<span class="token operator">=</span><span class="token string">&quot;https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&amp;method=alipay.trade.page.pay&amp;sign=J1BBEkS9SIRKTL9sdyFhJ4rUCkJL0HaSOnQ%2BIr5Iy9TdYUigoNfplYfSTFlfjHP8Fq5Me33k7LWNJUH0HzubXxL1vg7P1QOcgzG5K%2Bu5HzWDCkbG4TYhJ%2FOHjYw0nTeRdu%2BkEw%2FMfWr3y4YYpO5oUPEtFMjmvB1UrKmx2%2Buwx0zJk1qrpQWAOfmuS27hf2qda1SVUMs4vdNrKIEKZy1Fysaoo2J6Bqzw2CAFS1QtwN5wm2%2F%2F4uQpxA3TlV1%2BaDvh3Ve5NNTFhiREqW7QPNalFHI0AvGQq6MYKnamaEiNPTFMXUDVsOPFcVqsLZKSvovNlK1CPFp67ZfCTMZP%2BZK3Rw%3D%3D&amp;return_url=https%3A%2F%2Fgaga.plus&amp;notify_url=https%3A%2F%2Fxfg.natapp.cn%2Fapi%2Fv1%2Falipay%2Falipay_notify_url&amp;version=1.0&amp;app_id=9021000132689924&amp;sign_type=RSA2&amp;timestamp=2023-12-17+11%3A55%3A51&amp;alipay_sdk=alipay-sdk-java-4.38.157.ALL&amp;format=json&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;hidden&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;biz_content&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;{&amp;quot;out_trade_no&amp;quot;:&amp;quot;daniel82AAAA000032333361X03&amp;quot;,&amp;quot;total_amount&amp;quot;:&amp;quot;0.01&amp;quot;,&amp;quot;subject&amp;quot;:&amp;quot;测试商品&amp;quot;,&amp;quot;product_code&amp;quot;:&amp;quot;FAST_INSTANT_TRADE_PAY&amp;quot;}&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;立即支付&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;display:none&quot;</span> <span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
<span class="token generics"><span class="token punctuation">&lt;</span>script<span class="token punctuation">&gt;</span></span>document<span class="token punctuation">.</span>forms<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行后你会得到一份 HTML 脚本，这份脚本就可以在浏览器打开。</li><li>如果你想少量的存储信息，也可以把必要的数据存到数据库，不用全存储。</li></ul><h3 id="_2-前端代码" tabindex="-1"><a class="header-anchor" href="#_2-前端代码" aria-hidden="true">#</a> 2. 前端代码</h3><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-11.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-12.png?raw=true" width="750px"></div>`,9),T=n("li",null,"把后端运行生成的代码，粘贴到 form.html 文件中，之后点浏览器按钮运行打开。",-1),U={href:"https://open.alipay.com/develop/sandbox/account",target:"_blank",rel:"noopener noreferrer"},M=p('<blockquote><p>到这支付宝的沙箱申请和简单案例已经做完了，之后我们进入场景应用的训练。</p></blockquote><h2 id="四、场景介绍" tabindex="-1"><a class="header-anchor" href="#四、场景介绍" aria-hidden="true">#</a> 四、场景介绍</h2><p>支付，可以说是一个对接的渠道，那么结合到我们的实际场景中应该如何使用呢？比如流程的执行、订单的创建、数据的保存、回调的处理等，这些都是实际业务中要做的东西，接下来我们就做下这个场景学习。</p><h3 id="_1-支付界面" tabindex="-1"><a class="header-anchor" href="#_1-支付界面" aria-hidden="true">#</a> 1. 支付界面</h3><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-14.png?raw=true" width="550px"></div><h3 id="_2-业务流程" tabindex="-1"><a class="header-anchor" href="#_2-业务流程" aria-hidden="true">#</a> 2. 业务流程</h3><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-13.png?raw=true" width="750px"></div><h3 id="_3-库表设计" tabindex="-1"><a class="header-anchor" href="#_3-库表设计" aria-hidden="true">#</a> 3. 库表设计</h3><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-15.png?raw=true" width="750px"></div><h2 id="五、工程实现" tabindex="-1"><a class="header-anchor" href="#五、工程实现" aria-hidden="true">#</a> 五、工程实现</h2><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-24.png?raw=true" width="750px"></div>',11),B={href:"https://gitcode.net/KnowledgePlanet/ddd-scene-solution",target:"_blank",rel:"noopener noreferrer"},L=n("code",null,"星球内还包括了大量的实战项目；大营销平台、OpenAI项目、API网关、Lottery抽奖、IM通信、SpringBoot Starter 组件开发、IDEA Plugin 插件开发等",-1),Q=p(`<h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-16.png?raw=true" width="550px"></div><p>分层介绍：</p><ul><li>docs：这里提供了工程所需的资源，docker 安装 msyql、natapp 内网穿透【需要自己申请一个地址】、front 前端页面。</li><li>app：应用的启动层，处理 config 配置和 resources 资源加载。以及 test 模块的测试。</li><li>domain：领域层，处理核心业务逻辑。</li><li>infrastructure：基础设施层，如管理持久化数据。</li><li>trigger：触发器层，统一管理 http、mq、listener、job 等入口调用。</li></ul><h3 id="_2-环境安装" tabindex="-1"><a class="header-anchor" href="#_2-环境安装" aria-hidden="true">#</a> 2. 环境安装</h3><h4 id="_2-1-mysql" tabindex="-1"><a class="header-anchor" href="#_2-1-mysql" aria-hidden="true">#</a> 2.1 MySQL</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code># 命令执行 docker<span class="token operator">-</span>compose up <span class="token operator">-</span>d
version<span class="token operator">:</span> <span class="token char">&#39;3.9&#39;</span>
services<span class="token operator">:</span>
  mysql<span class="token operator">:</span>
    image<span class="token operator">:</span> mysql<span class="token operator">:</span><span class="token number">8.0</span><span class="token number">.32</span>
    container_name<span class="token operator">:</span> mysql
    command<span class="token operator">:</span> <span class="token operator">--</span><span class="token keyword">default</span><span class="token operator">-</span>authentication<span class="token operator">-</span>plugin<span class="token operator">=</span>mysql_native_password
    restart<span class="token operator">:</span> always
    environment<span class="token operator">:</span>
      <span class="token constant">TZ</span><span class="token operator">:</span> <span class="token class-name">Asia</span><span class="token operator">/</span><span class="token class-name">Shanghai</span>
      <span class="token constant">MYSQL_ROOT_PASSWORD</span><span class="token operator">:</span> <span class="token number">123456</span>
      <span class="token constant">MYSQL_USER</span><span class="token operator">:</span> xfg
      <span class="token constant">MYSQL_PASSWORD</span><span class="token operator">:</span> <span class="token number">123456</span>
    depends_on<span class="token operator">:</span>
      <span class="token operator">-</span> mysql<span class="token operator">-</span>job<span class="token operator">-</span>dbdata
    ports<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token string">&quot;13306:3306&quot;</span>
    volumes<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token punctuation">.</span>/sql<span class="token operator">:</span><span class="token operator">/</span>docker<span class="token operator">-</span>entrypoint<span class="token operator">-</span>initdb<span class="token punctuation">.</span>d
    volumes_from<span class="token operator">:</span>
      <span class="token operator">-</span> mysql<span class="token operator">-</span>job<span class="token operator">-</span>dbdata
    healthcheck<span class="token operator">:</span>
      test<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;CMD&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mysqladmin&quot;</span> <span class="token punctuation">,</span><span class="token string">&quot;ping&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-h&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;localhost&quot;</span> <span class="token punctuation">]</span>
      interval<span class="token operator">:</span> <span class="token number">5</span>s
      timeout<span class="token operator">:</span> <span class="token number">10</span>s
      retries<span class="token operator">:</span> <span class="token number">10</span>
      start_period<span class="token operator">:</span> <span class="token number">15</span>s
    networks<span class="token operator">:</span>
      <span class="token operator">-</span> my<span class="token operator">-</span>network

  # phpmyadmin https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>hub<span class="token punctuation">.</span>docker<span class="token punctuation">.</span>com<span class="token operator">/</span>_<span class="token operator">/</span>phpmyadmin
  phpmyadmin<span class="token operator">:</span>
    image<span class="token operator">:</span> phpmyadmin<span class="token operator">:</span><span class="token number">5.2</span><span class="token number">.1</span>
    container_name<span class="token operator">:</span> phpmyadmin
    hostname<span class="token operator">:</span> phpmyadmin
    ports<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token number">8899</span><span class="token operator">:</span><span class="token number">80</span>
    environment<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token constant">PMA_HOST</span><span class="token operator">=</span>mysql
      <span class="token operator">-</span> <span class="token constant">PMA_PORT</span><span class="token operator">=</span><span class="token number">3306</span>
      <span class="token operator">-</span> <span class="token constant">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123</span>qwe<span class="token operator">!</span>@#<span class="token constant">QWE</span>
    depends_on<span class="token operator">:</span>
      mysql<span class="token operator">:</span>
        condition<span class="token operator">:</span> service_healthy
    networks<span class="token operator">:</span>
      <span class="token operator">-</span> my<span class="token operator">-</span>network

  # 自动加载数据
  mysql<span class="token operator">-</span>job<span class="token operator">-</span>dbdata<span class="token operator">:</span>
    image<span class="token operator">:</span> alpine<span class="token operator">:</span><span class="token number">3.18</span><span class="token number">.2</span>
    container_name<span class="token operator">:</span> mysql<span class="token operator">-</span>job<span class="token operator">-</span>dbdata
    volumes<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>lib<span class="token operator">/</span>mysql

networks<span class="token operator">:</span>
  my<span class="token operator">-</span>network<span class="token operator">:</span>
    driver<span class="token operator">:</span> bridge
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>直接在 docker 下安装环境，安装时会自动的帮你把 dev-ops/mysql/sql 下的脚本创建到数据库中。</li><li>并且这里提供了 phpmyadmin 可以让你直接在线上就能管理数据库。</li><li>如果你本地有 msyql 8.x 那么可以直接导入数据库脚本。<code>dev-ops/mysql/sql/xfg-dev-tech-alipay-sandbox.sql</code></li></ul><h4 id="_2-2-内网穿透" tabindex="-1"><a class="header-anchor" href="#_2-2-内网穿透" aria-hidden="true">#</a> 2.2 内网穿透</h4>`,9),z={href:"https://natapp.cn/",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"内网穿透的主要作用就是让你的本地应用地址，可以被支付宝回调调用到",-1),Y=n("li",null,"开通自己的免费/付费渠道，用于内网穿透。本地内网穿透的地址，就可以被公网访问，也就是可以被支付回调。",-1),J={href:"https://natapp.cn/#download",target:"_blank",rel:"noopener noreferrer"},K=p(`<h3 id="_3-工程配置" tabindex="-1"><a class="header-anchor" href="#_3-工程配置" aria-hidden="true">#</a> 3. 工程配置</h3><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.config.AliPayConfig</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">AliPayConfigProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AliPayConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;alipayClient&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;alipay.enabled&quot;</span><span class="token punctuation">,</span> havingValue <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> matchIfMissing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">AlipayClient</span> <span class="token function">alipayClient</span><span class="token punctuation">(</span><span class="token class-name">AliPayConfigProperties</span> properties<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DefaultAlipayClient</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getGatewayUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                properties<span class="token punctuation">.</span><span class="token function">getApp_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                properties<span class="token punctuation">.</span><span class="token function">getMerchant_private_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                properties<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                properties<span class="token punctuation">.</span><span class="token function">getCharset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                properties<span class="token punctuation">.</span><span class="token function">getAlipay_public_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                properties<span class="token punctuation">.</span><span class="token function">getSign_type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># application-dev.yml</span>
<span class="token comment"># 支付宝支付 - 沙箱 https://opendocs.alipay.com/common/02kkv7</span>
<span class="token key atrule">alipay</span><span class="token punctuation">:</span>
  <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">app_id</span><span class="token punctuation">:</span> <span class="token number">9021000132689924</span>
  <span class="token key atrule">merchant_private_key</span><span class="token punctuation">:</span>
  <span class="token key atrule">alipay_public_key</span><span class="token punctuation">:</span> 
  <span class="token key atrule">notify_url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//xfg<span class="token punctuation">-</span>studio.natapp1.cc/api/v1/alipay/pay_notify
  <span class="token key atrule">return_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gaga.plus
  <span class="token key atrule">gatewayUrl</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//openapi<span class="token punctuation">-</span>sandbox.dl.alipaydev.com/gateway.do
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>你可以参照【简单案例】配置以上内容，包括；app_id、merchant_private_key、alipay_public_key、notify_url 这些参数。</li></ul><h3 id="_4-代码实现" tabindex="-1"><a class="header-anchor" href="#_4-代码实现" aria-hidden="true">#</a> 4. 代码实现</h3><h4 id="_4-1-订单服务" tabindex="-1"><a class="header-anchor" href="#_4-1-订单服务" aria-hidden="true">#</a> 4.1 订单服务</h4><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.domain.service.IOrderService</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IOrderService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 通过购物车实体对象，创建支付单实体（用于支付）—— 所有的订单下单都从购物车开始触发
     *
     * <span class="token keyword">@param</span> <span class="token parameter">shopCartEntity</span> 购物车实体
     * <span class="token keyword">@return</span> 支付单实体
     */</span>
    <span class="token class-name">PayOrderEntity</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">ShopCartEntity</span> shopCartEntity<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 更新订单状态
     * <span class="token keyword">@param</span> <span class="token parameter">orderId</span> 订单ID
     */</span>
    <span class="token keyword">void</span> <span class="token function">changeOrderPaySuccess</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-模板模式" tabindex="-1"><a class="header-anchor" href="#_4-2-模板模式" aria-hidden="true">#</a> 4.2 模板模式</h4><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.domain.service.AbstractOrderService</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">PayOrderEntity</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">ShopCartEntity</span> shopCartEntity<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
    <span class="token comment">// 1. 查询当前用户是否存在掉单和未支付订单</span>
    <span class="token class-name">OrderEntity</span> unpaidOrderEntity <span class="token operator">=</span> repository<span class="token punctuation">.</span><span class="token function">queryUnPayOrder</span><span class="token punctuation">(</span>shopCartEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> unpaidOrderEntity <span class="token operator">&amp;&amp;</span> <span class="token class-name">OrderStatusVO</span><span class="token punctuation">.</span><span class="token constant">PAY_WAIT</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>unpaidOrderEntity<span class="token punctuation">.</span><span class="token function">getOrderStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;创建订单-存在，已存在未支付订单。userId:{} productId:{} orderId:{}&quot;</span><span class="token punctuation">,</span> shopCartEntity<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> shopCartEntity<span class="token punctuation">.</span><span class="token function">getProductId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> unpaidOrderEntity<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">PayOrderEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">orderId</span><span class="token punctuation">(</span>unpaidOrderEntity<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">payUrl</span><span class="token punctuation">(</span>unpaidOrderEntity<span class="token punctuation">.</span><span class="token function">getPayUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> unpaidOrderEntity <span class="token operator">&amp;&amp;</span> <span class="token class-name">OrderStatusVO</span><span class="token punctuation">.</span><span class="token constant">CREATE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>unpaidOrderEntity<span class="token punctuation">.</span><span class="token function">getOrderStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;创建订单-存在，存在未创建支付单订单，创建支付单开始 userId:{} productId:{} orderId:{}&quot;</span><span class="token punctuation">,</span> shopCartEntity<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> shopCartEntity<span class="token punctuation">.</span><span class="token function">getProductId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> unpaidOrderEntity<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PayOrderEntity</span> payOrderEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doPrepayOrder</span><span class="token punctuation">(</span>shopCartEntity<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> shopCartEntity<span class="token punctuation">.</span><span class="token function">getProductId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> unpaidOrderEntity<span class="token punctuation">.</span><span class="token function">getProductName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> unpaidOrderEntity<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> unpaidOrderEntity<span class="token punctuation">.</span><span class="token function">getTotalAmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">PayOrderEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">orderId</span><span class="token punctuation">(</span>payOrderEntity<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">payUrl</span><span class="token punctuation">(</span>payOrderEntity<span class="token punctuation">.</span><span class="token function">getPayUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
    <span class="token comment">// 2. 查询商品 &amp; 聚合订单</span>
    <span class="token class-name">ProductEntity</span> productEntity <span class="token operator">=</span> repository<span class="token punctuation">.</span><span class="token function">queryProductByProductId</span><span class="token punctuation">(</span>shopCartEntity<span class="token punctuation">.</span><span class="token function">getProductId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">OrderEntity</span> orderEntity <span class="token operator">=</span> <span class="token class-name">OrderEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">productId</span><span class="token punctuation">(</span>productEntity<span class="token punctuation">.</span><span class="token function">getProductId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">productName</span><span class="token punctuation">(</span>productEntity<span class="token punctuation">.</span><span class="token function">getProductName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orderId</span><span class="token punctuation">(</span><span class="token class-name">RandomStringUtils</span><span class="token punctuation">.</span><span class="token function">randomNumeric</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orderTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orderStatus</span><span class="token punctuation">(</span><span class="token class-name">OrderStatusVO</span><span class="token punctuation">.</span><span class="token constant">CREATE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CreateOrderAggregate</span> orderAggregate <span class="token operator">=</span> <span class="token class-name">CreateOrderAggregate</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span>shopCartEntity<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">productEntity</span><span class="token punctuation">(</span>productEntity<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orderEntity</span><span class="token punctuation">(</span>orderEntity<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
    <span class="token comment">// 3. 保存订单 - 保存一份订单，再用订单生成ID生成支付单信息</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSaveOrder</span><span class="token punctuation">(</span>orderAggregate<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
    <span class="token comment">// 4. 创建支付单</span>
    <span class="token class-name">PayOrderEntity</span> payOrderEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doPrepayOrder</span><span class="token punctuation">(</span>shopCartEntity<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> productEntity<span class="token punctuation">.</span><span class="token function">getProductId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> productEntity<span class="token punctuation">.</span><span class="token function">getProductName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> orderEntity<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> productEntity<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;创建订单-完成，生成支付单。userId: {} orderId: {} payUrl: {}&quot;</span><span class="token punctuation">,</span> shopCartEntity<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> orderEntity<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> payOrderEntity<span class="token punctuation">.</span><span class="token function">getPayUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
    <span class="token keyword">return</span> <span class="token class-name">PayOrderEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orderId</span><span class="token punctuation">(</span>payOrderEntity<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">payUrl</span><span class="token punctuation">(</span>payOrderEntity<span class="token punctuation">.</span><span class="token function">getPayUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>通过模板模式，定义出整个下单过程的标准流程和抽象方法。</li></ul><h4 id="_4-3-支付接口" tabindex="-1"><a class="header-anchor" href="#_4-3-支付接口" aria-hidden="true">#</a> 4.3 支付接口</h4><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.trigger.http.AliPayController#createParOrder</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;create_pay_order&quot;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">createParOrder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> userId<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> productId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;商品下单，根据商品ID创建支付单开始 userId:{} productId:{}&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">,</span> productId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ShopCartEntity</span> shopCartEntity <span class="token operator">=</span> <span class="token class-name">ShopCartEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">productId</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PayOrderEntity</span> payOrderEntity <span class="token operator">=</span> orderService<span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span>shopCartEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;商品下单，根据商品ID创建支付单完成 userId:{} productId:{} orderId:{}&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">,</span> productId<span class="token punctuation">,</span> payOrderEntity<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Response</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">ResponseCode</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">ResponseCode</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>payOrderEntity<span class="token punctuation">.</span><span class="token function">getPayUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;商品下单，根据商品ID创建支付单失败 userId:{} productId:{}&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">,</span> productId<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Response</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">ResponseCode</span><span class="token punctuation">.</span><span class="token constant">UN_ERROR</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">ResponseCode</span><span class="token punctuation">.</span><span class="token constant">UN_ERROR</span><span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),Z={href:"http://localhost:8091/api/v1/alipay/create_pay_order?userId=1001&productId=100001",target:"_blank",rel:"noopener noreferrer"},H=n("li",null,"说明：这里模拟了一个调用接口进行创建支付单的实现。",-1),W=p(`<h4 id="_4-4-回调接口" tabindex="-1"><a class="header-anchor" href="#_4-4-回调接口" aria-hidden="true">#</a> 4.4 回调接口</h4><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.trigger.http.AliPayController#payNotify</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;pay_notify&quot;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">payNotify</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，消息接收 {}&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;trade_status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;trade_status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;TRADE_SUCCESS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> requestParams <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> name <span class="token operator">:</span> requestParams<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">String</span> tradeNo <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;out_trade_no&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> gmtPayment <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;gmt_payment&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> alipayTradeNo <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;trade_no&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> sign <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;sign&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token class-name">AlipaySignature</span><span class="token punctuation">.</span><span class="token function">getSignCheckContentV1</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> checkSignature <span class="token operator">=</span> <span class="token class-name">AlipaySignature</span><span class="token punctuation">.</span><span class="token function">rsa256CheckContent</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> sign<span class="token punctuation">,</span> alipayPublicKey<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 验证签名</span>
            <span class="token comment">// 支付宝验签</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>checkSignature<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 验签通过</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，交易名称: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;subject&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，交易状态: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;trade_status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，支付宝交易凭证号: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;trade_no&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，商户订单号: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;out_trade_no&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，交易金额: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;total_amount&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，买家在支付宝唯一id: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;buyer_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，买家付款时间: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;gmt_payment&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，买家付款金额: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;buyer_pay_amount&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，支付回调，更新订单 {}&quot;</span><span class="token punctuation">,</span> tradeNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 更新订单未已支付</span>
                orderService<span class="token punctuation">.</span><span class="token function">changeOrderPaySuccess</span><span class="token punctuation">(</span>tradeNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 推送消息【自己的业务场景中可以使用MQ消息】</span>
                eventBus<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>tradeNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;支付回调，处理失败&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),G={href:"http://xfg-studio.natapp1.cc/api/v1/alipay/pay_notify",target:"_blank",rel:"noopener noreferrer"},X=n("li",null,"说明 ：回调是支付宝调用我们的接口。默认是 https://localhost:8091 因为使用了 natapp 就可以把本地的地址+端口，映射到一个 natapp 内网穿透地址。所以地址为：http://xfg-studio.natapp1.cc/api/v1/alipay/pay_notify",-1),$=p(`<h2 id="六、功能验证" tabindex="-1"><a class="header-anchor" href="#六、功能验证" aria-hidden="true">#</a> 六、功能验证</h2><h3 id="_1-前置" tabindex="-1"><a class="header-anchor" href="#_1-前置" aria-hidden="true">#</a> 1. 前置</h3><ol><li>安装 MySQL 8.0 数据库 + 初始化库表。如果你是低版本的数据库，需要自己创建下库表。</li><li>打开 natapp.cn 配置一个自己的内网穿透渠道，渠道内配置工程映射地址 8091 如果你是其他端口则配置为其他的地址即可。之后本地启动 natapp</li><li>启动 xfg-dev-tech-alipay-sandbox 应用。</li></ol><h3 id="_2-测试" tabindex="-1"><a class="header-anchor" href="#_2-测试" aria-hidden="true">#</a> 2. 测试</h3><h4 id="_2-1-启动-natapp" tabindex="-1"><a class="header-anchor" href="#_2-1-启动-natapp" aria-hidden="true">#</a> 2.1 启动 natapp</h4><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-17.png?raw=true" width="650px"></div><h4 id="_2-2-启动工程" tabindex="-1"><a class="header-anchor" href="#_2-2-启动工程" aria-hidden="true">#</a> 2.2 启动工程</h4><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-18.png?raw=true" width="650px"></div><h4 id="_2-3-下单页面" tabindex="-1"><a class="header-anchor" href="#_2-3-下单页面" aria-hidden="true">#</a> 2.3 下单页面</h4><p>进入到工程 docs/dev-ops/front 下，打开 index.html 文件。点击下单，这个时候你会进入到支付页面。</p><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-19.png?raw=true" width="650px"></div><h4 id="_2-4-商品支付" tabindex="-1"><a class="header-anchor" href="#_2-4-商品支付" aria-hidden="true">#</a> 2.4 商品支付</h4><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-20.png?raw=true" width="650px"></div><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-21.png?raw=true" width="650px"></div><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-22.png?raw=true" width="650px"></div><h4 id="_2-5-库表数据" tabindex="-1"><a class="header-anchor" href="#_2-5-库表数据" aria-hidden="true">#</a> 2.5 库表数据</h4><div align="center"><img src="https://bugstack.cn/images/article/project/ddd-scene-solution/alipay-sandbox-23.png?raw=true" width="650px"></div><h3 id="_3-日志" tabindex="-1"><a class="header-anchor" href="#_3-日志" aria-hidden="true">#</a> 3. 日志</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">55.692</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 商品下单，根据商品<span class="token constant">ID</span>创建支付单开始 userId<span class="token operator">:</span>xiaofuge productId<span class="token operator">:</span><span class="token number">100010090091</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">55.908</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AbstractOrderService</span>   <span class="token operator">-</span> 创建订单<span class="token operator">-</span>完成，生成支付单。userId<span class="token operator">:</span> xiaofuge orderId<span class="token operator">:</span> <span class="token number">1620564694789743</span> payUrl<span class="token operator">:</span> <span class="token operator">&lt;</span>form name<span class="token operator">=</span><span class="token string">&quot;punchout_form&quot;</span> method<span class="token operator">=</span><span class="token string">&quot;post&quot;</span> action<span class="token operator">=</span><span class="token string">&quot;https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&amp;method=alipay.trade.page.pay&amp;sign=dh959MC1wu4JD%2B5%2Fxs5HMLaapqFB2zpH5ceDI5B9tIDsNxq22lRawhQcBL%2BNt8zKpb%2BB9fua5VJnm6PGnq0GRqpE2CIwb99stQuTbwyZDRtRq327Dm%2FvQTXw5vil%2FrIkRC9j8SRH9sCk5ZdiedQqoCXZfacNK2dO87T%2BrOACJDT1RkGxJNl4aZ%2FJCrZlGuEcXccc%2BrZVVRY9spBLXOLJwwNcDZkqJtFkxbZUJbZ86hfkW4ihIDf2Q7nMwTyobyINnNgkbfk2z2dxeK8YAccp16Z5P9uMGvhlIqF6u5itcsFFsxoR43n8%2Fj77aKsFbfLUftJ%2BGpEUEY4smAfSV0eyxw%3D%3D&amp;return_url=https%3A%2F%2Fgaga.plus&amp;notify_url=http%3A%2F%2Fxfg-studio.natapp1.cc%2Fapi%2Fv1%2Falipay%2Fpay_notify&amp;version=1.0&amp;app_id=9021000132689924&amp;sign_type=RSA2&amp;timestamp=2023-12-17+15%3A11%3A55&amp;alipay_sdk=alipay-sdk-java-4.38.157.ALL&amp;format=json&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;hidden&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;biz_content&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;{&amp;quot;out_trade_no&amp;quot;:&amp;quot;1620564694789743&amp;quot;,&amp;quot;total_amount&amp;quot;:&amp;quot;1.68&amp;quot;,&amp;quot;subject&amp;quot;:&amp;quot;测试商品&amp;quot;,&amp;quot;product_code&amp;quot;:&amp;quot;FAST_INSTANT_TRADE_PAY&amp;quot;}&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;立即支付&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;display:none&quot;</span> <span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
<span class="token generics"><span class="token punctuation">&lt;</span>script<span class="token punctuation">&gt;</span></span>document<span class="token punctuation">.</span>forms<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">55.909</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 商品下单，根据商品<span class="token constant">ID</span>创建支付单完成 userId<span class="token operator">:</span>xiaofuge productId<span class="token operator">:</span><span class="token number">100010090091</span> orderId<span class="token operator">:</span><span class="token number">1620564694789743</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.553</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 支付回调，消息接收 <span class="token constant">TRADE_SUCCESS</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.558</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 支付回调，交易名称<span class="token operator">:</span> 测试商品
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.558</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 支付回调，交易状态<span class="token operator">:</span> <span class="token constant">TRADE_SUCCESS</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.558</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 支付回调，支付宝交易凭证号<span class="token operator">:</span> <span class="token number">2023121722001413370501437659</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.558</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 支付回调，商户订单号<span class="token operator">:</span> <span class="token number">1620564694789743</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.558</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 支付回调，交易金额<span class="token operator">:</span> <span class="token number">1.68</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.562</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 支付回调，买家在支付宝唯一id<span class="token operator">:</span> <span class="token number">2088722024513370</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.562</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 支付回调，买家付款时间<span class="token operator">:</span> <span class="token number">2023</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">35</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.562</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 支付回调，买家付款金额<span class="token operator">:</span> <span class="token number">1.68</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.562</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">AliPayController</span>       <span class="token operator">-</span> 支付回调，支付回调，更新订单 <span class="token number">1620564694789743</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">17.15</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">37.584</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8091</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">OrderPaySuccessListener</span> <span class="token operator">-</span> 收到支付成功消息，可以做接下来的事情了【发货、充值、开会员】orderId：<span class="token number">1620564694789743</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以上为整个项目运行过程所产生的日志数据。通过日志可清楚知道每一步的操作过程。</li></ul><h2 id="七、加入学习" tabindex="-1"><a class="header-anchor" href="#七、加入学习" aria-hidden="true">#</a> 七、加入学习</h2><p><strong>注意</strong>📢，本项目也只是【星球：码农会锁】众多项目中的1个，其他的项目还包括：大营销平台系统、OpenAI 大模型应用、API网关、Lottery抽奖、IM通信、SpringBoot Starter 组件开发、IDEA Plugin 插件开发等，并还有开源项目学习。</p><p>如果大家希望通过做有价值的编程项目，提高自己的编程思维和编码能力，可以加入小傅哥的【星球：码农会锁】。加入后解锁🔓所有往期项目，还可以学习后续新开发的项目。</p><blockquote><p>这样一套项目，放在一些平台售卖，至少上千元。但小傅哥的星球，只需要100多，就可以获得全部学习项目！</p></blockquote><div align="center"><img src="https://bugstack.cn/images/article/zsxq/zsxq-youhuiquan.png?raw=true" width="350px"></div>`,25),nn={href:"https://gaga.plus",target:"_blank",rel:"noopener noreferrer"};function sn(an,tn){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("作者：小傅哥 "),r,s("博客："),n("a",k,[s("https://bugstack.cn"),t(a)])]),d,m,v,n("blockquote",null,[n("p",null,[s("文末提供了「星球：码农会锁」优惠加入学习方式，不仅可以学习碎片化的即使知识，还可以综合锻炼实战项目。项目演示地址："),n("a",b,[s("https://gaga.plus"),t(a)])])]),g,n("p",null,[h,s(" 地址："),n("a",y,[s("https://open.alipay.com/develop/manage"),t(a)]),s(" - "),f]),_,q,s(" - 开启沙箱应用以后，还需要下载支付宝秘钥工具。秘钥工具创建的秘钥，需要填写到查看中。 - 📢 【沙箱账号】，里面提供了后续在网页上支付时，输入的账号、密码和支付密码。 - 📢 【沙箱工具】，里面提供了安卓版测试软件，可以在手机扫码支付。 "),w,n("p",null,[x,s(" 地址："),n("a",I,[s("https://opendocs.alipay.com/common/02kipk"),t(a)]),s(" - "),S,s(" 在文档的介绍中，也有很详细的说明。")]),O,n("ul",null,[n("li",null,[s("app_id：应用ID - 您的APPID，收款账号既是你的APPID对应支付宝账号。获取地址；"),n("a",A,[s("https://open.alipay.com/develop/sandbox/app"),t(a)])]),E,P,C,j,F,D,N]),R,n("ul",null,[T,n("li",null,[s("打开后，会跳转到支付宝支付页面，之后你可以从【支付宝 | 开放平台】沙箱账号中获取你的账号信息。地址："),n("a",U,[s("https://open.alipay.com/develop/sandbox/account"),t(a)])])]),M,n("p",null,[s("此项目为「星球：码农会锁」小场景训练营的一部分 —— 地址："),n("a",B,[s("https://gitcode.net/KnowledgePlanet/ddd-scene-solution"),t(a)]),s(" - "),L]),Q,n("p",null,[s("登录："),n("a",z,[s("https://natapp.cn/"),t(a)]),s(" - "),V]),n("ol",null,[Y,n("li",null,[s("开通后，登录后复制自己的渠道 token 粘贴到 config.ini 文件 authtoken 下。如果是Windows电脑，可以自己在官网下载。地址："),n("a",J,[s("https://natapp.cn/#download"),t(a)])])]),K,n("ul",null,[n("li",null,[s("地址："),n("a",Z,[s("http://localhost:8091/api/v1/alipay/create_pay_order?userId=1001&productId=100001"),t(a)])]),H]),W,n("ul",null,[n("li",null,[s("地址："),n("a",G,[s("http://xfg-studio.natapp1.cc/api/v1/alipay/pay_notify"),t(a)])]),X]),$,n("p",null,[s("加入后即可解锁全部学习资源，项目演示地址："),n("a",nn,[s("https://gaga.plus"),t(a)])])])}const en=e(i,[["render",sn],["__file","alipay-sandbox.html.vue"]]);export{en as default};
