import{_ as p,r as c,o,c as l,a as n,b as s,d as e,e as t}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"重学-java-设计模式-实战策略模式「模拟多种营销类型优惠券-折扣金额计算策略场景」",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#重学-java-设计模式-实战策略模式「模拟多种营销类型优惠券-折扣金额计算策略场景」","aria-hidden":"true"},"#"),s(" 重学 Java 设计模式：实战策略模式「模拟多种营销类型优惠券，折扣金额计算策略场景」")],-1),d=n("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},r=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=213924695&bvid=BV1oa411E7Fj&cid=717980624&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),v=t('<h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>文无第一，武无第二</code></p><p>不同方向但同样努力的人，都有自身的价值和亮点，也都是可以互相学习的。不要太过于用自己手里的矛去攻击别人的盾🛡，哪怕一时争辩过了也多半可能是你被安放的角色不同。取别人之强补自己之弱，矛与盾的结合可能就是坦克。</p><p><code>能把复杂的知识讲的简单很重要</code></p><p>在学习的过程中我们看过很多资料、视频、文档等，因为现在资料视频都较多所以往往一个知识点会有多种多样的视频形式讲解。除了推广营销以外，确实有很多人的视频讲解非常优秀，例如李永乐老师的短视频课，可以在一个黑板上把那么复杂的知识，讲解的那么容易理解，那么透彻。而我们学习编程的人也是，不只是要学会把知识点讲明白，也要写明白。</p><p><code>🙉提升自己的眼界交往更多同好</code></p><p>有时候圈子很重要，就像上学期间大家都会发现班里有这样一类学生👩‍🎓不怎么听课，但是就是学习好。那假如让他回家呆着，不能在课堂里呢？类似的圈子还有；图书馆、网吧、车友群、技术群等等，都可以给你带来同类爱好的人所分享出来的技能或者大家一起烘托出的氛围帮你成长。</p><h2 id="二、开发环境" tabindex="-1"><a class="header-anchor" href="#二、开发环境" aria-hidden="true">#</a> 二、开发环境</h2>',8),b=n("li",null,"JDK 1.8",-1),g=n("li",null,"Idea + Maven",-1),h=n("strong",null,"公众号",-1),w={href:"https://bugstack.cn/assets/images/qrcode.png",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"bugstack虫洞栈",-1),f=n("code",null,"源码下载",-1),D=t('<table><thead><tr><th>工程</th><th>描述</th></tr></thead><tbody><tr><td>itstack-demo-design-20-01</td><td>使用一坨代码实现业务需求</td></tr><tr><td>itstack-demo-design-20-02</td><td>通过设计模式优化改造代码，产生对比性从而学习</td></tr></tbody></table><h2 id="三、策略模式介绍" tabindex="-1"><a class="header-anchor" href="#三、策略模式介绍" aria-hidden="true">#</a> 三、策略模式介绍</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-20-01.png" alt="策略模式，图片来自 refactoringguru.cn"></p>',3),_={href:"https://refactoringguru.cn/design-patterns/strategy",target:"_blank",rel:"noopener noreferrer"},x=t(`<p>策略模式是一种行为模式，也是替代大量<code>ifelse</code>的利器。它所能帮你解决的是场景，一般是具有同类可替代的行为逻辑算法场景。比如；不同类型的交易方式(信用卡、支付宝、微信)、生成唯一ID策略(UUID、DB自增、DB+Redis、雪花算法、Leaf算法)等，都可以使用策略模式进行行为包装，供给外部使用。</p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-20-02.png" alt="诸葛亮锦囊妙计"></p><p>策略模式也有点像三国演义中诸葛亮给刘关张的锦囊；</p><ul><li>第一个锦囊：见乔国老，并把刘备娶亲的事情搞得东吴人尽皆知。</li><li>第二个锦囊：用谎言（曹操打荆州）骗泡在温柔乡里的刘备回去。</li><li>第三个锦囊：让孙夫人摆平东吴的追兵，她是孙权妹妹，东吴将领惧她三分。</li></ul><h2 id="四、案例场景模拟" tabindex="-1"><a class="header-anchor" href="#四、案例场景模拟" aria-hidden="true">#</a> 四、案例场景模拟</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-20-03.png" alt="场景模拟；商品支付使用营销优惠券"></p><p><strong>在本案例中我们模拟在购买商品时候使用的各种类型优惠券(满减、直减、折扣、n元购)</strong></p><p>这个场景几乎也是大家的一个日常购物省钱渠道，购买商品的时候都希望找一些优惠券，让购买的商品更加实惠。而且到了大促的时候就会有更多的优惠券需要计算那些商品一起购买更加优惠！！！</p><p>这样的场景有时候用户用起来还是蛮爽的，但是最初这样功能的设定以及产品的不断迭代，对于程序员👨‍💻‍开发还是不太容易的。因为这里包括了很多的规则和优惠逻辑，所以我们模拟其中的一个计算优惠的方式，使用策略模式来实现。</p><h2 id="五、用一坨坨代码实现" tabindex="-1"><a class="header-anchor" href="#五、用一坨坨代码实现" aria-hidden="true">#</a> 五、用一坨坨代码实现</h2><p><code>这里我们先使用最粗暴的方式来实现功能</code></p><p>对于优惠券的设计最初可能非常简单，就是一个金额的抵扣，也没有现在这么多种类型。所以如果没有这样场景的经验话，往往设计上也是非常简单的。但随着产品功能的不断迭代，如果程序最初设计的不具备很好的扩展性，那么往后就会越来越混乱。</p><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">20</span><span class="token operator">-</span><span class="token number">01</span>
└── src
    └── main
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
                └── <span class="token class-name">CouponDiscountService</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>一坨坨</code>工程的结构很简单，也是最直接的面向过程开发方式。</li></ul><h3 id="_2-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-代码实现" aria-hidden="true">#</a> 2. 代码实现</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 博客：https://bugstack.cn - 沉淀、分享、成长，让自己和他人都能有所收获！
 * 公众号：bugstack虫洞栈
 * Create by 小傅哥(fustack) @2020
 * 优惠券折扣计算接口
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * 优惠券类型；
 * 1. 直减券
 * 2. 满减券
 * 3. 折扣券
 * 4. n元购
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CouponDiscountService</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">discountAmount</span><span class="token punctuation">(</span><span class="token keyword">int</span> type<span class="token punctuation">,</span> <span class="token keyword">double</span> typeContent<span class="token punctuation">,</span> <span class="token keyword">double</span> skuPrice<span class="token punctuation">,</span> <span class="token keyword">double</span> typeExt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1. 直减券</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> skuPrice <span class="token operator">-</span> typeContent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2. 满减券</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">==</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>skuPrice <span class="token operator">&lt;</span> typeExt<span class="token punctuation">)</span> <span class="token keyword">return</span> skuPrice<span class="token punctuation">;</span>
            <span class="token keyword">return</span> skuPrice <span class="token operator">-</span> typeContent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3. 折扣券</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">==</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> skuPrice <span class="token operator">*</span> typeContent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4. n元购</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">==</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> typeContent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">0D</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以上是不同类型的优惠券计算折扣后的实际金额。</li><li>入参包括；优惠券类型、优惠券金额、商品金额，因为有些优惠券是满多少减少多少，所以增加了<code>typeExt</code>类型。这也是方法的不好扩展性问题。</li><li>最后是整个的方法体中对优惠券抵扣金额的实现，最开始可能是一个最简单的优惠券，后面随着产品功能的增加，不断的扩展<code>if</code>语句。实际的代码可能要比这个多很多。</li></ul><h2 id="六、策略模式重构代码" tabindex="-1"><a class="header-anchor" href="#六、策略模式重构代码" aria-hidden="true">#</a> 六、策略模式重构代码</h2><p><code>接下来使用策略模式来进行代码优化，也算是一次很小的重构。</code></p><p>与上面面向流程式的开发这里会使用设计模式，优惠代码结构，增强整体的扩展性。</p><h3 id="_1-工程结构-1" tabindex="-1"><a class="header-anchor" href="#_1-工程结构-1" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">20</span><span class="token operator">-</span><span class="token number">02</span>
└── src
    └── main
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
                ├── event
                │    └── <span class="token class-name">MJCouponDiscount</span><span class="token punctuation">.</span>java
                │    └── <span class="token class-name">NYGCouponDiscount</span><span class="token punctuation">.</span>java
                │    └── <span class="token class-name">ZJCouponDiscount</span><span class="token punctuation">.</span>java
                │    └── <span class="token class-name">ZKCouponDiscount</span><span class="token punctuation">.</span>java
                ├── <span class="token class-name">Context</span><span class="token punctuation">.</span>java
                └── <span class="token class-name">ICouponDiscount</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>策略模式模型结构</strong></p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-20-04.png" alt="策略模式模型结构"></p><ul><li>整体的结构模式并不复杂，主要体现的不同类型的优惠券在计算优惠券方式的不同计算策略。</li><li>这里包括一个接口类(<code>ICouponDiscount</code>)以及四种优惠券类型的实现方式。</li><li>最后提供了策略模式的上下控制类处理，整体的策略服务。</li></ul><h3 id="_2-代码实现-1" tabindex="-1"><a class="header-anchor" href="#_2-代码实现-1" aria-hidden="true">#</a> 2. 代码实现</h3><h4 id="_2-1-优惠券接口" tabindex="-1"><a class="header-anchor" href="#_2-1-优惠券接口" aria-hidden="true">#</a> 2.1 优惠券接口</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ICouponDiscount</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 优惠券金额计算
     * <span class="token keyword">@param</span> <span class="token parameter">couponInfo</span> 券折扣信息；直减、满减、折扣、N元购
     * <span class="token keyword">@param</span> <span class="token parameter">skuPrice</span>   sku金额
     * <span class="token keyword">@return</span>           优惠后金额
     */</span>
    <span class="token class-name">BigDecimal</span> <span class="token function">discountAmount</span><span class="token punctuation">(</span><span class="token class-name">T</span> couponInfo<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> skuPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>定义了优惠券折扣接口，也增加了泛型用于不同类型的接口可以传递不同的类型参数。</li><li>接口中包括商品金额以及出参返回最终折扣后的金额，这里在实际开发中会比现在的接口参数多一些，但核心逻辑是这些。</li></ul><h4 id="_2-2-优惠券接口实现" tabindex="-1"><a class="header-anchor" href="#_2-2-优惠券接口实现" aria-hidden="true">#</a> 2.2 优惠券接口实现</h4><p><strong>满减</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MJCouponDiscount</span> <span class="token keyword">implements</span> <span class="token class-name">ICouponDiscount</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span>  <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 满减计算
     * 1. 判断满足x元后-n元，否则不减
     * 2. 最低支付金额1元
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">discountAmount</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> couponInfo<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> skuPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> x <span class="token operator">=</span> couponInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> o <span class="token operator">=</span> couponInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 小于商品金额条件的，直接返回商品原价</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>skuPrice<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> skuPrice<span class="token punctuation">;</span>
        <span class="token comment">// 减去优惠金额判断</span>
        <span class="token class-name">BigDecimal</span> discountAmount <span class="token operator">=</span> skuPrice<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>discountAmount<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ONE</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> discountAmount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>直减</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZJCouponDiscount</span> <span class="token keyword">implements</span> <span class="token class-name">ICouponDiscount</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span>  <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 直减计算
     * 1. 使用商品价格减去优惠价格
     * 2. 最低支付金额1元
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">discountAmount</span><span class="token punctuation">(</span><span class="token class-name">Double</span> couponInfo<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> skuPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BigDecimal</span> discountAmount <span class="token operator">=</span> skuPrice<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>couponInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>discountAmount<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ONE</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> discountAmount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>折扣</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZKCouponDiscount</span> <span class="token keyword">implements</span> <span class="token class-name">ICouponDiscount</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>


    <span class="token doc-comment comment">/**
     * 折扣计算
     * 1. 使用商品价格乘以折扣比例，为最后支付金额
     * 2. 保留两位小数
     * 3. 最低支付金额1元
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">discountAmount</span><span class="token punctuation">(</span><span class="token class-name">Double</span> couponInfo<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> skuPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BigDecimal</span> discountAmount <span class="token operator">=</span> skuPrice<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>couponInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ROUND_HALF_UP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>discountAmount<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ONE</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> discountAmount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>N元购</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NYGCouponDiscount</span> <span class="token keyword">implements</span> <span class="token class-name">ICouponDiscount</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * n元购购买
     * 1. 无论原价多少钱都固定金额购买
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">discountAmount</span><span class="token punctuation">(</span><span class="token class-name">Double</span> couponInfo<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> skuPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>couponInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以上是四种不同类型的优惠券计算折扣金额的策略方式，可以从代码中看到每一种优惠方式的优惠金额。</li></ul><h4 id="_2-3-策略控制类" tabindex="-1"><a class="header-anchor" href="#_2-3-策略控制类" aria-hidden="true">#</a> 2.3 策略控制类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Context</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ICouponDiscount</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> couponDiscount<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Context</span><span class="token punctuation">(</span><span class="token class-name">ICouponDiscount</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> couponDiscount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>couponDiscount <span class="token operator">=</span> couponDiscount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">discountAmount</span><span class="token punctuation">(</span><span class="token class-name">T</span> couponInfo<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> skuPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> couponDiscount<span class="token punctuation">.</span><span class="token function">discountAmount</span><span class="token punctuation">(</span>couponInfo<span class="token punctuation">,</span> skuPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>策略模式的控制类主要是外部可以传递不同的策略实现，在通过统一的方法执行优惠策略计算。</li><li>另外这里也可以包装成map结构，让外部只需要对应的泛型类型即可使用相应的服务。</li></ul><h3 id="_3-测试验证" tabindex="-1"><a class="header-anchor" href="#_3-测试验证" aria-hidden="true">#</a> 3. 测试验证</h3><h4 id="_3-1-编写测试类-直减优惠" tabindex="-1"><a class="header-anchor" href="#_3-1-编写测试类-直减优惠" aria-hidden="true">#</a> 3.1 编写测试类(直减优惠)</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_zj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 直减；100-10，商品100元</span>
    <span class="token class-name">Context</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ZJCouponDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BigDecimal</span> discountAmount <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">discountAmount</span><span class="token punctuation">(</span><span class="token number">10D</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：直减优惠后金额 {}&quot;</span><span class="token punctuation">,</span> discountAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试结果</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">15</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">22.035</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：直减优惠后金额 <span class="token number">90</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-编写测试类-满减优惠" tabindex="-1"><a class="header-anchor" href="#_3-2-编写测试类-满减优惠" aria-hidden="true">#</a> 3.2 编写测试类(满减优惠)</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_mj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 满100减10，商品100元</span>
    <span class="token class-name">Context</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MJCouponDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> mapReq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mapReq<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;100&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mapReq<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BigDecimal</span> discountAmount <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">discountAmount</span><span class="token punctuation">(</span>mapReq<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：满减优惠后金额 {}&quot;</span><span class="token punctuation">,</span> discountAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试结果</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">15</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">42.695</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：满减优惠后金额 <span class="token number">90</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-编写测试类-折扣优惠" tabindex="-1"><a class="header-anchor" href="#_3-3-编写测试类-折扣优惠" aria-hidden="true">#</a> 3.3 编写测试类(折扣优惠)</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_zk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 折扣9折，商品100元</span>
    <span class="token class-name">Context</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ZKCouponDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BigDecimal</span> discountAmount <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">discountAmount</span><span class="token punctuation">(</span><span class="token number">0.9D</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：折扣9折后金额 {}&quot;</span><span class="token punctuation">,</span> discountAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试结果</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">15</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">05.602</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：折扣<span class="token number">9</span>折后金额 <span class="token number">90.00</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4-编写测试类-n元购优惠" tabindex="-1"><a class="header-anchor" href="#_3-4-编写测试类-n元购优惠" aria-hidden="true">#</a> 3.4 编写测试类(n元购优惠)</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_nyg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// n元购；100-10，商品100元</span>
    <span class="token class-name">Context</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">NYGCouponDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BigDecimal</span> discountAmount <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">discountAmount</span><span class="token punctuation">(</span><span class="token number">90D</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：n元购优惠后金额 {}&quot;</span><span class="token punctuation">,</span> discountAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试结果</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">15</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">24.700</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：n元购优惠后金额 <span class="token number">90</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以上四组测试分别验证了不同类型优惠券的优惠策略，测试结果是满足我们的预期。</li><li>这里四种优惠券最终都是在原价<code>100元</code>上折扣<code>10元</code>，最终支付<code>90元</code>。</li></ul><h2 id="七、总结" tabindex="-1"><a class="header-anchor" href="#七、总结" aria-hidden="true">#</a> 七、总结</h2><ul><li>以上的策略模式案例相对来说不并不复杂，主要的逻辑都是体现在关于不同种类优惠券的计算折扣策略上。结构相对来说也比较简单，在实际的开发中这样的设计模式也是非常常用的。另外这样的设计与命令模式、适配器模式结构相似，但是思路是有差异的。</li><li>通过策略设计模式的使用可以把我们方法中的if语句优化掉，大量的if语句使用会让代码难以扩展，也不好维护，同时在后期遇到各种问题也很难维护。在使用这样的设计模式后可以很好的满足隔离性与和扩展性，对于不断新增的需求也非常方便承接。</li><li><code>策略模式</code>、<code>适配器模式</code>、<code>组合模式</code>等，在一些结构上是比较相似的，但是每一个模式是有自己的逻辑特点，在使用的过程中最佳的方式是经过较多的实践来吸取经验，为后续的研发设计提供更好的技术输出。</li></ul>`,63);function j(B,C){const a=c("ExternalLinkIcon");return o(),l("div",null,[u,n("p",null,[s("作者：小傅哥 "),d,s("博客："),n("a",k,[s("https://bugstack.cn"),e(a)])]),r,m,v,n("ol",null,[b,g,n("li",null,[s("涉及工程三个，可以通过关注"),h,s("："),n("a",w,[y,e(a)]),s("，回复"),f,s("获取(打开获取的链接，找到序号18)")])]),D,n("ul",null,[n("li",null,[s("图片来自："),n("a",_,[s("https://refactoringguru.cn/design-patterns/strategy"),e(a)])])]),x])}const I=p(i,[["render",j],["__file","2020-07-05-zhongxue Java shejimoshi《shizhanceluemoshi》.html.vue"]]);export{I as default};
