import{_ as o,r as l,o as a,c as s,a as e,b as n,d as r,f as c}from"./app-3RcBQnkC.js";const i={},_=e("h1",{id:"_2-4-数据库表结构设计",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-4-数据库表结构设计","aria-hidden":"true"},"#"),n(" 2.4：数据库表结构设计")],-1),d=e("br",null,null,-1),h={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},u=e("blockquote",null,[e("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！")],-1),p=e("h2",{id:"一、前言",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一、前言","aria-hidden":"true"},"#"),n(" 一、前言")],-1),f=e("p",null,"阅读到这篇文章的小伙伴，或多或少都是使用过关系型数据库的，或者是 Mysql、或者是 Oracle 等等，这些数据库的使用主要用于业务系统中进行数据的承载，满足业务诉求。例如，我们要保存和查询用户信息，记录聊天记录等等。同时有的时候为了满足大体量的业务行为，还会有分库分表，以及非关系型数据库 Redis 等的使用。",-1),m=e("p",null,"那么，我们这个聊天系统主要是为了体现核心功能的实现，所以在库表设计上尽可能的会简单，并只保留核心字段的业务属性。接下来，我们开始进行库表的设计。",-1),b=e("h2",{id:"二、库表设计",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#二、库表设计","aria-hidden":"true"},"#"),n(" 二、库表设计")],-1),k=e("ul",null,[e("li",null,"对于我们的业务功能需要有这么六个表来完成业务流程，而这六个表可以分为三个部分来看；"),e("li",null,"第一部分，基础表；也就是用户和群组的维护"),e("li",null,"第二部分，关联表；每个用户与好友和群组的关系"),e("li",null,"第三部分，行为表；每一个用户都会与自己的好友或者群组产生对话，以及最终的聊天记录"),e("li",null,"接下来我们逐个表的进行分析，看每一个表的与 UI 的具体业务关联性。")],-1);function x(j,g){const t=l("ExternalLinkIcon");return a(),s("div",null,[_,e("p",null,[n("作者：小傅哥 "),d,n("博客："),e("a",h,[n("https://bugstack.cn"),r(t)])]),u,p,f,m,b,c(" ![](/images/article/project/im/project-im-2.4-01.png) "),k])}const V=o(i,[["render",x],["__file","2.4：shujukubiaojiegousheji.html.vue"]]);export{V as default};
