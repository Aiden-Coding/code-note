import{_ as e,r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"重学-java-设计模式-实战享元模式「基于redis秒杀-提供活动与库存信息查询场景」",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#重学-java-设计模式-实战享元模式「基于redis秒杀-提供活动与库存信息查询场景」","aria-hidden":"true"},"#"),s(" 重学 Java 设计模式：实战享元模式「基于Redis秒杀，提供活动与库存信息查询场景」")],-1),r=n("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=810683138&bvid=BV1e34y1v7yW&cid=577139271&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),v=p('<h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>程序员👨‍💻‍的上下文是什么？</code></p><p>很多时候一大部分编程开发的人员都只是关注于功能的实现，只要自己把这部分需求写完就可以了，有点像被动的交作业。这样的问题一方面是由于很多新人还不了解程序员的职业发展，还有一部分是对于编程开发只是工作并非兴趣。但在程序员的发展来看，如果不能很好的处理上文(<code>产品</code>)，下文(<code>测试</code>)，在这样不能很好的了解业务和产品发展，也不能编写出很有体系结构的代码，日久天长，1到3年、3到5年，就很难跨越一个个技术成长的分水岭。</p><p><code>拥有接受和学习新知识的能力</code></p><p>你是否有感受过小时候在什么都还不会的时候接受知识的能力很强，但随着我们开始长大后，慢慢学习能力、处事方式、性格品行，往往会固定。一方面是形成了各自的性格特征，一方面是圈子已经固定。但也正因为这样的故步，而很少愿意听取别人的意见，就像即使看到了一整片内容，在视觉盲区下也会过掉到80%，就在眼前也看不见，也因此导致了能力不再有较大的提升。</p><p><code>编程能力怎样会成长的最快</code></p><p>工作内容往往有些像在工厂🏭拧螺丝，大部分内容是重复的，也可以想象过去的一年你有过多少创新和学习了新的技能。那么这时候一般为了多学些内容会买一些技术书籍，但！技术类书籍和其他书籍不同，只要不去用看了也就只是轻描淡写，很难接纳和理解。就像设计模式，虽然可能看了几遍，但是在实际编码中仍然很少会用，大部分原因还是没有认认真真的跟着实操。事必躬亲才是学习编程的最好是方式。</p><h2 id="二、开发环境" tabindex="-1"><a class="header-anchor" href="#二、开发环境" aria-hidden="true">#</a> 二、开发环境</h2>',8),b=n("li",null,"JDK 1.8",-1),g=n("li",null,"Idea + Maven",-1),q=n("strong",null,"公众号",-1),h={href:"https://bugstack.cn/assets/images/qrcode.png",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"bugstack虫洞栈",-1),f=n("code",null,"源码下载",-1),w=p('<table><thead><tr><th>工程</th><th>描述</th></tr></thead><tbody><tr><td>itstack-demo-design-11-01</td><td>使用一坨代码实现业务需求</td></tr><tr><td>itstack-demo-design-11-02</td><td>通过设计模式优化代码结构，减少内存使用和查询耗时</td></tr></tbody></table><h2 id="三、享元模式介绍" tabindex="-1"><a class="header-anchor" href="#三、享元模式介绍" aria-hidden="true">#</a> 三、享元模式介绍</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-11-01.png" alt="享元模式，图片来自 refactoringguru.cn"></p>',3),_={href:"https://refactoringguru.cn/design-patterns/flyweight",target:"_blank",rel:"noopener noreferrer"},x=p(`<p>享元模式，主要在于共享通用对象，减少内存的使用，提升系统的访问效率。而这部分共享对象通常比较耗费内存或者需要查询大量接口或者使用数据库资源，因此统一抽离作为共享对象使用。</p><p>另外享元模式可以分为在服务端和客户端，一般互联网H5和Web场景下大部分数据都需要服务端进行处理，比如数据库连接池的使用、多线程线程池的使用，除了这些功能外，还有些需要服务端进行包装后的处理下发给客户端，因为服务端需要做享元处理。但在一些游戏场景下，很多都是客户端需要进行渲染地图效果，比如；树木、花草、鱼虫，通过设置不同元素描述使用享元公用对象，减少内存的占用，让客户端的游戏更加流畅。</p><p>在享元模型的实现中需要使用到享元工厂来进行管理这部分独立的对象和共享的对象，避免出现线程安全的问题。</p><h2 id="四、案例场景模拟" tabindex="-1"><a class="header-anchor" href="#四、案例场景模拟" aria-hidden="true">#</a> 四、案例场景模拟</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-11-02.png" alt="场景模拟；秒杀场景下商品查询"></p><p><strong>在这个案例中我们模拟在商品秒杀场景下使用享元模式查询优化</strong></p><p>你是否经历过一个商品下单的项目从最初的日均十几单到一个月后每个时段秒杀量破十万的项目。一般在最初如果没有经验的情况下可能会使用数据库行级锁的方式下保证商品库存的扣减操作，但是随着业务的快速发展秒杀的用户越来越多，这个时候数据库已经扛不住了，一般都会使用redis的分布式锁来控制商品库存。</p><p>同时在查询的时候也不需要每一次对不同的活动查询都从库中获取，因为这里除了库存以外其他的活动商品信息都是固定不变的，以此这里一般大家会缓存到内存中。</p><p>这里我们模拟使用享元模式工厂结构，提供活动商品的查询。活动商品相当于不变的信息，而库存部分属于变化的信息。</p><h2 id="五、用一坨坨代码实现" tabindex="-1"><a class="header-anchor" href="#五、用一坨坨代码实现" aria-hidden="true">#</a> 五、用一坨坨代码实现</h2><p><code>逻辑很简单，就怕你写乱。一片片的固定内容和变化内容的查询组合，CV的哪里都是！</code></p><p>其实这部分逻辑的查询在一般情况很多程序员都是先查询固定信息，在使用过滤的或者添加if判断的方式补充变化的信息，也就是库存。这样写最开始并不会看出来有什么问题，但随着方法逻辑的增加，后面就越来越多重复的代码。</p><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">01</span>
└── src
    └── main
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
                └── <span class="token class-name">ActivityController</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以上工程结构比较简单，之后一个控制类用于查询活动信息。</li></ul><h3 id="_2-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-代码实现" aria-hidden="true">#</a> 2. 代码实现</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 博客：https://bugstack.cn - 沉淀、分享、成长，让自己和他人都能有所收获！
 * 公众号：bugstack虫洞栈
 * Create by 小傅哥(fustack) @2020
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ActivityController</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">Activity</span> <span class="token function">queryActivityInfo</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 模拟从实际业务应用从接口中获取活动信息</span>
        <span class="token class-name">Activity</span> activity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Activity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        activity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">10001L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        activity<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        activity<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        activity<span class="token punctuation">.</span><span class="token function">setStartTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        activity<span class="token punctuation">.</span><span class="token function">setStopTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        activity<span class="token punctuation">.</span><span class="token function">setStock</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Stock</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> activity<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里模拟的是从接口中查询活动信息，基本也就是从数据库中获取所有的商品信息和库存。有点像最开始写的商品销售系统，数据库就可以抗住购物量。</li><li>当后续因为业务的发展需要扩展代码将库存部分交给redis处理，那么就需要从redis中获取活动的库存，而不是从库中，否则将造成数据不统一的问题。</li></ul><h2 id="六、享元模式重构代码" tabindex="-1"><a class="header-anchor" href="#六、享元模式重构代码" aria-hidden="true">#</a> 六、享元模式重构代码</h2><p><code>接下来使用享元模式来进行代码优化，也算是一次很小的重构。</code></p><p>享元模式一般情况下使用此结构在平时的开发中并不太多，除了一些线程池、数据库连接池外，再就是游戏场景下的场景渲染。另外这个设计的模式思想是减少内存的使用提升效率，与我们之前使用的<strong>原型模式</strong>通过克隆对象的方式生成复杂对象，减少rpc的调用，都是此类思想。</p><h3 id="_1-工程结构-1" tabindex="-1"><a class="header-anchor" href="#_1-工程结构-1" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">02</span>
└── src
    ├── main
    │   └── java
    │       └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
    │           ├── util
    │           │	└── <span class="token class-name">RedisUtils</span><span class="token punctuation">.</span>java	
    │           ├── <span class="token class-name">Activity</span><span class="token punctuation">.</span>java
    │           ├── <span class="token class-name">ActivityController</span><span class="token punctuation">.</span>java
    │           ├── <span class="token class-name">ActivityFactory</span><span class="token punctuation">.</span>java
    │           └── <span class="token class-name">Stock</span><span class="token punctuation">.</span>java
    └── test
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test
                └── <span class="token class-name">ApiTest</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>享元模式模型结构</strong></p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-11-03.png" alt="享元模式模型结构"></p><ul><li>以上是我们模拟查询活动场景的类图结构，左侧构建的是享元工厂，提供固定活动数据的查询，右侧是Redis存放的库存数据。</li><li>最终交给活动控制类来处理查询操作，并提供活动的所有信息和库存。因为库存是变化的，所以我们模拟的<code>RedisUtils</code>中设置了定时任务使用库存。</li></ul><h3 id="_2-代码实现-1" tabindex="-1"><a class="header-anchor" href="#_2-代码实现-1" aria-hidden="true">#</a> 2. 代码实现</h3><h4 id="_2-1-活动信息" tabindex="-1"><a class="header-anchor" href="#_2-1-活动信息" aria-hidden="true">#</a> 2.1 活动信息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 博客：https://bugstack.cn - 沉淀、分享、成长，让自己和他人都能有所收获！
 * 公众号：bugstack虫洞栈
 * Create by 小傅哥(fustack) @2020
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Activity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>        <span class="token comment">// 活动ID</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token comment">// 活动名称</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> desc<span class="token punctuation">;</span>    <span class="token comment">// 活动描述</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> startTime<span class="token punctuation">;</span> <span class="token comment">// 开始时间</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> stopTime<span class="token punctuation">;</span>  <span class="token comment">// 结束时间</span>
    <span class="token keyword">private</span> <span class="token class-name">Stock</span> stock<span class="token punctuation">;</span>    <span class="token comment">// 活动库存</span>
    
    <span class="token comment">// ...get/set</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里的对象类比较简单，只是一个活动的基础信息；id、名称、描述、时间和库存。</li></ul><h4 id="_2-2-库存信息" tabindex="-1"><a class="header-anchor" href="#_2-2-库存信息" aria-hidden="true">#</a> 2.2 库存信息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Stock</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> total<span class="token punctuation">;</span> <span class="token comment">// 库存总量</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> used<span class="token punctuation">;</span>  <span class="token comment">// 库存已用</span>
    
    <span class="token comment">// ...get/set</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里是库存数据我们单独提供了一个类进行保存数据。</li></ul><h4 id="_2-3-享元工厂" tabindex="-1"><a class="header-anchor" href="#_2-3-享元工厂" aria-hidden="true">#</a> 2.3 享元工厂</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 博客：https://bugstack.cn - 沉淀、分享、成长，让自己和他人都能有所收获！
 * 公众号：bugstack虫洞栈
 * Create by 小傅哥(fustack) @2020
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ActivityFactory</span> <span class="token punctuation">{</span>

    <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Activity</span><span class="token punctuation">&gt;</span></span> activityMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Activity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Activity</span> <span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Activity</span> activity <span class="token operator">=</span> activityMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 模拟从实际业务应用从接口中获取活动信息</span>
            activity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Activity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            activity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">10001L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            activity<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            activity<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            activity<span class="token punctuation">.</span><span class="token function">setStartTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            activity<span class="token punctuation">.</span><span class="token function">setStopTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            activityMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> activity<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里提供的是一个享元工厂🏭，通过<code>map</code>结构存放已经从库表或者接口中查询到的数据，存放到内存中，用于下次可以直接获取。</li><li>这样的结构一般在我们的编程开发中还是比较常见的，当然也有些时候为了分布式的获取，会把数据存放到redis中，可以按需选择。</li></ul><h4 id="_2-4-模拟redis类" tabindex="-1"><a class="header-anchor" href="#_2-4-模拟redis类" aria-hidden="true">#</a> 2.4 模拟Redis类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 博客：https://bugstack.cn - 沉淀、分享、成长，让自己和他人都能有所收获！
 * 公众号：bugstack虫洞栈
 * Create by 小傅哥(fustack) @2020
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisUtils</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ScheduledExecutorService</span> scheduledExecutorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">AtomicInteger</span> stock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">RedisUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        scheduledExecutorService<span class="token punctuation">.</span><span class="token function">scheduleAtFixedRate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 模拟库存消耗</span>
            stock<span class="token punctuation">.</span><span class="token function">addAndGet</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MICROSECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getStockUsed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> stock<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里处理模拟<code>redis</code>的操作工具类外，还提供了一个定时任务用于模拟库存的使用，这样方面我们在测试的时候可以观察到库存的变化。</li></ul><h4 id="_2-4-活动控制类" tabindex="-1"><a class="header-anchor" href="#_2-4-活动控制类" aria-hidden="true">#</a> 2.4 活动控制类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 博客：https://bugstack.cn - 沉淀、分享、成长，让自己和他人都能有所收获！
 * 公众号：bugstack虫洞栈
 * Create by 小傅哥(fustack) @2020
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ActivityController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">RedisUtils</span> redisUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Activity</span> <span class="token function">queryActivityInfo</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Activity</span> activity <span class="token operator">=</span> <span class="token class-name">ActivityFactory</span><span class="token punctuation">.</span><span class="token function">getActivity</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 模拟从Redis中获取库存变化信息</span>
        <span class="token class-name">Stock</span> stock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stock</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> redisUtils<span class="token punctuation">.</span><span class="token function">getStockUsed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        activity<span class="token punctuation">.</span><span class="token function">setStock</span><span class="token punctuation">(</span>stock<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> activity<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在活动控制类中使用了享元工厂获取活动信息，查询后将库存信息在补充上。因为库存信息是变化的，而活动信息是固定不变的。</li><li>最终通过统一的控制类就可以把完整包装后的活动信息返回给调用方。</li></ul><h3 id="_3-测试验证" tabindex="-1"><a class="header-anchor" href="#_3-测试验证" aria-hidden="true">#</a> 3. 测试验证</h3><h4 id="_3-1-编写测试类" tabindex="-1"><a class="header-anchor" href="#_3-1-编写测试类" aria-hidden="true">#</a> 3.1 编写测试类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">ApiTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">ActivityController</span> activityController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActivityController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_queryActivityInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Long</span> req <span class="token operator">=</span> <span class="token number">10001L</span><span class="token punctuation">;</span>
            <span class="token class-name">Activity</span> activity <span class="token operator">=</span> activityController<span class="token punctuation">.</span><span class="token function">queryActivityInfo</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{} {}&quot;</span><span class="token punctuation">,</span> req<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里我们通过活动查询控制类，在<code>for</code>循环的操作下查询了十次活动信息，同时为了保证库存定时任务的变化，加了睡眠操作，实际的开发中不会有这样的睡眠。</li></ul><h4 id="_3-2-测试结果" tabindex="-1"><a class="header-anchor" href="#_3-2-测试结果" aria-hidden="true">#</a> 3.2 测试结果</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">22</span><span class="token operator">:</span><span class="token number">35</span><span class="token operator">:</span><span class="token number">20.285</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  org<span class="token punctuation">.</span>i<span class="token punctuation">.</span><span class="token punctuation">.</span>t<span class="token punctuation">.</span>ApiTest <span class="token operator">-</span> 测试结果：<span class="token number">10001</span> <span class="token punctuation">{</span><span class="token string">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;startTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">,</span><span class="token string">&quot;stock&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&quot;used&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;stopTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">35</span><span class="token operator">:</span><span class="token number">21.634</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  org<span class="token punctuation">.</span>i<span class="token punctuation">.</span><span class="token punctuation">.</span>t<span class="token punctuation">.</span>ApiTest <span class="token operator">-</span> 测试结果：<span class="token number">10001</span> <span class="token punctuation">{</span><span class="token string">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;startTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">,</span><span class="token string">&quot;stock&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&quot;used&quot;</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;stopTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">35</span><span class="token operator">:</span><span class="token number">22.838</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  org<span class="token punctuation">.</span>i<span class="token punctuation">.</span><span class="token punctuation">.</span>t<span class="token punctuation">.</span>ApiTest <span class="token operator">-</span> 测试结果：<span class="token number">10001</span> <span class="token punctuation">{</span><span class="token string">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;startTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">,</span><span class="token string">&quot;stock&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&quot;used&quot;</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;stopTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">35</span><span class="token operator">:</span><span class="token number">24.042</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  org<span class="token punctuation">.</span>i<span class="token punctuation">.</span><span class="token punctuation">.</span>t<span class="token punctuation">.</span>ApiTest <span class="token operator">-</span> 测试结果：<span class="token number">10001</span> <span class="token punctuation">{</span><span class="token string">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;startTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">,</span><span class="token string">&quot;stock&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&quot;used&quot;</span><span class="token operator">:</span><span class="token number">42</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;stopTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">35</span><span class="token operator">:</span><span class="token number">25.246</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  org<span class="token punctuation">.</span>i<span class="token punctuation">.</span><span class="token punctuation">.</span>t<span class="token punctuation">.</span>ApiTest <span class="token operator">-</span> 测试结果：<span class="token number">10001</span> <span class="token punctuation">{</span><span class="token string">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;startTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">,</span><span class="token string">&quot;stock&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&quot;used&quot;</span><span class="token operator">:</span><span class="token number">54</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;stopTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">35</span><span class="token operator">:</span><span class="token number">26.452</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  org<span class="token punctuation">.</span>i<span class="token punctuation">.</span><span class="token punctuation">.</span>t<span class="token punctuation">.</span>ApiTest <span class="token operator">-</span> 测试结果：<span class="token number">10001</span> <span class="token punctuation">{</span><span class="token string">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;startTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">,</span><span class="token string">&quot;stock&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&quot;used&quot;</span><span class="token operator">:</span><span class="token number">66</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;stopTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">35</span><span class="token operator">:</span><span class="token number">27.655</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  org<span class="token punctuation">.</span>i<span class="token punctuation">.</span><span class="token punctuation">.</span>t<span class="token punctuation">.</span>ApiTest <span class="token operator">-</span> 测试结果：<span class="token number">10001</span> <span class="token punctuation">{</span><span class="token string">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;startTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">,</span><span class="token string">&quot;stock&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&quot;used&quot;</span><span class="token operator">:</span><span class="token number">78</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;stopTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">35</span><span class="token operator">:</span><span class="token number">28.859</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  org<span class="token punctuation">.</span>i<span class="token punctuation">.</span><span class="token punctuation">.</span>t<span class="token punctuation">.</span>ApiTest <span class="token operator">-</span> 测试结果：<span class="token number">10001</span> <span class="token punctuation">{</span><span class="token string">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;startTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">,</span><span class="token string">&quot;stock&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&quot;used&quot;</span><span class="token operator">:</span><span class="token number">90</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;stopTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">35</span><span class="token operator">:</span><span class="token number">30.063</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  org<span class="token punctuation">.</span>i<span class="token punctuation">.</span><span class="token punctuation">.</span>t<span class="token punctuation">.</span>ApiTest <span class="token operator">-</span> 测试结果：<span class="token number">10001</span> <span class="token punctuation">{</span><span class="token string">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;startTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">,</span><span class="token string">&quot;stock&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&quot;used&quot;</span><span class="token operator">:</span><span class="token number">102</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;stopTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">35</span><span class="token operator">:</span><span class="token number">31.268</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  org<span class="token punctuation">.</span>i<span class="token punctuation">.</span><span class="token punctuation">.</span>t<span class="token punctuation">.</span>ApiTest <span class="token operator">-</span> 测试结果：<span class="token number">10001</span> <span class="token punctuation">{</span><span class="token string">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书优惠券分享激励分享活动第二期&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;图书嗨乐&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;startTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">,</span><span class="token string">&quot;stock&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&quot;used&quot;</span><span class="token operator">:</span><span class="token number">114</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;stopTime&quot;</span><span class="token operator">:</span><span class="token number">1592130919931</span><span class="token punctuation">}</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>可以仔细看下<code>stock</code>部分的库存是一直在变化的，其他部分是活动信息，是固定的，所以我们使用享元模式来将这样的结构进行拆分。</li></ul><h2 id="七、总结" tabindex="-1"><a class="header-anchor" href="#七、总结" aria-hidden="true">#</a> 七、总结</h2><ul><li>关于享元模式的设计可以着重学习享元工厂的设计，在一些有大量重复对象可复用的场景下，使用此场景在服务端减少接口的调用，在客户端减少内存的占用。是这个设计模式的主要应用方式。</li><li>另外通过<code>map</code>结构的使用方式也可以看到，使用一个固定id来存放和获取对象，是非常关键的点。而且不只是在享元模式中使用，一些其他工厂模式、适配器模式、组合模式中都可以通过map结构存放服务供外部获取，减少ifelse的判断使用。</li><li>当然除了这种设计的减少内存的使用优点外，也有它带来的缺点，在一些复杂的业务处理场景，很不容易区分出内部和外部状态，就像我们活动信息部分与库存变化部分。如果不能很好的拆分，就会把享元工厂设计的非常混乱，难以维护。</li></ul>`,51);function A(j,T){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("作者：小傅哥 "),r,s("博客："),n("a",k,[s("https://bugstack.cn"),t(a)])]),d,m,v,n("ol",null,[b,g,n("li",null,[s("涉及工程三个，可以通过关注"),q,s("："),n("a",h,[y,t(a)]),s("，回复"),f,s("获取(打开获取的链接，找到序号18)")])]),w,n("ul",null,[n("li",null,[s("图片来自："),n("a",_,[s("https://refactoringguru.cn/design-patterns/flyweight"),t(a)])])]),x])}const I=e(i,[["render",A],["__file","2020-06-14-zhongxue Java shejimoshi《shizhanxiangyuanmoshi》.html.vue"]]);export{I as default};
