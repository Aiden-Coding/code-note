import{_ as p,r as o,o as c,c as l,a as n,b as s,d as t,e}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"rocketmq-使用教程和模型结构",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rocketmq-使用教程和模型结构","aria-hidden":"true"},"#"),s(" RocketMQ 使用教程和模型结构")],-1),r=n("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=956583991&bvid=BV1ap4y1G764&cid=1214781475&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),v={href:"https://bugstack.cn/md/road-map/mybatis.html",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,"本章也会包括关于 MQ 消息的发送和接收应该处于 DDD 的哪一层的实践讲解和使用。",-1),b=n("p",null,"本文涉及的工程：",-1),h={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-rocketmq",target:"_blank",rel:"noopener noreferrer"},q={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-rocketmq/-/blob/master/docs/rocketmq/rocketmq-docker-compose-mac-amd-arm.yml",target:"_blank",rel:"noopener noreferrer"},y={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-rocketmq/-/blob/master/docs/mysql/road-map.sql",target:"_blank",rel:"noopener noreferrer"},f=n("h2",{id:"一、案例背景",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、案例背景","aria-hidden":"true"},"#"),s(" 一、案例背景")],-1),_=n("code",null,"解耦过长的业务流程",-1),S=n("code",null,"应对流量冲击的消峰",-1),A={href:"https://bugstack.cn/md/road-map/mybatis.html",target:"_blank",rel:"noopener noreferrer"},x=e('<div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-01.png" width="650px"></div><ul><li>从薪资调整到邮件发送，这里是2个业务流程，通过 MQ 消息的方式进行连接。</li><li>其实MQ消息的使用场景特别多，原来你可能使用多线程的一些操作，现在就扩展为多实例的操作了。发送 MQ 消息出来，让应用的各个实例接收并进行消费。</li></ul><h2 id="二、领域事件" tabindex="-1"><a class="header-anchor" href="#二、领域事件" aria-hidden="true">#</a> 二、领域事件</h2><p>因为我们本章所讲解的内容是把 RocketMQ 放入 DDD 架构中进行使用，那么也就引申出领域事件定义。所以我们先来了解下，什么是领域事件。</p><p>领域事件，可以说是解耦微服务设计的关键。领域事件也是领域模型中非常重要的一部分内容，用于标示当前领域模型中发生的事件行为。一个领域事件会推进业务流程的进一步操作，在实现业务解耦的同时，也推动了整个业务的闭环。</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-02.png" width="850px"></div><ul><li>首先，我们需要在领域模型层，添加一块 event 区域。它的存在是为了定义出于当前领域下所需的事件消息信息。信息的类型可以是model 下的实体对象、聚合对象。</li><li>之后，消息的发送是放在基础设置层。本身基础设置层就是依赖倒置于模型层，所以在模型层所定义的 event 对象，可以很方便的在基础设置层使用。而且大部分开发的时候，MQ消息的发送与数据库操作都是关联的，采用的方式是，做完数据落库后，推送MQ消息。所以定义在仓储中实现，会更加得心应手、水到渠成。</li><li>最后，就是 MQ 的消息，MQ 的消费可以是自身服务所发出的消息，也可以是外部其他微服务的消息。就在小傅哥所整体讲述的这套简明教程中 DDD 部分的触发器层。</li></ul><h2 id="三、环境安装" tabindex="-1"><a class="header-anchor" href="#三、环境安装" aria-hidden="true">#</a> 三、环境安装</h2><p>本案例涉及了数据库和RocketMQ的使用，都已经在工程中提供了安装脚本，可以按需执行。</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-03.png" width="450px"></div><p>这里主要介绍 RocketMQ 的安装；</p><h3 id="_1-执行-compose-yml" tabindex="-1"><a class="header-anchor" href="#_1-执行-compose-yml" aria-hidden="true">#</a> 1. 执行 compose yml</h3>',12),w=n("strong",null,"文件",-1),j={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-rocketmq/-/blob/master/docs/rocketmq/rocketmq-docker-compose-mac-amd-arm.yml",target:"_blank",rel:"noopener noreferrer"},M=e(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token comment"># https://hub.docker.com/r/xuchengen/rocketmq</span>
  <span class="token comment"># 注意修改项；</span>
  <span class="token comment"># 01：data/rocketmq/conf/broker.conf 添加 brokerIP1=127.0.0.1</span>
  <span class="token comment"># 02：data/console/config/application.properties server.port=9009 - 如果8080端口被占用，可以修改或者添加映射端口</span>
  <span class="token key atrule">rocketmq</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> livinphp/rocketmq<span class="token punctuation">:</span>5.1.0
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> rocketmq
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 9009<span class="token punctuation">:</span><span class="token number">9009</span>
      <span class="token punctuation">-</span> 9876<span class="token punctuation">:</span><span class="token number">9876</span>
      <span class="token punctuation">-</span> 10909<span class="token punctuation">:</span><span class="token number">10909</span>
      <span class="token punctuation">-</span> 10911<span class="token punctuation">:</span><span class="token number">10911</span>
      <span class="token punctuation">-</span> 10912<span class="token punctuation">:</span><span class="token number">10912</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/home/app/data
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> <span class="token string">&quot;Asia/Shanghai&quot;</span>
      <span class="token key atrule">NAMESRV_ADDR</span><span class="token punctuation">:</span> <span class="token string">&quot;rocketmq:9876&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 IDEA 中打开 rocketmq-docker-compose-mac-amd-arm.yml 你会看到一个绿色的按钮在左侧侧边栏，点击即可安装。或者你也可以使用命令安装：<code># /usr/local/bin/docker-compose -f /docs/dev-ops/environment/environment-docker-compose.yml up -d</code> - 比较适合在云服务器上执行。</li><li>首次安装可能使用不了，一个原因是 brokerIP1 未配置IP，另外一个是默认的 8080 端口占用。可以按照如下小傅哥说的方式修改。</li></ul><h3 id="_2-修改默认配合" tabindex="-1"><a class="header-anchor" href="#_2-修改默认配合" aria-hidden="true">#</a> 2. 修改默认配合</h3><ol><li>打开 <code>data/rocketmq/conf/broker.conf</code> 添加一条 <code>brokerIP1=127.0.0.1</code> 在结尾</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code># 集群名称
brokerClusterName <span class="token operator">=</span> <span class="token class-name">DefaultCluster</span>
# <span class="token constant">BROKER</span> 名称
brokerName <span class="token operator">=</span> broker<span class="token operator">-</span>a
# <span class="token number">0</span> 表示 <span class="token class-name">Master</span><span class="token punctuation">,</span> <span class="token operator">&gt;</span> <span class="token number">0</span> 表示 <span class="token class-name">Slave</span>
brokerId <span class="token operator">=</span> <span class="token number">0</span>
# 删除文件时间点，默认凌晨 <span class="token number">4</span> 点
deleteWhen <span class="token operator">=</span> <span class="token number">04</span>
# 文件保留时间，默认 <span class="token number">48</span> 小时
fileReservedTime <span class="token operator">=</span> <span class="token number">48</span>
# <span class="token constant">BROKER</span> 角色 <span class="token constant">ASYNC_MASTER</span>为异步主节点，<span class="token constant">SYNC_MASTER</span>为同步主节点，<span class="token constant">SLAVE</span>为从节点
brokerRole <span class="token operator">=</span> <span class="token constant">ASYNC_MASTER</span>
# 刷新数据到磁盘的方式，<span class="token constant">ASYNC_FLUSH</span> 刷新
flushDiskType <span class="token operator">=</span> <span class="token constant">ASYNC_FLUSH</span>
# 存储路径
storePathRootDir <span class="token operator">=</span> <span class="token operator">/</span>home<span class="token operator">/</span>app<span class="token operator">/</span>data<span class="token operator">/</span>rocketmq<span class="token operator">/</span>store
# <span class="token constant">IP</span>地址
brokerIP1 <span class="token operator">=</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>打开 \`\`data/console/config/application.properties<code>修改</code>server.port=9009\` 端口。</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>server<span class="token punctuation">.</span>address<span class="token operator">=</span><span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.0</span>
server<span class="token punctuation">.</span>port<span class="token operator">=</span><span class="token number">9009</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改配置后，重启服务。</li></ul><h3 id="_3-rockmq登录与配置" tabindex="-1"><a class="header-anchor" href="#_3-rockmq登录与配置" aria-hidden="true">#</a> 3. RockMQ登录与配置</h3><h4 id="_3-1-登录" tabindex="-1"><a class="header-anchor" href="#_3-1-登录" aria-hidden="true">#</a> 3.1 登录</h4><p>RocketMQ 此镜像，会在安装后在控制台打印登录账号信息，你可以查看使用。</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-04.png" width="850px"></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-05.png" width="850px"></div>`,13),T={href:"http://localhost:9009/",target:"_blank",rel:"noopener noreferrer"},E=e(`<h4 id="_3-2-创建topic" tabindex="-1"><a class="header-anchor" href="#_3-2-创建topic" aria-hidden="true">#</a> 3.2 创建Topic</h4><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-06.png" width="850px"></div><ul><li>也可以使用命令创建：<code>docker exec -it rocketmq sh /home/app/rocketmq/bin/mqadmin updateTopic -n localhost:9876 -c DefaultCluster -t xfg-mq</code></li></ul><h4 id="_3-3-创建消费者组" tabindex="-1"><a class="header-anchor" href="#_3-3-创建消费者组" aria-hidden="true">#</a> 3.3 创建消费者组</h4><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-07.png" width="850px"></div><ul><li>也可以使用命令创建：<code>docker exec -it rocketmq sh /home/app/rocketmq/bin/mqadmin updateSubGroup -n localhost:9876 -c DefaultCluster -g xfg-group</code></li></ul><h2 id="四、工程实现" tabindex="-1"><a class="header-anchor" href="#四、工程实现" aria-hidden="true">#</a> 四、工程实现</h2><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-08.png" width="850px"></div><ul><li>MQ 的使用无论是 RocketMQ 还是 Kafka 等，都很简单。但在使用之前，要考虑好怎么在架构中合理的使用。如果最初没有定义好这些，那么胡乱的任何地方都能发送和接收MQ，最后的工程将非常难以维护。</li><li>所以这里整个MQ的生产和消费，是按照整个 DDD 领域事件结构进行设计。分为在 domain 使用基础层生产消息，再有 trigger 层接收消息。</li></ul><h3 id="_2-配置文件" tabindex="-1"><a class="header-anchor" href="#_2-配置文件" aria-hidden="true">#</a> 2. 配置文件</h3><p><strong>引入POM</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.rocketmq/rocketmq-client-java --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.rocketmq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>rocketmq-client-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.0.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.rocketmq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>rocketmq-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>添加配置</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># RocketMQ 配置</span>
<span class="token key atrule">rocketmq</span><span class="token punctuation">:</span>
  <span class="token key atrule">name-server</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">9876</span>
  <span class="token key atrule">consumer</span><span class="token punctuation">:</span>
    <span class="token key atrule">group</span><span class="token punctuation">:</span> xfg<span class="token punctuation">-</span>group
    <span class="token comment"># 一次拉取消息最大值，注意是拉取消息的最大值而非消费最大值</span>
    <span class="token key atrule">pull-batch-size</span><span class="token punctuation">:</span> <span class="token number">10</span>
  <span class="token key atrule">producer</span><span class="token punctuation">:</span>
    <span class="token comment"># 发送同一类消息的设置为同一个group，保证唯一</span>
    <span class="token key atrule">group</span><span class="token punctuation">:</span> xfg<span class="token punctuation">-</span>group
    <span class="token comment"># 发送消息超时时间，默认3000</span>
    <span class="token key atrule">sendMessageTimeout</span><span class="token punctuation">:</span> <span class="token number">10000</span>
    <span class="token comment"># 发送消息失败重试次数，默认2</span>
    <span class="token key atrule">retryTimesWhenSendFailed</span><span class="token punctuation">:</span> <span class="token number">2</span>
    <span class="token comment"># 异步消息重试此处，默认2</span>
    <span class="token key atrule">retryTimesWhenSendAsyncFailed</span><span class="token punctuation">:</span> <span class="token number">2</span>
    <span class="token comment"># 消息最大长度，默认1024 * 1024 * 4(默认4M)</span>
    <span class="token key atrule">maxMessageSize</span><span class="token punctuation">:</span> <span class="token number">4096</span>
    <span class="token comment"># 压缩消息阈值，默认4k(1024 * 4)</span>
    <span class="token key atrule">compressMessageBodyThreshold</span><span class="token punctuation">:</span> <span class="token number">4096</span>
    <span class="token comment"># 是否在内部发送失败时重试另一个broker，默认false</span>
    <span class="token key atrule">retryNextServer</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-定义领域事件" tabindex="-1"><a class="header-anchor" href="#_3-定义领域事件" aria-hidden="true">#</a> 3. 定义领域事件</h3><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.domain.salary.event.SalaryAdjustEvent</code></p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-09.png" width="450px"></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@EqualsAndHashCode</span><span class="token punctuation">(</span>callSuper <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SalaryAdjustEvent</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEvent</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AdjustSalaryApplyOrderAggregate</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">TOPIC</span> <span class="token operator">=</span> <span class="token string">&quot;xfg-mq&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SalaryAdjustEvent</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">AdjustSalaryApplyOrderAggregate</span> adjustSalaryApplyOrderAggregate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SalaryAdjustEvent</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SalaryAdjustEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        event<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">RandomStringUtils</span><span class="token punctuation">.</span><span class="token function">randomNumeric</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        event<span class="token punctuation">.</span><span class="token function">setTimestamp</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        event<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>adjustSalaryApplyOrderAggregate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> event<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>每个领域的消息，都有领域自己定义。发送的时候再交给基础设施层来发送。</li></ul><h3 id="_4-消息发送" tabindex="-1"><a class="header-anchor" href="#_4-消息发送" aria-hidden="true">#</a> 4. 消息发送</h3><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.infrastructure.event.EventPublisher</code></p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-10.png" width="450px"></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EventPublisher</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Setter</span><span class="token punctuation">(</span>onMethod_ <span class="token operator">=</span> <span class="token annotation punctuation">@Autowired</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">RocketMQTemplate</span> rocketmqTemplate<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 普通消息
     *
     * <span class="token keyword">@param</span> <span class="token parameter">topic</span>   主题
     * <span class="token keyword">@param</span> <span class="token parameter">message</span> 消息
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">publish</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">BaseEvent</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> mqMessage <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;发送MQ消息 topic:{} message:{}&quot;</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span> mqMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            rocketmqTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> mqMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;发送MQ消息失败 topic:{} message:{}&quot;</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 大部分MQ发送失败后，会需要任务补偿</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 延迟消息
     *
     * <span class="token keyword">@param</span> <span class="token parameter">topic</span>          主题
     * <span class="token keyword">@param</span> <span class="token parameter">message</span>        消息
     * <span class="token keyword">@param</span> <span class="token parameter">delayTimeLevel</span> 延迟时长
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">publishDelivery</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">BaseEvent</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> message<span class="token punctuation">,</span> <span class="token keyword">int</span> delayTimeLevel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> mqMessage <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;发送MQ延迟消息 topic:{} message:{}&quot;</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span> mqMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            rocketmqTemplate<span class="token punctuation">.</span><span class="token function">syncSend</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> <span class="token class-name">MessageBuilder</span><span class="token punctuation">.</span><span class="token function">withPayload</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> delayTimeLevel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;发送MQ延迟消息失败 topic:{} message:{}&quot;</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 大部分MQ发送失败后，会需要任务补偿</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在基础设施层提供 event 事件的处理，也就是 MQ 消息的发送。</li></ul><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.infrastructure.repository.SalaryAdjustRepository</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Resource</span>
<span class="token keyword">private</span> <span class="token class-name">EventPublisher</span> eventPublisher<span class="token punctuation">;</span>
    
<span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> timeout <span class="token operator">=</span> <span class="token number">350</span><span class="token punctuation">,</span> propagation <span class="token operator">=</span> <span class="token class-name">Propagation</span><span class="token punctuation">.</span><span class="token constant">REQUIRED</span><span class="token punctuation">,</span> isolation <span class="token operator">=</span> <span class="token class-name">Isolation</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">adjustSalary</span><span class="token punctuation">(</span><span class="token class-name">AdjustSalaryApplyOrderAggregate</span> adjustSalaryApplyOrderAggregate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		 
		<span class="token comment">// ... 省略部分代码 </span>

    eventPublisher<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span><span class="token class-name">SalaryAdjustEvent</span><span class="token punctuation">.</span><span class="token constant">TOPIC</span><span class="token punctuation">,</span> <span class="token class-name">SalaryAdjustEvent</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>adjustSalaryApplyOrderAggregate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> orderId<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 SalaryAdjustRepository 仓储的实现中，做完业务流程开始发送 MQ 消息。这里有2点要注意；</p><ol><li>消息发送，不要写在数据库事务中。因为事务一直占用数据库连接，需要快速释放。</li><li>对于一些强MQ要求的场景，需要在发送MQ前，写入一条数据库 Task 记录，发送消息后更新 Task 状态为成功。如果长时间未更新数据库状态或者为失败的，则需要由任务补偿进行处理。</li></ol><h3 id="_5-消费消息" tabindex="-1"><a class="header-anchor" href="#_5-消费消息" aria-hidden="true">#</a> 5. 消费消息</h3><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.trigger.mq.SalaryAdjustMQListener</code></p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rocketmq-11.png" width="450px"></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RocketMQMessageListener</span><span class="token punctuation">(</span>topic <span class="token operator">=</span> <span class="token string">&quot;xfg-mq&quot;</span><span class="token punctuation">,</span> consumerGroup <span class="token operator">=</span> <span class="token string">&quot;xfg-group&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SalaryAdjustMQListener</span> <span class="token keyword">implements</span> <span class="token class-name">RocketMQListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收到MQ消息 {}&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>消费消息，配置消费者组合消费的主题，之后就可以接收到消息了。接收以后你可以做自己的业务，如果抛出异常，消息会进行重新接收处理。</li></ul><h2 id="六、测试验证" tabindex="-1"><a class="header-anchor" href="#六、测试验证" aria-hidden="true">#</a> 六、测试验证</h2><h3 id="_1-单独发送消息测试" tabindex="-1"><a class="header-anchor" href="#_1-单独发送消息测试" aria-hidden="true">#</a> 1. 单独发送消息测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RocketMQTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Setter</span><span class="token punctuation">(</span>onMethod_ <span class="token operator">=</span> <span class="token annotation punctuation">@Autowired</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">RocketMQTemplate</span> rocketmqTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rocketmqTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;xfg-mq&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;我是测试消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里方便你来发送消息，验证流程。</li></ul><h3 id="_2-业务流程消息验证" tabindex="-1"><a class="header-anchor" href="#_2-业务流程消息验证" aria-hidden="true">#</a> 2. 业务流程消息验证</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_execSalaryAdjust</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">AdjustSalaryApplyOrderAggregate</span> adjustSalaryApplyOrderAggregate <span class="token operator">=</span> <span class="token class-name">AdjustSalaryApplyOrderAggregate</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">employeeNumber</span><span class="token punctuation">(</span><span class="token string">&quot;10000001&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orderId</span><span class="token punctuation">(</span><span class="token string">&quot;100908977676003&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">employeeEntity</span><span class="token punctuation">(</span><span class="token class-name">EmployeeEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">employeeLevel</span><span class="token punctuation">(</span><span class="token class-name">EmployeePostVO</span><span class="token punctuation">.</span><span class="token constant">T3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">employeeTitle</span><span class="token punctuation">(</span><span class="token class-name">EmployeePostVO</span><span class="token punctuation">.</span><span class="token constant">T3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">employeeSalaryAdjustEntity</span><span class="token punctuation">(</span><span class="token class-name">EmployeeSalaryAdjustEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">adjustTotalAmount</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">adjustBaseAmount</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">adjustMeritAmount</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> orderId <span class="token operator">=</span> salaryAdjustApplyService<span class="token punctuation">.</span><span class="token function">execSalaryAdjust</span><span class="token punctuation">(</span>adjustSalaryApplyOrderAggregate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;调薪测试 req: {} res: {}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>adjustSalaryApplyOrderAggregate<span class="token punctuation">)</span><span class="token punctuation">,</span> orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">23</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">29.15</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">52.307</span> <span class="token punctuation">[</span>main            <span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">HikariDataSource</span>       <span class="token operator">-</span> <span class="token class-name">HikariPool</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token class-name">Start</span> completed<span class="token punctuation">.</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">29.15</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">52.445</span> <span class="token punctuation">[</span>main            <span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">EventPublisher</span>         <span class="token operator">-</span> 发送<span class="token constant">MQ</span>消息 topic<span class="token operator">:</span>xfg<span class="token operator">-</span>mq message<span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;data&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;employeeEntity&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;employeeLevel&quot;</span><span class="token operator">:</span><span class="token string">&quot;T3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;employeeTitle&quot;</span><span class="token operator">:</span><span class="token string">&quot;T3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;employeeNumber&quot;</span><span class="token operator">:</span><span class="token string">&quot;10000001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;employeeSalaryAdjustEntity&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;adjustBaseAmount&quot;</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">&quot;adjustMeritAmount&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&quot;adjustTotalAmount&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;orderId&quot;</span><span class="token operator">:</span><span class="token string">&quot;100908977676004&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token string">&quot;98117654515&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;timestamp&quot;</span><span class="token operator">:</span><span class="token string">&quot;2023-07-29 15:40:52.425&quot;</span><span class="token punctuation">}</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">29.15</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">52.517</span> <span class="token punctuation">[</span>main            <span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">ISalaryAdjustApplyServiceTest</span> <span class="token operator">-</span> 调薪测试 req<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string">&quot;employeeEntity&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;employeeLevel&quot;</span><span class="token operator">:</span><span class="token string">&quot;T3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;employeeTitle&quot;</span><span class="token operator">:</span><span class="token string">&quot;T3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;employeeNumber&quot;</span><span class="token operator">:</span><span class="token string">&quot;10000001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;employeeSalaryAdjustEntity&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;adjustBaseAmount&quot;</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">&quot;adjustMeritAmount&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&quot;adjustTotalAmount&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;orderId&quot;</span><span class="token operator">:</span><span class="token string">&quot;100908977676004&quot;</span><span class="token punctuation">}</span> res<span class="token operator">:</span> <span class="token number">100908977676004</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">29.15</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">52.520</span> <span class="token punctuation">[</span><span class="token class-name">ConsumeMessageThread_1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">SalaryAdjustMQListener</span> <span class="token operator">-</span> 接收到<span class="token constant">MQ</span>消息 <span class="token punctuation">{</span><span class="token string">&quot;data&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;employeeEntity&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;employeeLevel&quot;</span><span class="token operator">:</span><span class="token string">&quot;T3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;employeeTitle&quot;</span><span class="token operator">:</span><span class="token string">&quot;T3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;employeeNumber&quot;</span><span class="token operator">:</span><span class="token string">&quot;10000001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;employeeSalaryAdjustEntity&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;adjustBaseAmount&quot;</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">&quot;adjustMeritAmount&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&quot;adjustTotalAmount&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;orderId&quot;</span><span class="token operator">:</span><span class="token string">&quot;100908977676004&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token operator">:</span><span class="token string">&quot;98117654515&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;timestamp&quot;</span><span class="token operator">:</span><span class="token string">&quot;2023-07-29 15:40:52.425&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>当执行一次加薪调整后，就会接收到MQ消息了。</li></ul>`,42);function Q(I,R){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("作者：小傅哥 "),r,s("博客："),n("a",k,[s("https://bugstack.cn"),t(a)])]),d,m,n("p",null,[s("本文的宗旨在于通过简单干净实践的方式教会读者，使用 Docker 配置 RocketMQ 并在基于 DDD 分层结构的 SpringBoot 工程中使用 RocketMQ 技术。因为大部分 MQ 的发送都是基于特定业务场景的，所以本章节也是基于 "),n("a",v,[s("《MyBatis 使用教程和插件开发》"),t(a)]),s(" 章节的扩展。")]),g,b,n("ul",null,[n("li",null,[s("xfg-dev-tech-rocketmq："),n("a",h,[s("https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-rocketmq"),t(a)])]),n("li",null,[s("RocketMQ Docker 安装："),n("a",q,[s("rocketmq-docker-compose-mac-amd-arm.yml"),t(a)])]),n("li",null,[s("导入测试库表 "),n("a",y,[s("road-map.sql"),t(a)])])]),f,n("p",null,[s("首先我们要知道，MQ 消息的作用是用于；"),_,s("和"),S,s("。如；用户下单支付完成后，拿到支付消息推动后续的发货流程。也可以是我们基于 "),n("a",A,[s("《MyBatis 使用教程和插件开发》"),t(a)]),s(" 中的案例场景，给雇员提升级别和薪资的时候，也发送一条MQ消息，用于发送邮件通知给用户。")]),x,n("p",null,[w,s("："),n("a",j,[s("docs/rocketmq/rocketmq-docker-compose-mac-amd-arm.yml"),t(a)]),s(" - 关于安装小傅哥提供了不同的镜像，包括Mac、Mac M1、Windows 可以按需选择使用。")]),M,n("p",null,[s("登录："),n("a",T,[s("http://localhost:9009/"),t(a)])]),E])}const O=p(i,[["render",Q],["__file","rocketmq.html.vue"]]);export{O as default};
