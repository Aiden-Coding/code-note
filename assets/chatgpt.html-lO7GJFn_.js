import{_ as a,r,o as n,c as i,a as e,b as o,d as t,e as d}from"./app-3RcBQnkC.js";const h={},s=e("h1",{id:"openai-大模型应用服务体系构建-api-sdk、鉴权、公众号、微信支付",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#openai-大模型应用服务体系构建-api-sdk、鉴权、公众号、微信支付","aria-hidden":"true"},"#"),o(" OpenAi 大模型应用服务体系构建 - API-SDK、鉴权、公众号、微信支付")],-1),l=e("br",null,null,-1),p={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},g=e("br",null,null,-1),_={href:"https://t.zsxq.com/0d3o5FKvc",target:"_blank",rel:"noopener noreferrer"},u=e("blockquote",null,[e("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),f=e("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=996017673&bvid=BV1xs4y1Q7C4&cid=1128307317&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),b=d('<h2 id="一、产品形态" tabindex="-1"><a class="header-anchor" href="#一、产品形态" aria-hidden="true">#</a> 一、产品形态</h2><p>这趟车🚌，本身的核心是关于<strong>微服务应用体系的构建</strong>，通过讲解配置<code>Docker</code>、<code>Nginx</code>、<code>SSL</code>等环境以及开发出<code>鉴权</code>、<code>认证</code>、<code>微信公众号</code>、<code>企业微信</code>、<code>支付宝交易</code>等模块的方式，完善体系的物料服务。而 ChatGPT 只是其中的一种产品形态而已，这种产品形态通过 API 的方式与具体的物料服务模块解耦。这样做的方式是因为基础的物料<code>【物料指SDK和服务】</code>并不会频繁变化，而离业务最近的 API 会随业务变动发生较多的改动。所以这样的应用架构方式，在互联网大厂中也是非常常见和常用的。</p><p>这些东西的价值在于架构思维，而我也希望授人以渔，教会大家一些根本的东西，而不是永远的在CV+CRUD。有了这样的学习，学习的就不只是这样一个项目，而是可以把这个项目中所涉及的组件开发，都能进行任意物料模块与需要对接的服务进行关联打通使用。方便<code>写到简历</code>、<code>用到项目</code>、<code>实战锻炼</code>、<code>积累经验</code>。</p><h2 id="二、项目架构" tabindex="-1"><a class="header-anchor" href="#二、项目架构" aria-hidden="true">#</a> 二、项目架构</h2><ul><li><strong>目标</strong>：此项目以围绕类似 ChatGPT 生成式服务，构建微服务应用架构体系组件。包括；用户鉴权、公众号、多方支付、企业微信等对接方式，满足不同诉求的使用。并以模块化设计，积木式构建应用，让不同的场景诉求都可以配置化对接。</li><li><strong>功能</strong>：更直白一些就是通过这套微服务体系，可以构建出；<code>网页版ChatGPT对接</code>、<code>用户鉴权校验接口</code>、<code>关注公众号解锁</code>、<code>支付付费购买</code>、<code>公众号自动回复</code>、<code>企业微信聊天对接</code>、<code>知识星球对接</code>等。</li></ul><p>那么这套系统是以<code>视频</code>和<code>小册</code>的教程为导向，教会大家开发这些各个模块的技术组件和技术服务。同时这里的组件和服务，都是微服务实现，可以被替换成其他任何一个你所需的内容。比如不是对接 ChatGPT 而是你想对接一个其他的服务也是可以的。</p><p><strong>整个系统架构如下</strong>：</p><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-230422-01.png?raw=true" width="750px"></div><p>如图；以用户请求为入口，通过 <code>Nginx SSL 443</code> 校验转发到对应的服务，并做相关的鉴权和服务控制，并完成最终的 token 授权使用。整套微服务包括系统；<code>chatgpt-api-sdk</code>、<code>chatgpt-auth</code>、<code>chatgpt-wx</code>、<code>chatgpt-pay</code>、<code>chatgpt-zsxq</code>、<code>chatgpt-admin</code>、<code>chatgpt-web</code> 服务。</p><h2 id="三、拓扑结构" tabindex="-1"><a class="header-anchor" href="#三、拓扑结构" aria-hidden="true">#</a> 三、拓扑结构</h2><p>接下来我们再以工程拓扑的视角看下这套需要开发的系统；</p><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-00-01.png?raw=true" width="850px"></div><p>如拓扑结构，系统从上到下以不同的产品形态，统一调用封装的服务API进行功能的流转。API系统中所处理的核心动作，会以各个物料模块进行实现。所以这里会拆分出标准的 ChatGPT-API 业务系统，之后再由各个模块系统支撑。到具体的模块中再进行详细的系统设计。</p><h2 id="四、技术使用" tabindex="-1"><a class="header-anchor" href="#四、技术使用" aria-hidden="true">#</a> 四、技术使用</h2><p>此项目会使用到 <code>SpringBoot</code>、<code>MyBatis</code>、<code>MySQL</code>、<code>Redis</code> 等技术栈，但因本项目主要以小成本，轻量维护的实际使用为主，所以不会过多引入分布式技术栈。所以在设计实现上，主要以小而美、小而精，且能匹配到真实场景的使用为主。—— 分布式技术栈是为了更大规模的体量使用，但也会为此付出运维和应用服务器成本。所以一些中小厂的项目或者创业类型的项目，都会优先更轻量级技术栈使用，以此减少这部分成本。</p><p>除技术栈的使用外，涉及到开发工具包括；<code>IntelliJ IDEA</code>、<code>WebStorm</code>、<code>Docker</code>、<code>Protainter</code>、<code>Nginx</code>、<code>Git</code>、<code>Maven</code>、<code>Navicat</code>、<code>SSH工具</code>等，以满足开发代码中的使用。</p><p>关于此项目可能还会涉及少部分 Next.js、Typescript 等前端知识，方便做 Web UI 的开发。</p><h2 id="五、课程计划" tabindex="-1"><a class="header-anchor" href="#五、课程计划" aria-hidden="true">#</a> 五、课程计划</h2><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-00-03.png?raw=true" width="850px"></div><p>此课程会包括，基础设置、模块开发、API服务等几块内容，而基础设施主要为一些基本操作，小傅哥会把一些这样的内容都放到这块，方便很多新人伙伴学习使用。这里会分为3个大的步骤；</p>',20),m={href:"https://huggingface.co/",target:"_blank",rel:"noopener noreferrer"},x=e("li",null,"有了这部分内容的使用，后续会进入 API-SDK 的开发，以及网页的简单开发。通过这样的开发构成一套基本的模块服务。ChatGPT-WEB-UI -> API-SDK -> 鉴权 -> OpenAI 的使用。",-1),k=e("li",null,"ChatGPT-WEB-UI 流程🏃🏻跑通后，就可以逐步扩展其他服务模块。让业务与场景结合，如关注公众号、公众号回复、企业微信机器人、交易支付购买授权Token。这个过程可以让 ChatGPT-WEB-UI 与各个模块结合使用。",-1),I=d('<h2 id="六、如何开始" tabindex="-1"><a class="header-anchor" href="#六、如何开始" aria-hidden="true">#</a> 六、如何开始</h2><p>这套课程会以<code>视频</code>、<code>小册</code>、<code>代码</code>、<code>作业</code>的方式进行推进，视频主要以演示操作、讲解核心的方式进行，并在小册和对应的代码中细化细节展示。鉴于星球有些在校的编程新手，所以关于<code>工程的创建</code>、<code>代码的提交</code>、<code>镜像的打包</code>、<code>容器的部署</code>等这些基础操作，也都会在视频中进行演示，方便大家更容易的上车。</p><h3 id="_1-开通权限" tabindex="-1"><a class="header-anchor" href="#_1-开通权限" aria-hidden="true">#</a> 1. 开通权限</h3>',3),P={href:"https://gitcode.net/KnowledgePlanet",target:"_blank",rel:"noopener noreferrer"},S={href:"https://t.zsxq.com/0dS1kW2r9",target:"_blank",rel:"noopener noreferrer"},v=d('<h3 id="_2-加群交流" tabindex="-1"><a class="header-anchor" href="#_2-加群交流" aria-hidden="true">#</a> 2. 加群交流</h3><p>小傅哥为星球伙伴创建了专属的VIP技术交流群，你可以通过扫码添加小傅哥的微信，备注上<code>你的星球编号</code>。我会给你拉到专属的微信群。</p><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-00-02.png?raw=true" width="850px"></div><h3 id="_3-推荐工具" tabindex="-1"><a class="header-anchor" href="#_3-推荐工具" aria-hidden="true">#</a> 3. 推荐工具</h3><p>推荐工具；- 随着课程讲解会引导大家安装这些工具。</p>',5),w={href:"https://termius.com/",target:"_blank",rel:"noopener noreferrer"},A=e("li",null,[o("IDEA 插件："),e("code",null,"Sequence Diagram"),o(" - 用于方法上右键查看代码流程的，主要帮助大家理解代码。")],-1),T={href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://natapp.cn/",target:"_blank",rel:"noopener noreferrer"},D=e("hr",null,null,-1),B=e("p",null,"好啦🌶，我们的课程列车🚄😆🙈💃🙆🏃🏻‍♀️即将启动，你准备好了吗🐴！",-1);function G(N,E){const c=r("ExternalLinkIcon");return n(),i("div",null,[s,e("p",null,[o("作者：小傅哥 "),l,o("博客："),e("a",p,[o("https://bugstack.cn"),t(c)]),g,o("星球："),e("a",_,[o("https://t.zsxq.com/0d3o5FKvc"),t(c)]),o(" - 课程入口")]),u,f,b,e("ol",null,[e("li",null,[o("在基础设置的基本必备服务搭建后，会进入接口鉴权的简单开发，这个模块开发后，大家就可以简单的使用了小傅哥提供的 OpenAI 了接口了。—— 当然你如果自己有 OpenAI 接口，也可以直接使用。"),e("strong",null,[o("像 "),e("a",m,[o("https://huggingface.co/"),t(c)]),o(" 也提供了一些可以免费使用的简单 Open-API")])]),x,k]),I,e("p",null,[o("星球课程涉及的代码部分会通过 "),e("a",P,[o("gitcode.net"),t(c)]),o(" 提供，你只需要申请一次就可以授权到星球所有课程的代码仓库。授权申请地址："),e("a",S,[o("https://t.zsxq.com/0dS1kW2r9"),t(c)]),o(" - 审核后即可访问星球的项目仓库了。")]),v,e("ul",null,[e("li",null,[e("a",w,[o("Termisu"),t(c)]),o("：云服务器链接工具，自带一套 SFTP 工具，很好用。")]),A,e("li",null,[e("a",T,[o("Docker"),t(c)]),o(" - 可本地安装，不需要非得购买云服务器，也可以满足学习诉求。")]),e("li",null,[e("a",C,[o("natapp"),t(c)]),o(" - 内网穿透工具，相当于你开启后，可以分配给你一个域名，让外网访问到你的服务。")])]),D,B])}const q=a(h,[["render",G],["__file","chatgpt.html.vue"]]);export{q as default};
