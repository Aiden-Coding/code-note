import{_ as t,r as p,o as e,c as o,a as n,b as s,d as c,e as l}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"用java实现jvm第三章《解析class文件》",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#用java实现jvm第三章《解析class文件》","aria-hidden":"true"},"#"),s(" 用Java实现JVM第三章《解析class文件》")],-1),k=n("br",null,null,-1),r={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=l(`<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="案例介绍" tabindex="-1"><a class="header-anchor" href="#案例介绍" aria-hidden="true">#</a> 案例介绍</h2><p>本案例主要介绍通过java代码从class文件中解析；class文件、常量池、属性表；</p><blockquote><p>作为类（或者接口）信息的载体，每个class文件都完整地定义了一个类。为了使java程序可以“编写一次，处处运行”，Java虚拟机规范对class文件格式进行了严格的规定。但是另外一方面，对于从哪里加载class文件，给了足够多的自由。Java虚拟机实现可以从文件系统读取和从JAR（或ZIP）压缩包中提取clss文件。除此之外，也可以通过网络下载、从数据库加载，甚至是在运行中直接生成class文件。Java虚拟机规范中所指的class文件，并非特指位于磁盘中的.class文件，而是泛指任何格式符号规范的class数据。</p></blockquote><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h2><ol><li>jdk 1.8.0</li><li>IntelliJ IDEA Community Edition 2018.3.1 x64</li></ol><h2 id="配置信息" tabindex="-1"><a class="header-anchor" href="#配置信息" aria-hidden="true">#</a> 配置信息</h2><ol><li>调试配置 <ol><li>配置位置：Run/Debug Configurations -&gt; program arguments</li><li>配置内容：-Xjre &quot;C:\\Program Files\\Java\\jdk1.8.0_161\\jre&quot; java.lang.String</li></ol></li></ol><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>jvm<span class="token operator">-</span><span class="token number">03</span>
├── pom<span class="token punctuation">.</span>xml
└── src
    └── main
    │    └── java
    │        └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm
	│             ├── classfile
    │             │   ├── attributes   <span class="token punctuation">{</span><span class="token class-name">BootstrapMethods</span><span class="token operator">/</span><span class="token class-name">Code</span><span class="token operator">/</span><span class="token class-name">ConstantValue</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
    │             │   ├── constantpool <span class="token punctuation">{</span><span class="token constant">CONSTANT_TAG_CLASS</span><span class="token operator">/</span><span class="token constant">CONSTANT_TAG_FIELDREF</span><span class="token operator">/</span><span class="token constant">CONSTANT_TAG_METHODREF</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
    │             │   ├── <span class="token class-name">ClassFile</span><span class="token punctuation">.</span>java
    │             │   ├── <span class="token class-name">ClassReader</span><span class="token punctuation">.</span>java
    │             │   └── <span class="token class-name">MemberInfo</span><span class="token punctuation">.</span>java	
    │             ├── classpath
    │             │   ├── impl
    │             │   │   ├── <span class="token class-name">CompositeEntry</span><span class="token punctuation">.</span>java
    │             │   │   ├── <span class="token class-name">DirEntry</span><span class="token punctuation">.</span>java 
    │             │   │   ├── <span class="token class-name">WildcardEntry</span><span class="token punctuation">.</span>java 
    │             │   │   └── <span class="token class-name">ZipEntry</span><span class="token punctuation">.</span>java    
    │             │   ├── <span class="token class-name">Classpath</span><span class="token punctuation">.</span>java
    │             │   └── <span class="token class-name">Entry</span><span class="token punctuation">.</span>java    
    │             ├── <span class="token class-name">Cmd</span><span class="token punctuation">.</span>java
    │             └── <span class="token class-name">Main</span><span class="token punctuation">.</span>java
    └── test
         └── java
             └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test
                 └── <span class="token class-name">HelloWorld</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码篇幅较长，不一一列举，需要源码可以关注公众号：<strong>bugstack虫洞栈</strong></p><blockquote><p>AttributeInfo.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>attributes</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span></span><span class="token class-name">ClassReader</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>constantpool<span class="token punctuation">.</span></span><span class="token class-name">ConstantPool</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * http://www.itstack.org
 * create by fuzhengwei on 2019/4/26
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AttributeInfo</span> <span class="token punctuation">{</span>

    <span class="token keyword">void</span> <span class="token function">readInfo</span><span class="token punctuation">(</span><span class="token class-name">ClassReader</span> reader<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token class-name">AttributeInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">readAttributes</span><span class="token punctuation">(</span><span class="token class-name">ClassReader</span> reader<span class="token punctuation">,</span> <span class="token class-name">ConstantPool</span> constantPool<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> attributesCount <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AttributeInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> attributes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AttributeInfo</span><span class="token punctuation">[</span>attributesCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> attributesCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            attributes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">readAttribute</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> attributes<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token class-name">AttributeInfo</span> <span class="token function">readAttribute</span><span class="token punctuation">(</span><span class="token class-name">ClassReader</span> reader<span class="token punctuation">,</span> <span class="token class-name">ConstantPool</span> constantPool<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> attrNameIdx <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> attrName <span class="token operator">=</span> constantPool<span class="token punctuation">.</span><span class="token function">getUTF8</span><span class="token punctuation">(</span>attrNameIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> attrLen <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU4ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AttributeInfo</span> attrInfo <span class="token operator">=</span> <span class="token function">newAttributeInfo</span><span class="token punctuation">(</span>attrName<span class="token punctuation">,</span> attrLen<span class="token punctuation">,</span> constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
        attrInfo<span class="token punctuation">.</span><span class="token function">readInfo</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> attrInfo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token class-name">AttributeInfo</span> <span class="token function">newAttributeInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> attrName<span class="token punctuation">,</span> <span class="token keyword">int</span> attrLen<span class="token punctuation">,</span> <span class="token class-name">ConstantPool</span> constantPool<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>attrName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&quot;BootstrapMethods&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BootstrapMethodsAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;Code&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CodeAttribute</span><span class="token punctuation">(</span>constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;ConstantValue&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantValueAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;Deprecated&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DeprecatedAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;EnclosingMethod&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">EnclosingMethodAttribute</span><span class="token punctuation">(</span>constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;Exceptions&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ExceptionsAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;InnerClasses&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InnerClassesAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;LineNumberTable&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LineNumberTableAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;LocalVariableTable&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LocalVariableTableAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;LocalVariableTypeTable&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LocalVariableTypeTableAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// case &quot;MethodParameters&quot;:</span>
            <span class="token comment">// case &quot;RuntimeInvisibleAnnotations&quot;:</span>
            <span class="token comment">// case &quot;RuntimeInvisibleParameterAnnotations&quot;:</span>
            <span class="token comment">// case &quot;RuntimeInvisibleTypeAnnotations&quot;:</span>
            <span class="token comment">// case &quot;RuntimeVisibleAnnotations&quot;:</span>
            <span class="token comment">// case &quot;RuntimeVisibleParameterAnnotations&quot;:</span>
            <span class="token comment">// case &quot;RuntimeVisibleTypeAnnotations&quot;:</span>
            <span class="token keyword">case</span> <span class="token string">&quot;Signature&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SignatureAttribute</span><span class="token punctuation">(</span>constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;SourceFile&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SourceFileAttribute</span><span class="token punctuation">(</span>constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// case &quot;SourceDebugExtension&quot;:</span>
            <span class="token comment">// case &quot;StackMapTable&quot;:</span>
            <span class="token keyword">case</span> <span class="token string">&quot;Synthetic&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SyntheticAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UnparsedAttribute</span><span class="token punctuation">(</span>attrName<span class="token punctuation">,</span> attrLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>ConstantInfo.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>constantpool</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span></span><span class="token class-name">ClassReader</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>constantpool<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * http://www.itstack.org
 * create by fuzhengwei on 2019/4/26
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ConstantInfo</span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_CLASS</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_FIELDREF</span> <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_METHODREF</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_INTERFACEMETHODREF</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_STRING</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_INTEGER</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_FLOAT</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_LONG</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_DOUBLE</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_NAMEANDTYPE</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_UTF8</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_METHODHANDLE</span> <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_METHODTYPE</span> <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">CONSTANT_TAG_INVOKEDYNAMIC</span> <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">readInfo</span><span class="token punctuation">(</span><span class="token class-name">ClassReader</span> reader<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> <span class="token function">tag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">static</span> <span class="token class-name">ConstantInfo</span> <span class="token function">readConstantInfo</span><span class="token punctuation">(</span><span class="token class-name">ClassReader</span> reader<span class="token punctuation">,</span> <span class="token class-name">ConstantPool</span> constantPool<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> tag <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU1ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ConstantInfo</span> constantInfo <span class="token operator">=</span> <span class="token function">newConstantInfo</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
        constantInfo<span class="token punctuation">.</span><span class="token function">readInfo</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> constantInfo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token class-name">ConstantInfo</span> <span class="token function">newConstantInfo</span><span class="token punctuation">(</span><span class="token keyword">int</span> tag<span class="token punctuation">,</span> <span class="token class-name">ConstantPool</span> constantPool<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_INTEGER</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantIntegerInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_FLOAT</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantFloatInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_LONG</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantLongInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_DOUBLE</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantDoubleInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_UTF8</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantUtf8Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_STRING</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantStringInfo</span><span class="token punctuation">(</span>constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_CLASS</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantClassInfo</span><span class="token punctuation">(</span>constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_FIELDREF</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantFieldRefInfo</span><span class="token punctuation">(</span>constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_METHODREF</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantMethodRefInfo</span><span class="token punctuation">(</span>constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_INTERFACEMETHODREF</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantInterfaceMethodRefInfo</span><span class="token punctuation">(</span>constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_NAMEANDTYPE</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantNameAndTypeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_METHODTYPE</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantMethodTypeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_METHODHANDLE</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantMethodHandleInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">CONSTANT_TAG_INVOKEDYNAMIC</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantInvokeDynamicInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClassFormatError</span><span class="token punctuation">(</span><span class="token string">&quot;constant pool tag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>ClassFile.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span></span><span class="token class-name">AttributeInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>constantpool<span class="token punctuation">.</span></span><span class="token class-name">ConstantPool</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * http://www.itstack.org
 * create by fuzhengwei on 2019/4/26
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClassFile</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> minorVersion<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> majorVersion<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ConstantPool</span> constantPool<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> accessFlags<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> thisClassIdx<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> supperClassIdx<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">AttributeInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> attributes<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ClassFile</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> classData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ClassReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassReader</span><span class="token punctuation">(</span>classData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">readAndCheckMagic</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">readAndCheckVersion</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>constantPool <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">readConstantPool</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>thisClassIdx <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>supperClassIdx <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>interfaces <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readUInt16s</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fields <span class="token operator">=</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">.</span><span class="token function">readMembers</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>methods <span class="token operator">=</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">.</span><span class="token function">readMembers</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>attributes <span class="token operator">=</span> <span class="token class-name">AttributeInfo</span><span class="token punctuation">.</span><span class="token function">readAttributes</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readAndCheckMagic</span><span class="token punctuation">(</span><span class="token class-name">ClassReader</span> reader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> magic <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU4ToHexStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">&quot;cafebabe&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>magic<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClassFormatError</span><span class="token punctuation">(</span><span class="token string">&quot;magic!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readAndCheckVersion</span><span class="token punctuation">(</span><span class="token class-name">ClassReader</span> reader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>minorVersion <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>majorVersion <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>majorVersion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token number">45</span><span class="token operator">:</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">46</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">47</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">48</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">49</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">50</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">51</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">52</span><span class="token operator">:</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>minorVersion <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedClassVersionError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">ConstantPool</span> <span class="token function">readConstantPool</span><span class="token punctuation">(</span><span class="token class-name">ClassReader</span> reader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConstantPool</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minorVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>minorVersion<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">majorVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>majorVersion<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ConstantPool</span> <span class="token function">constantPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constantPool<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">accessFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fields<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">methods</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>methods<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">className</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constantPool<span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>thisClassIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">superClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>supperClassIdx <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constantPool<span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>supperClassIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">interfaceNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaceNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>interfaces<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>interfaces<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            interfaceNames<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constantPool<span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span>interfaces<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> interfaceNames<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>ClassReader.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigInteger</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * http://www.itstack.org
 * create by fuzhengwei on 2019/5/13
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * java虚拟机定义了u1、u2、u4三种数据类型来表示；1字节、2字节、4字节，无符号整数。
 * 在如下实现中，用增位方式表示无符号类型：
 * u1、u2可以用int类型存储，因为int类型是4字节
 * u4 需要用long类型存储，因为long类型是8字节
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClassReader</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ClassReader</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//u1</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">readUint8</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> val <span class="token operator">=</span> <span class="token function">readByte</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">byte2int</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//u2</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">readUint16</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> val <span class="token operator">=</span> <span class="token function">readByte</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">byte2int</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//u4</span>
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">readUint32</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> val <span class="token operator">=</span> <span class="token function">readByte</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> str_hex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>str_hex<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">float</span> <span class="token function">readUint64TFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> val <span class="token operator">=</span> <span class="token function">readByte</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">floatValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">readUint64TLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> val <span class="token operator">=</span> <span class="token function">readByte</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">readUint64TDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> val <span class="token operator">=</span> <span class="token function">readByte</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">readUint16s</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">readUint16</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">readUint16</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">readBytes</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">readByte</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">readByte</span><span class="token punctuation">(</span><span class="token keyword">int</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> copy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> copy<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> length<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> copy<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">byte2int</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str_hex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>str_hex<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>MemberInfo.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span></span><span class="token class-name">AttributeInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">CodeAttribute</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ConstantValueAttribute</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>constantpool<span class="token punctuation">.</span></span><span class="token class-name">ConstantPool</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * http://www.itstack.org
 * create by fuzhengwei on 2019/4/26
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MemberInfo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ConstantPool</span> constantPool<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> accessFlags<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> nameIdx<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> descriptorIdx<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">AttributeInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> attributes<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">(</span><span class="token class-name">ClassReader</span> reader<span class="token punctuation">,</span> <span class="token class-name">ConstantPool</span> constantPool<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>constantPool <span class="token operator">=</span> constantPool<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nameIdx <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>descriptorIdx <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>attributes <span class="token operator">=</span> <span class="token class-name">AttributeInfo</span><span class="token punctuation">.</span><span class="token function">readAttributes</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">readMembers</span><span class="token punctuation">(</span><span class="token class-name">ClassReader</span> reader<span class="token punctuation">,</span> <span class="token class-name">ConstantPool</span> constantPool<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> fieldCount <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readU2ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MemberInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">[</span>fieldCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fieldCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fields<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> constantPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> fields<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">accessFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constantPool<span class="token punctuation">.</span><span class="token function">getUTF8</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>nameIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">descriptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constantPool<span class="token punctuation">.</span><span class="token function">getUTF8</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>descriptorIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CodeAttribute</span> <span class="token function">codeAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">AttributeInfo</span> attrInfo <span class="token operator">:</span> attributes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>attrInfo <span class="token keyword">instanceof</span> <span class="token class-name">CodeAttribute</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">CodeAttribute</span><span class="token punctuation">)</span> attrInfo<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ConstantValueAttribute</span> <span class="token class-name">ConstantValueAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">AttributeInfo</span> attrInfo <span class="token operator">:</span> attributes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>attrInfo <span class="token keyword">instanceof</span> <span class="token class-name">ConstantValueAttribute</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">ConstantValueAttribute</span><span class="token punctuation">)</span> attrInfo<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Main.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span></span><span class="token class-name">ClassFile</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span></span><span class="token class-name">MemberInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classpath<span class="token punctuation">.</span></span><span class="token class-name">Classpath</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * http://www.itstack.org
 * create by fuzhengwei on 2019/4/24
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Cmd</span> cmd <span class="token operator">=</span> <span class="token class-name">Cmd</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cmd<span class="token punctuation">.</span>ok <span class="token operator">||</span> cmd<span class="token punctuation">.</span>helpFlag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Usage: &lt;main class&gt; [-options] class [args...]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cmd<span class="token punctuation">.</span>versionFlag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//注意案例测试都是基于1.8，另外jdk1.9以后使用模块化没有rt.jar</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;java version \\&quot;1.8.0\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">startJVM</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">startJVM</span><span class="token punctuation">(</span><span class="token class-name">Cmd</span> cmd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Classpath</span> classpath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Classpath</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span>jre<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span>classpath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;classpath：%s class：%s args：%s\\n&quot;</span><span class="token punctuation">,</span>
                classpath<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span><span class="token function">getMainClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cmd<span class="token punctuation">.</span><span class="token function">getAppArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取className</span>
        <span class="token class-name">String</span> className <span class="token operator">=</span> cmd<span class="token punctuation">.</span><span class="token function">getMainClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ClassFile</span> classFile <span class="token operator">=</span> <span class="token function">loadClass</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> classpath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> classFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token function">printClassInfo</span><span class="token punctuation">(</span>classFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ClassFile</span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> className<span class="token punctuation">,</span> <span class="token class-name">Classpath</span> classpath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> classData <span class="token operator">=</span> classpath<span class="token punctuation">.</span><span class="token function">readClass</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ClassFile</span><span class="token punctuation">(</span>classData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Could not find or load main class &quot;</span> <span class="token operator">+</span> className<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token class-name">ClassFile</span> cf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;version: &quot;</span> <span class="token operator">+</span> cf<span class="token punctuation">.</span><span class="token function">majorVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> cf<span class="token punctuation">.</span><span class="token function">minorVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;constants count：&quot;</span> <span class="token operator">+</span> cf<span class="token punctuation">.</span><span class="token function">constantPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;access flags：0x%x\\n&quot;</span><span class="token punctuation">,</span> cf<span class="token punctuation">.</span><span class="token function">accessFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;this class：&quot;</span> <span class="token operator">+</span> cf<span class="token punctuation">.</span><span class="token function">className</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;super class：&quot;</span> <span class="token operator">+</span> cf<span class="token punctuation">.</span><span class="token function">superClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;interfaces：&quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">interfaceNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;fields count：&quot;</span> <span class="token operator">+</span> cf<span class="token punctuation">.</span><span class="token function">fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MemberInfo</span> memberInfo <span class="token operator">:</span> cf<span class="token punctuation">.</span><span class="token function">fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;  %s\\n&quot;</span><span class="token punctuation">,</span> memberInfo<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;methods count: &quot;</span> <span class="token operator">+</span> cf<span class="token punctuation">.</span><span class="token function">methods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MemberInfo</span> memberInfo <span class="token operator">:</span> cf<span class="token punctuation">.</span><span class="token function">methods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;  %s\\n&quot;</span><span class="token punctuation">,</span> memberInfo<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试结果" tabindex="-1"><a class="header-anchor" href="#测试结果" aria-hidden="true">#</a> 测试结果</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token string">&quot;C:\\Program Files\\Java\\jdk1.8.0_161\\bin\\java.exe&quot;</span> <span class="token string">&quot;-javaagent:D:\\Program Files\\JetBrains\\IntelliJ IDEA Community Edition 2018.3.1\\lib\\idea_rt.jar=61458:D:\\Program Files\\JetBrains\\IntelliJ IDEA Community Edition 2018.3.1\\bin&quot;</span> <span class="token operator">-</span><span class="token class-name">Dfile</span><span class="token punctuation">.</span>encoding<span class="token operator">=</span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span>classpath <span class="token string">&quot;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\rt.jar;E:\\itstack\\git\\istack-demo\\itstack-demo-jvm\\itstack-demo-jvm-03\\target\\classes;D:\\Program Files (x86)\\apache-maven-2.2.1\\repository\\com\\beust\\jcommander\\1.72\\jcommander-1.72.jar;D:\\Program Files (x86)\\apache-maven-2.2.1\\repository\\org\\projectlombok\\lombok\\1.18.0\\lombok-1.18.0.jar;D:\\Program Files (x86)\\apache-maven-2.2.1\\repository\\com\\alibaba\\fastjson\\1.2.40\\fastjson-1.2.40.jar&quot;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span></span>Main</span> <span class="token operator">-</span><span class="token class-name">Xjre</span> <span class="token string">&quot;C:\\Program Files\\Java\\jdk1.8.0_161\\jre&quot;</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span>
classpath：<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classpath<span class="token punctuation">.</span></span>Classpath</span><span class="token annotation punctuation">@4bf558aa</span> <span class="token keyword">class</span>：<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> args：<span class="token keyword">null</span>
version<span class="token operator">:</span> <span class="token number">52.0</span>
constants count：<span class="token number">540</span>
access flags：<span class="token number">0x31</span>
<span class="token keyword">this</span> <span class="token keyword">class</span>：java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span>
<span class="token keyword">super</span> <span class="token keyword">class</span>：java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span>
interfaces：<span class="token punctuation">[</span>java<span class="token operator">/</span>io<span class="token operator">/</span><span class="token class-name">Serializable</span><span class="token punctuation">,</span> java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Comparable</span><span class="token punctuation">,</span> java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">]</span>
fields count：<span class="token number">5</span>
value 		 <span class="token punctuation">[</span><span class="token class-name">C</span>
hash 		 <span class="token class-name">I</span>
serialVersionUID 		 <span class="token class-name">J</span>
serialPersistentFields 		 <span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>io<span class="token operator">/</span><span class="token class-name">ObjectStreamField</span><span class="token punctuation">;</span>
<span class="token constant">CASE_INSENSITIVE_ORDER</span> 		 <span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">Comparator</span><span class="token punctuation">;</span>
methods count<span class="token operator">:</span> <span class="token number">94</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">C</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">CII</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">III</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">BIII</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">BI</span><span class="token punctuation">)</span><span class="token class-name">V</span>
checkBounds 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">BII</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">BIILjava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">BIILjava</span><span class="token operator">/</span>nio<span class="token operator">/</span>charset<span class="token operator">/</span><span class="token class-name">Charset</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">BLjava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">BLjava</span><span class="token operator">/</span>nio<span class="token operator">/</span>charset<span class="token operator">/</span><span class="token class-name">Charset</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">BII</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">B</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">StringBuffer</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">StringBuilder</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>
<span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">CZ</span><span class="token punctuation">)</span><span class="token class-name">V</span>
length 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">I</span>
isEmpty 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
charAt 		 <span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">C</span>
codePointAt 		 <span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">I</span>
codePointBefore 		 <span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">I</span>
codePointCount 		 <span class="token punctuation">(</span><span class="token constant">II</span><span class="token punctuation">)</span><span class="token class-name">I</span>
offsetByCodePoints 		 <span class="token punctuation">(</span><span class="token constant">II</span><span class="token punctuation">)</span><span class="token class-name">I</span>
getChars 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">CI</span><span class="token punctuation">)</span><span class="token class-name">V</span>
getChars 		 <span class="token punctuation">(</span><span class="token constant">II</span><span class="token punctuation">[</span><span class="token constant">CI</span><span class="token punctuation">)</span><span class="token class-name">V</span>
getBytes 		 <span class="token punctuation">(</span><span class="token constant">II</span><span class="token punctuation">[</span><span class="token constant">BI</span><span class="token punctuation">)</span><span class="token class-name">V</span>
getBytes 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token class-name">B</span>
getBytes 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>nio<span class="token operator">/</span>charset<span class="token operator">/</span><span class="token class-name">Charset</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token class-name">B</span>
getBytes 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token class-name">B</span>
equals 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
contentEquals 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">StringBuffer</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
nonSyncContentEquals 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">AbstractStringBuilder</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
contentEquals 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
equalsIgnoreCase 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
compareTo 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">I</span>
compareToIgnoreCase 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">I</span>
regionMatches 		 <span class="token punctuation">(</span><span class="token class-name">ILjava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token constant">II</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
regionMatches 		 <span class="token punctuation">(</span><span class="token class-name">ZILjava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token constant">II</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
startsWith 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
startsWith 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
endsWith 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
hashCode 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">I</span>
indexOf 		 <span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">I</span>
indexOf 		 <span class="token punctuation">(</span><span class="token constant">II</span><span class="token punctuation">)</span><span class="token class-name">I</span>
indexOfSupplementary 		 <span class="token punctuation">(</span><span class="token constant">II</span><span class="token punctuation">)</span><span class="token class-name">I</span>
lastIndexOf 		 <span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">I</span>
lastIndexOf 		 <span class="token punctuation">(</span><span class="token constant">II</span><span class="token punctuation">)</span><span class="token class-name">I</span>
lastIndexOfSupplementary 		 <span class="token punctuation">(</span><span class="token constant">II</span><span class="token punctuation">)</span><span class="token class-name">I</span>
indexOf 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">I</span>
indexOf 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">I</span>
indexOf 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">CIILjava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">I</span>
indexOf 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">CII</span><span class="token punctuation">[</span><span class="token constant">CIII</span><span class="token punctuation">)</span><span class="token class-name">I</span>
lastIndexOf 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">I</span>
lastIndexOf 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">I</span>
lastIndexOf 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">CIILjava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">I</span>
lastIndexOf 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">CII</span><span class="token punctuation">[</span><span class="token constant">CIII</span><span class="token punctuation">)</span><span class="token class-name">I</span>
substring 		 <span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
substring 		 <span class="token punctuation">(</span><span class="token constant">II</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
subSequence 		 <span class="token punctuation">(</span><span class="token constant">II</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>
concat 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
replace 		 <span class="token punctuation">(</span><span class="token constant">CC</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
matches 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
contains 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
replaceFirst 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
replaceAll 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
replace 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
split 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
split 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
join 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
join 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Iterable</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
toLowerCase 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">Locale</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
toLowerCase 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
toUpperCase 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">Locale</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
toUpperCase 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
trim 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
toString 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
toCharArray 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token class-name">C</span>
format 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
format 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">Locale</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
valueOf 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
valueOf 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">C</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
valueOf 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">CII</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
copyValueOf 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">CII</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
copyValueOf 		 <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">C</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
valueOf 		 <span class="token punctuation">(</span><span class="token class-name">Z</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
valueOf 		 <span class="token punctuation">(</span><span class="token class-name">C</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
valueOf 		 <span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
valueOf 		 <span class="token punctuation">(</span><span class="token class-name">J</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
valueOf 		 <span class="token punctuation">(</span><span class="token class-name">F</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
valueOf 		 <span class="token punctuation">(</span><span class="token class-name">D</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
intern 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
compareTo 		 <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">I</span>
<span class="token generics"><span class="token punctuation">&lt;</span>clinit<span class="token punctuation">&gt;</span></span> 		 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>微信搜索「<strong>bugstack虫洞栈</strong>」公众号，关注后回复「<strong>用Java实现jvm源码</strong>」获取本文源码&amp;更多原创专题案例！</p>`,26);function v(m,b){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",r,[s("https://bugstack.cn"),c(a)])]),d])}const w=t(i,[["render",v],["__file","2019-05-03-yongJavashixianJVMdisanzhang《jiexiclasswenjian》.html.vue"]]);export{w as default};
