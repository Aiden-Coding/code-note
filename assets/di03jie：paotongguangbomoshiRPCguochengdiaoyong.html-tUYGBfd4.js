import{_ as t,r as o,o as p,c,a as n,b as s,d as e,e as l}from"./app-3RcBQnkC.js";const r={},i=n("h1",{id:"第03节-跑通广播模式rpc过程调用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#第03节-跑通广播模式rpc过程调用","aria-hidden":"true"},"#"),s(" 第03节：跑通广播模式RPC过程调用")],-1),k=n("br",null,null,-1),u={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！")],-1),_={href:"https://gitcode.net/KnowledgePlanet/Lottery/-/tree/210804_xfg_buildFramework",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,"描述：构建工程完成RPC接口的实现和调用",-1),m=n("p",null,[s("当基础的工程模块创建完成以后，还需要给整个工程注入"),n("code",null,"灵魂"),s("，就是让它可以跑通。这个过程包括一个简单的 RPC 接口功能实现和测试调用，那么这里为了让功能体现出一个完整度，还会创建出一个库表在 RPC 调用的时候查询出库表中的数据并🔙返回结果。那么在这个分支上我们就先来完成这样一个内容的实现。")],-1),b=n("h2",{id:"零、优秀作业",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#零、优秀作业","aria-hidden":"true"},"#"),s(" 零、优秀作业")],-1),f={href:"https://t.zsxq.com/06JaiyFIm",target:"_blank",rel:"noopener noreferrer"},y={href:"https://t.zsxq.com/06F2V3FqJ",target:"_blank",rel:"noopener noreferrer"},g={href:"https://t.zsxq.com/06uB27eIu",target:"_blank",rel:"noopener noreferrer"},w={href:"https://t.zsxq.com/06R3rBEA2",target:"_blank",rel:"noopener noreferrer"},E={href:"https://t.zsxq.com/06uRvJema",target:"_blank",rel:"noopener noreferrer"},v={href:"https://t.zsxq.com/06vbUNNbe",target:"_blank",rel:"noopener noreferrer"},T={href:"https://t.zsxq.com/06FaqVneM",target:"_blank",rel:"noopener noreferrer"},C={href:"https://t.zsxq.com/06rj6E6QZ",target:"_blank",rel:"noopener noreferrer"},N={href:"https://t.zsxq.com/06B2NFMBm",target:"_blank",rel:"noopener noreferrer"},R={href:"https://t.zsxq.com/06rjuNFYR",target:"_blank",rel:"noopener noreferrer"},L={href:"https://t.zsxq.com/06VRNZfe2",target:"_blank",rel:"noopener noreferrer"},M={href:"https://t.zsxq.com/06EIMR7ee",target:"_blank",rel:"noopener noreferrer"},x={href:"https://t.zsxq.com/07EqJqRrN",target:"_blank",rel:"noopener noreferrer"},U={href:"https://t.zsxq.com/0cJf5EQIc",target:"_blank",rel:"noopener noreferrer"},A={href:"https://t.zsxq.com/0c9V7T8PT",target:"_blank",rel:"noopener noreferrer"},q={href:"https://t.zsxq.com/0etx1mgu2",target:"_blank",rel:"noopener noreferrer"},P={href:"https://t.zsxq.com/0eh7ysSr6",target:"_blank",rel:"noopener noreferrer"},D={href:"https://t.zsxq.com/0fPtLUNKP",target:"_blank",rel:"noopener noreferrer"},O=l('<h2 id="一、创建抽奖活动表" tabindex="-1"><a class="header-anchor" href="#一、创建抽奖活动表" aria-hidden="true">#</a> 一、创建抽奖活动表</h2><p>在抽奖活动的设计和开发过程中，会涉及到的表信息包括：活动表、奖品表、策略表、规则表、用户参与表、中奖信息表等，这些都会在我们随着开发抽奖的过程中不断的添加出来这些表的创建。</p><p>那么目前我们为了先把程序跑通，可以先简单的创建出一个活动表，用于实现系统对数据库的CRUD操作，也就可以被RPC接口调用。在后面陆续实现的过程中可能会有一些不断优化和调整的点，用于满足系统对需求功能的实现。</p><p><strong>活动表(activity)</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>activity<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;自增ID&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>activity_id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;活动ID&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>activity_name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8mb4 <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;活动名称&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>activity_desc<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8mb4 <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;活动描述&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>begin_date_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;开始时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>end_date_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;结束时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>stock_count<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;库存&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>take_count<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;每人可参与次数&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>state<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;活动状态：1编辑、2提审、3撤审、4通过、5运行(审核通过后worker扫描状态)、6拒绝、7关闭、8开启&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>creator<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8mb4 <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建人&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;修改时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">UNIQUE</span> <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>unique_activity_id<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>activity_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_bin <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;活动配置&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>活动表：是一个用于配置抽奖活动的总表，用于存放活动信息，包括：ID、名称、描述、时间、库存、参与次数等。</li></ul><h2 id="二、pom-文件配置" tabindex="-1"><a class="header-anchor" href="#二、pom-文件配置" aria-hidden="true">#</a> 二、POM 文件配置</h2><p>按照现有工程的结构模块分层，包括：</p><ul><li>lottery-application，应用层，引用：<code>domain</code></li><li>lottery-common，通用包，引用：<code>无</code></li><li>lottery-domain，领域层，引用：<code>infrastructure</code></li><li>lottery-infrastructure，基础层，引用：<code>无</code></li><li>lottery-interfaces，接口层，引用：<code>application</code>、<code>rpc</code></li><li>lottery-rpc，RPC接口定义层，引用：<code>common</code></li></ul><p>在此分层结构和依赖引用下，各层级模块不能循环依赖，同时 <code>lottery-interfaces</code> 作为系统的 war 包工程，在构建工程时候需要依赖于 POM 中配置的相关信息。那这里就需要注意下，作为 Lottery 工程下的主 pom.xml 需要完成对 SpringBoot 父文件的依赖，此外还需要定义一些用于其他模块可以引入的配置信息，比如：jdk版本、编码方式等。而其他层在依赖于工程总 pom.xml 后还需要配置自己的信息。</p>',10);function F(z,I){const a=o("ExternalLinkIcon");return p(),c("div",null,[i,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",u,[s("https://bugstack.cn"),e(a)])]),d,n("ul",null,[n("li",null,[s("分支："),n("a",_,[s("210804_xfg_buildFramework"),e(a)])]),h]),m,b,n("ul",null,[n("li",null,[n("a",f,[s("整合dubbo远程调用rpc测试的时候配置一开始没改导致报错 @卡布奇诺"),e(a)])]),n("li",null,[n("a",y,[s("被广播模式坑了下，放上我最后调通的配置 @蛋蛋🏃₄₂.₁₉₅ *"),e(a)])]),n("li",null,[n("a",g,[s("跑通广播模式RPC过程调用 @一点江南"),e(a)])]),n("li",null,[n("a",w,[s("跑通广播模式RPC过程调用 @numqin"),e(a)])]),n("li",null,[n("a",E,[s("RPC 问题排查：Failed to configure a DataSource: 'url' attribute is not specified @sky是清新色"),e(a)])]),n("li",null,[n("a",v,[s("问题排查：由于我本地的mysql是8.0版本，项目的jdbc版本较低，导致项目运行报错 @有生之年有幸相见"),e(a)])]),n("li",null,[n("a",T,[s("问题排查：在项目根目录install时出现“Unable to find main class”编译错误 @404"),e(a)])]),n("li",null,[n("a",C,[s("问题排查：Error creating bean with name 'cn.itedus.lottery.test.ApiTest' @远航"),e(a)])]),n("li",null,[n("a",N,[s("跑通广播模式RPC过程调用 @Geroge Liu"),e(a)])]),n("li",null,[n("a",R,[s("跑通广播模式RPC过程调用 @一行。"),e(a)])]),n("li",null,[n("a",L,[s("抽奖系统第3-5打卡学习 @CCAT"),e(a)])]),n("li",null,[n("a",M,[s("RPC终于跑通了；启动类加注解、@Reference直连、禁用掉了虚拟网络 @YanL99"),e(a)])]),n("li",null,[n("a",x,[s("DDD + RPC 各个分层模块的 POM 配置和依赖关系 @Jachin"),e(a)])]),n("li",null,[n("a",U,[s("跑通广播模式RPC过程调用，JDK版本问题 @Cc"),e(a)])]),n("li",null,[n("a",A,[s("第一个问题是扫描不到相对应的bean @A"),e(a)])]),n("li",null,[n("a",q,[s("前三节的学习，下面是详细的步骤，给自己记录也给大家一点帮助。@Yu"),e(a)])]),n("li",null,[n("a",P,[s("使用dubbo跑通RPC调用，完整操作步骤流程记录 @夜空的寂静"),e(a)])]),n("li",null,[n("a",D,[s("跑通RPC记录，并记录问题处理 @D77"),e(a)])])]),O])}const S=t(r,[["render",F],["__file","di03jie：paotongguangbomoshiRPCguochengdiaoyong.html.vue"]]);export{S as default};
