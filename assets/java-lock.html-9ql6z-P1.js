const l=JSON.parse('{"key":"v-43747573","path":"/bestJavaer/java-concurrent/java-lock.html","title":"Java 锁事","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Java 锁分类","slug":"java-锁分类","link":"#java-锁分类","children":[]},{"level":2,"title":"线程是否需要对资源加锁","slug":"线程是否需要对资源加锁","link":"#线程是否需要对资源加锁","children":[{"level":3,"title":"悲观锁","slug":"悲观锁","link":"#悲观锁","children":[]},{"level":3,"title":"乐观锁","slug":"乐观锁","link":"#乐观锁","children":[]},{"level":3,"title":"两种锁的使用场景","slug":"两种锁的使用场景","link":"#两种锁的使用场景","children":[]},{"level":3,"title":"乐观锁的实现方式","slug":"乐观锁的实现方式","link":"#乐观锁的实现方式","children":[]},{"level":3,"title":"乐观锁的缺点","slug":"乐观锁的缺点","link":"#乐观锁的缺点","children":[]},{"level":3,"title":"CAS与synchronized的使用情景","slug":"cas与synchronized的使用情景","link":"#cas与synchronized的使用情景","children":[]}]},{"level":2,"title":"资源已被锁定，线程是否阻塞","slug":"资源已被锁定-线程是否阻塞","link":"#资源已被锁定-线程是否阻塞","children":[{"level":3,"title":"自旋锁的提出背景","slug":"自旋锁的提出背景","link":"#自旋锁的提出背景","children":[]},{"level":3,"title":"什么是自旋锁","slug":"什么是自旋锁","link":"#什么是自旋锁","children":[]},{"level":3,"title":"自旋锁的原理","slug":"自旋锁的原理","link":"#自旋锁的原理","children":[]},{"level":3,"title":"自旋锁的优缺点","slug":"自旋锁的优缺点","link":"#自旋锁的优缺点","children":[]},{"level":3,"title":"自旋锁的实现","slug":"自旋锁的实现","link":"#自旋锁的实现","children":[]}]},{"level":2,"title":"多个线程并发访问资源","slug":"多个线程并发访问资源","link":"#多个线程并发访问资源","children":[{"level":3,"title":"锁状态的分类","slug":"锁状态的分类","link":"#锁状态的分类","children":[]},{"level":3,"title":"Java 对象头","slug":"java-对象头","link":"#java-对象头","children":[]},{"level":3,"title":"Synchronized锁","slug":"synchronized锁","link":"#synchronized锁","children":[]},{"level":3,"title":"Monitor","slug":"monitor","link":"#monitor","children":[]},{"level":3,"title":"锁的分类及其解释","slug":"锁的分类及其解释","link":"#锁的分类及其解释","children":[]}]},{"level":2,"title":"锁的公平性与非公平性","slug":"锁的公平性与非公平性","link":"#锁的公平性与非公平性","children":[{"level":3,"title":"锁公平性的实现","slug":"锁公平性的实现","link":"#锁公平性的实现","children":[]},{"level":3,"title":"ReentrantLock 基本概述","slug":"reentrantlock-基本概述","link":"#reentrantlock-基本概述","children":[]},{"level":3,"title":"ReentrantLock 如何实现锁公平性","slug":"reentrantlock-如何实现锁公平性","link":"#reentrantlock-如何实现锁公平性","children":[]}]},{"level":2,"title":"根据锁是否可重入进行区分","slug":"根据锁是否可重入进行区分","link":"#根据锁是否可重入进行区分","children":[{"level":3,"title":"可重入锁","slug":"可重入锁","link":"#可重入锁","children":[]},{"level":3,"title":"不可重入锁","slug":"不可重入锁","link":"#不可重入锁","children":[]}]},{"level":2,"title":"多个线程能够共享同一把锁","slug":"多个线程能够共享同一把锁","link":"#多个线程能够共享同一把锁","children":[{"level":3,"title":"独占锁和共享锁","slug":"独占锁和共享锁","link":"#独占锁和共享锁","children":[]}]}],"git":{"createdTime":1704300175000,"updatedTime":1704300175000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":1}]},"filePathRelative":"bestJavaer/java-concurrent/java-lock.md"}');export{l as data};
