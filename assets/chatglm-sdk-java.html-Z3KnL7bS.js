import{_ as p,r as o,o as c,c as i,a as n,b as s,d as t,e}from"./app-3RcBQnkC.js";const l={},u=n("h1",{id:"《chatgpt-微服务应用体系构建》-chatglm-sdk-第1节-chatglm-sdk-智谱ai",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#《chatgpt-微服务应用体系构建》-chatglm-sdk-第1节-chatglm-sdk-智谱ai","aria-hidden":"true"},"#"),s(" 《ChatGPT 微服务应用体系构建》 - chatglm-sdk 第1节：ChatGLM SDK - 智谱Ai")],-1),r=n("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),v=n("p",null,"清华大学计算机系的超大规模训练模型 ChatGLM-130B 使用效果非常牛，所以我也想把这样的Ai能力接入到自己的应用中或者做一些 IntelliJ IDEA Plugin 使用。但经过了一晚上的折腾，我决定给它写个对接的SDK开源出来！—— 🤔 智谱Ai不是已经有了一个SDK吗？为啥还要写呢？那你写多少了？",-1),m=n("div",{align:"center"},[n("img",{src:"https://bugstack.cn/images/article/project/chatgpt/chatgpt-extra-231011-01.png?raw=true",width:"200px"})],-1),b={href:"https://github.com/zhipuai/zhipuai-sdk-java/",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,'ConfigV3类中，拆分ApiKey的操作；String[] arrStr = apiSecretKey.split(".");',-1),h=n("code",null,".",-1),f=n("code",null,"invalid apiSecretKey",-1),_=n("p",null,[s("不过，虽然 SDK 有点赶工，不好用。但不影响"),n("code",null,"智谱Ai(ChatGLM)"),s("是个好东西。他的官网中有API HTTP 接口对接描述。所以，小傅哥决定跟着按照它的文档写一个能简单对接，代码有干净整洁的 SDK 让大家使用。")],-1),y=n("div",{align:"center"},[n("img",{src:"https://bugstack.cn/images/article/project/chatgpt/chatgpt-extra-231011-06.png?raw=true",width:"650px"})],-1),w=n("p",null,[s("那么，接下来小傅哥就介绍下，如何基于"),n("code",null,"智谱Ai(ChatGLM)"),s("的开发者文档，开发一个通用的SDK组件。也让后续有想法PR贡献源码的伙伴，一起参与进来。—— 别看东西不大，写到简历上，也是非常精彩的一笔！")],-1),S=n("blockquote",null,[n("p",null,"本文不止有智谱Ai-SDK开发，还有如何在项目中运用SDK开发一个自己的OpenAi服务。文末有SDK链接和OpenAi应用工程。")],-1),A=n("h2",{id:"一、对接鉴权",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、对接鉴权","aria-hidden":"true"},"#"),s(" 一、对接鉴权")],-1),C={href:"https://open.bigmodel.cn/dev/api",target:"_blank",rel:"noopener noreferrer"},q={href:"https://open.bigmodel.cn/usercenter/apikeys",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"申请个人授权，创建ApiKey即可",-1),x=n("p",null,[s("智谱Ai的Api文档，与ChatGPT对接有一些差异。如果大家对接过ChatGPT开发，直接获取一个ApiKey就可以使用了。但在对接智谱Ai的Api时，需要把获取的ApiKey按照"),n("code",null,"."),s("号分割，并需要进行JWT-Token的创建。而这个Token才是实际传给接口的内容。")],-1),O=n("div",{align:"center"},[n("img",{src:"https://bugstack.cn/images/article/project/chatgpt/chatgpt-extra-231011-02.png?raw=true",width:"650px"})],-1),j=n("ul",null,[n("li",null,"因为生成Token会比较耗时，所以这里会使用Guava框架进行本地缓存29分钟，有效期30分钟的Token，确保可以有效的刷新。"),n("li",null,"在工程中提供了 BearerTokenUtils Token 生成工具类，测试的时候可以使用。")],-1),D=n("h2",{id:"二、接口处理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二、接口处理","aria-hidden":"true"},"#"),s(" 二、接口处理")],-1),K=n("strong",null,"文档",-1),I={href:"https://open.bigmodel.cn/dev/api#chatglm_lite",target:"_blank",rel:"noopener noreferrer"},M=e(`<table><thead><tr><th>传输方式</th><th>https</th></tr></thead><tbody><tr><td>请求地址</td><td>https://open.bigmodel.cn/api/paas/v3/model-api/chatglm_lite/sse-invoke</td></tr><tr><td>调用方式</td><td>SSE</td></tr><tr><td>字符编码</td><td>UTF-8</td></tr><tr><td>接口请求头</td><td>accept: text/event-stream</td></tr><tr><td>接口请求格式</td><td>JSON</td></tr><tr><td>响应格式</td><td>标准 Event Stream</td></tr><tr><td>接口请求类型</td><td>POST</td></tr><tr><td>开发语言</td><td>任意可发起 HTTP 请求的开发语言</td></tr></tbody></table><p>在正式开发代码，要把接口的使用先简单测试运行出来。之后再去编写代码。为此这里小傅哥先根据官网的文档和鉴权使用方式，编写了 curl http 请求；</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>curl <span class="token operator">-</span><span class="token class-name">X</span> <span class="token constant">POST</span> \\
        <span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsInNpZ25fdHlwZSI6IlNJR04ifQ.eyJhcGlfa2V5IjoiNGUwODdlNDEzNTMwNmVmNGE2NzZmMGNjZTNjZWU1NjAiLCJleHAiOjE2OTY5OTM5ODIzMTQsInRpbWVzdGFtcCI6MTY5Njk5MjE4MjMxNH0.9nxhRXTJcP4Q_YTQ8w5y0CZOBOu0epP1J56oDaYewQ8&quot;</span> \\
        <span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> \\
        <span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;User-Agent: Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)&quot;</span> \\
        <span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;Accept: text/event-stream&quot;</span> \\
        <span class="token operator">-</span>d &#39;<span class="token punctuation">{</span>
        <span class="token string">&quot;top_p&quot;</span><span class="token operator">:</span> <span class="token number">0.7</span><span class="token punctuation">,</span>
        <span class="token string">&quot;sseFormat&quot;</span><span class="token operator">:</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;temperature&quot;</span><span class="token operator">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span>
        <span class="token string">&quot;incremental&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token string">&quot;request_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xfg-1696992276607&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;prompt&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
        <span class="token string">&quot;role&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;写个java冒泡排序&quot;</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>&#39; \\
  http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token keyword">open</span><span class="token punctuation">.</span>bigmodel<span class="token punctuation">.</span>cn<span class="token operator">/</span>api<span class="token operator">/</span>paas<span class="token operator">/</span>v3<span class="token operator">/</span>model<span class="token operator">-</span>api<span class="token operator">/</span>chatglm_lite<span class="token operator">/</span>sse<span class="token operator">-</span>invoke
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-extra-231011-03.png?raw=true" width="850px"></div><ul><li><strong>注意</strong>：Authorization: Bearer 后面传的是 JWT Token 不是一个直接从官网复制的 ApiKey - <code>你可以使用工程中的 BearerTokenUtils 创建。</code></li><li>之后可以直接运行这段脚本(也可以导入到ApiPost工具中)，执行后就能获得到运行效果了。—— 速度非常快！</li></ul><h2 id="三、组件开发" tabindex="-1"><a class="header-anchor" href="#三、组件开发" aria-hidden="true">#</a> 三、组件开发</h2><p>在🤔考虑到抽象和设计原则下，小傅哥这里采用了会话模型结构进行工程框架设计。把程序的调用抽象为一次会话，而会话的创建则交给工厂🏭。通过工厂屏蔽使用细节，在使用上简化调用，尽可能让外部最少知道原则。这样的设计实现方式，既可以满足调用方开心的使用，也可以让SDK贡献者见代码如见文档，容易理解和上手。</p><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-extra-231011-04.png?raw=true" width="450px"></div><ul><li>工程非常注重会话的设计和使用，因为框架的根基搭建好以后，扩展各项功能就会有迹可循。<code>大部分代码就是因为早期没有考虑好框架，最后功能来了被填充的很乱。</code></li></ul><h3 id="_2-会话流程" tabindex="-1"><a class="header-anchor" href="#_2-会话流程" aria-hidden="true">#</a> 2. 会话流程</h3><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-extra-231011-05.png?raw=true" width="550px"></div><ul><li>会话流程以工厂创建 Session 为入口点进行使用，其他的操作都在组件内自己处理好。</li></ul><h3 id="_3-代码举例" tabindex="-1"><a class="header-anchor" href="#_3-代码举例" aria-hidden="true">#</a> 3. 代码举例</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">OpenAiSession</span> <span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1. 日志配置</span>
    <span class="token class-name">HttpLoggingInterceptor</span> httpLoggingInterceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpLoggingInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    httpLoggingInterceptor<span class="token punctuation">.</span><span class="token function">setLevel</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 2. 开启 Http 客户端</span>
    <span class="token class-name">OkHttpClient</span> okHttpClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OkHttpClient
            <span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span>httpLoggingInterceptor<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OpenAiHTTPInterceptor</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">connectTimeout</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getConnectTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">writeTimeout</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getWriteTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">readTimeout</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getReadTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    configuration<span class="token punctuation">.</span><span class="token function">setOkHttpClient</span><span class="token punctuation">(</span>okHttpClient<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 3. 创建 API 服务</span>
    <span class="token class-name">IOpenAiApi</span> openAiApi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Retrofit<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">baseUrl</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getApiHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">client</span><span class="token punctuation">(</span>okHttpClient<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addCallAdapterFactory</span><span class="token punctuation">(</span><span class="token class-name">RxJava2CallAdapterFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addConverterFactory</span><span class="token punctuation">(</span><span class="token class-name">JacksonConverterFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">IOpenAiApi</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    configuration<span class="token punctuation">.</span><span class="token function">setOpenAiApi</span><span class="token punctuation">(</span>openAiApi<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DefaultOpenAiSession</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这是一段 DefaultOpenAiSessionFactory 创建工厂开启会话的服务对象。使用方只需要在自己的工程中，创建出一个工厂对象就可以对接使用了。<strong>下文有代码示例</strong></li><li>其他更多的代码，直接看小傅哥开发好的 chatglm-sdk-java</li></ul><h2 id="四、组件使用" tabindex="-1"><a class="header-anchor" href="#四、组件使用" aria-hidden="true">#</a> 四、组件使用</h2><h3 id="_1-组件配置" tabindex="-1"><a class="header-anchor" href="#_1-组件配置" aria-hidden="true">#</a> 1. 组件配置</h3>`,18),L={href:"https://open.bigmodel.cn/usercenter/apikeys",target:"_blank",rel:"noopener noreferrer"},N=n("li",null,"运行环境：JDK 1.8+",-1),P=n("li",null,[s("maven pom - "),n("code",null,"暂时测试阶段，未推送到Maven中央仓库，需要下载代码本地 install 后使用")],-1),G=e(`<div class="language-pom line-numbers-mode" data-ext="pom"><pre class="language-pom"><code>&lt;dependency&gt;
    &lt;groupId&gt;cn.bugstack&lt;/groupId&gt;
    &lt;artifactId&gt;chatglm-sdk-java&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E={href:"https://github.com/fuzhengwei/chatglm-sdk-java",target:"_blank",rel:"noopener noreferrer"},H={href:"https://gitee.com/fustack/chatglm-sdk-java",target:"_blank",rel:"noopener noreferrer"},J={href:"https://gitcode.net/KnowledgePlanet/road-map/chatglm-sdk-java",target:"_blank",rel:"noopener noreferrer"},R=e(`<h3 id="_2-单元测试" tabindex="-1"><a class="header-anchor" href="#_2-单元测试" aria-hidden="true">#</a> 2. 单元测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">OpenAiSession</span> openAiSession<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Before</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_OpenAiSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1. 配置文件</span>
        <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configuration<span class="token punctuation">.</span><span class="token function">setApiHost</span><span class="token punctuation">(</span><span class="token string">&quot;https://open.bigmodel.cn/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configuration<span class="token punctuation">.</span><span class="token function">setApiSecretKey</span><span class="token punctuation">(</span><span class="token string">&quot;4e087e4135306ef4a676f0cce3cee560.sgP2*****&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2. 会话工厂</span>
        <span class="token class-name">OpenAiSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultOpenAiSessionFactory</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3. 开启会话</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>openAiSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 流式对话
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_completions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">JsonProcessingException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 入参；模型、请求信息</span>
        <span class="token class-name">ChatCompletionRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChatCompletionRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setModel</span><span class="token punctuation">(</span><span class="token class-name">Model</span><span class="token punctuation">.</span><span class="token constant">CHATGLM_LITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// chatGLM_6b_SSE、chatglm_lite、chatglm_lite_32k、chatglm_std、chatglm_pro</span>
        request<span class="token punctuation">.</span><span class="token function">setPrompt</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ChatCompletionRequest<span class="token punctuation">.</span>Prompt</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">7988151926241837899L</span><span class="token punctuation">;</span>

            <span class="token punctuation">{</span>
                <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">ChatCompletionRequest<span class="token punctuation">.</span>Prompt</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">role</span><span class="token punctuation">(</span><span class="token class-name">Role</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token string">&quot;写个java冒泡排序&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 请求</span>
        openAiSession<span class="token punctuation">.</span><span class="token function">completions</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">EventSourceListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onEvent</span><span class="token punctuation">(</span><span class="token class-name">EventSource</span> eventSource<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> type<span class="token punctuation">,</span> <span class="token class-name">String</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ChatCompletionResponse</span> response <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token class-name">ChatCompletionResponse</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果 onEvent：{}&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// type 消息类型，add 增量，finish 结束，error 错误，interrupted 中断</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">EventType</span><span class="token punctuation">.</span>finish<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">ChatCompletionResponse<span class="token punctuation">.</span>Meta</span> meta <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getMeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ChatCompletionResponse<span class="token punctuation">.</span>Meta</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[输出结束] Tokens {}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>meta<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClosed</span><span class="token punctuation">(</span><span class="token class-name">EventSource</span> eventSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;对话完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 等待</span>
        <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这是一个单元测试类，也是最常使用的流式对话模式。</li></ul><h2 id="五、应用接入" tabindex="-1"><a class="header-anchor" href="#五、应用接入" aria-hidden="true">#</a> 五、应用接入</h2><h3 id="_1-springboot-配置类" tabindex="-1"><a class="header-anchor" href="#_1-springboot-配置类" aria-hidden="true">#</a> 1. SpringBoot 配置类</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">ChatGLMSDKConfigProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChatGLMSDKConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;chatglm.sdk.config.enabled&quot;</span><span class="token punctuation">,</span> havingValue <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> matchIfMissing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">OpenAiSession</span> <span class="token function">openAiSession</span><span class="token punctuation">(</span><span class="token class-name">ChatGLMSDKConfigProperties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1. 配置文件</span>
        <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>bugstack<span class="token punctuation">.</span>chatglm<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span>Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>bugstack<span class="token punctuation">.</span>chatglm<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span>Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configuration<span class="token punctuation">.</span><span class="token function">setApiHost</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getApiHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configuration<span class="token punctuation">.</span><span class="token function">setApiSecretKey</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getApiSecretKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2. 会话工厂</span>
        <span class="token class-name">OpenAiSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultOpenAiSessionFactory</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3. 开启会话</span>
        <span class="token keyword">return</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;chatglm.sdk.config&quot;</span><span class="token punctuation">,</span> ignoreInvalidFields <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChatGLMSDKConfigProperties</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/** 状态；open = 开启、close 关闭 */</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> enable<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 转发地址 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> apiHost<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 可以申请 sk-*** */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> apiSecretKey<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">OpenAiSession</span> openAiSession<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意：如果你在服务中配置了关闭启动 ChatGLM SDK 那么注入 openAiSession 为 null</li></ul><h3 id="_2-yml-配置" tabindex="-1"><a class="header-anchor" href="#_2-yml-配置" aria-hidden="true">#</a> 2. yml 配置</h3><div class="language-pom line-numbers-mode" data-ext="pom"><pre class="language-pom"><code># ChatGLM SDK Config
chatglm:
  sdk:
    config:
      # 状态；true = 开启、false 关闭
      enabled: false
      # 官网地址 
      api-host: https://open.bigmodel.cn/
      # 官网申请 https://open.bigmodel.cn/usercenter/apikeys
      api-key: 4e087e4135306ef4a676f0cce3cee560.sgP2DUs*****
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>你可以在配置文件中，通过 enabled 参数，启动和关闭 ChatGLM SDK</li></ul>`,11);function B(F,U){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[s("作者：小傅哥 "),r,s("博客："),n("a",k,[s("https://bugstack.cn"),t(a)])]),d,v,m,n("p",null,[s("在很早之前就关注了智谱Ai(ChatGLM)，也看到官网有一个Java对接的"),n("a",b,[s("SDK"),t(a)]),s("方式。但从前几天开始正式对接发现，这SDK是8月份提交的，10个commit，而且已经2个月没有更新了。所以真的是不少Bug呀，呀，呀！如果不去修改它的SDK代码，就没法对接。如；"),g,s(" 但这里的"),h,s("是正则的关键字，所以根本没法拆分。一起动就报错 "),f,s(" 这对于初次对接并且没有看源码的伙伴来说，是不小的炸雷。")]),_,y,w,S,A,n("ul",null,[n("li",null,[s("文档："),n("a",C,[s("https://open.bigmodel.cn/dev/api"),t(a)])]),n("li",null,[s("ApiKey："),n("a",q,[s("https://open.bigmodel.cn/usercenter/apikeys"),t(a)]),s(" - "),T])]),x,O,j,D,n("p",null,[K,s("："),n("a",I,[s("https://open.bigmodel.cn/dev/api#chatglm_lite"),t(a)]),s(" - 以Api文档的chatglm_lite模型举例对接")]),M,n("ul",null,[n("li",null,[s("申请ApiKey："),n("a",L,[s("https://open.bigmodel.cn/usercenter/apikeys"),t(a)]),s(" - 注册申请开通，即可获得 ApiKey")]),N,P]),G,n("ul",null,[n("li",null,[s("源码(Github)："),n("a",E,[s("https://github.com/fuzhengwei/chatglm-sdk-java"),t(a)])]),n("li",null,[s("源码(Gitee)："),n("a",H,[s("https://gitee.com/fustack/chatglm-sdk-java"),t(a)])]),n("li",null,[s("源码(Gitcode)："),n("a",J,[s("https://gitcode.net/KnowledgePlanet/road-map/chatglm-sdk-java"),t(a)])])]),R])}const V=p(l,[["render",B],["__file","chatglm-sdk-java.html.vue"]]);export{V as default};
