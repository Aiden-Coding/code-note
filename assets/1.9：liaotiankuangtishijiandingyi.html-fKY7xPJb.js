import{_ as a,r as o,o as i,c as s,a as e,b as t,d as l,f as c}from"./app-3RcBQnkC.js";const r={},_=e("h1",{id:"_1-9-聊天框体事件定义",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-9-聊天框体事件定义","aria-hidden":"true"},"#"),t(" 1.9：聊天框体事件定义")],-1),d=e("br",null,null,-1),h={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},u=e("blockquote",null,[e("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！")],-1),p=e("h2",{id:"一、前言",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一、前言","aria-hidden":"true"},"#"),t(" 一、前言")],-1),f=e("p",null,"在桌面版 UI 开发中，为了能使 UI 与业务逻辑隔离，需要在我们把 UI 打包后提供出操作界面的展示效果的接口以及界面操作事件抽象类。那么可以按照下图理解；",-1),m=e("ul",null,[e("li",null,"从示意图中可以看到，我们可以通过一些列提供出的接口，来操作 UI 效果的展示。"),e("li",null,"之后是每一个 UI 里的行为操作都会产生相应那么的事件，那么我们可以在 UI 中定义抽象类，并由外部来实现这些类最终交给 UI，这样就可以做到很好的隔离。")],-1),g=e("p",null,"好！那么接下来我们就开始将事件类的内容进行定义和实现，同时我们会将接口信息进行梳理展示。以此来让读者更清晰的看到我们都提供了哪些接口和事件。",-1),k=e("h2",{id:"二、接口列表",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#二、接口列表","aria-hidden":"true"},"#"),t(" 二、接口列表")],-1),I=e("p",null,"因为在随着我们的 UI 开发和测试数据填充，我们已经将接口内容实现完成。所有的接口信息如下；",-1),b=e("p",null,[e("strong",null,"org.itstack.naive.chat.ui.view.chat.IChat")],-1);function x(U,v){const n=o("ExternalLinkIcon");return i(),s("div",null,[_,e("p",null,[t("作者：小傅哥 "),d,t("博客："),e("a",h,[t("https://bugstack.cn"),l(n)])]),u,p,f,c(" ![](/images/article/project/im/project-im-1.9-01.png) "),m,g,k,I,b])}const N=a(r,[["render",x],["__file","1.9：liaotiankuangtishijiandingyi.html.vue"]]);export{N as default};
