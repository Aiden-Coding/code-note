const e=JSON.parse('{"key":"v-83f1a85e","path":"/bestJavaer/design-pattern/designpattern-basic.html","title":"设计模式超强总结","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"UML中类图以及类图之间的关系","slug":"uml中类图以及类图之间的关系","link":"#uml中类图以及类图之间的关系","children":[{"level":3,"title":"类、接口和类图","slug":"类、接口和类图","link":"#类、接口和类图","children":[]}]},{"level":2,"title":"设计模式的原则","slug":"设计模式的原则","link":"#设计模式的原则","children":[{"level":3,"title":"开闭原则（Open Closed Principle）","slug":"开闭原则-open-closed-principle","link":"#开闭原则-open-closed-principle","children":[]},{"level":3,"title":"单一职责原则（Single Responsiblity Principle）","slug":"单一职责原则-single-responsiblity-principle","link":"#单一职责原则-single-responsiblity-principle","children":[]},{"level":3,"title":"里式替换原则（Liskov Substitution Principle）","slug":"里式替换原则-liskov-substitution-principle","link":"#里式替换原则-liskov-substitution-principle","children":[]},{"level":3,"title":"依赖倒转原则（Dependency Inversion Principle）","slug":"依赖倒转原则-dependency-inversion-principle","link":"#依赖倒转原则-dependency-inversion-principle","children":[]},{"level":3,"title":"接口分离原则（Interface Segregation Principle）","slug":"接口分离原则-interface-segregation-principle","link":"#接口分离原则-interface-segregation-principle","children":[]},{"level":3,"title":"迪米特原则（Principle of Least Knowledge）","slug":"迪米特原则-principle-of-least-knowledge","link":"#迪米特原则-principle-of-least-knowledge","children":[]}]},{"level":2,"title":"二十三种设计模式","slug":"二十三种设计模式","link":"#二十三种设计模式","children":[{"level":3,"title":"设计模式概述","slug":"设计模式概述","link":"#设计模式概述","children":[]},{"level":3,"title":"设计模式的类型","slug":"设计模式的类型","link":"#设计模式的类型","children":[]}]}],"git":{"createdTime":1704300175000,"updatedTime":1704300175000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":1}]},"filePathRelative":"bestJavaer/design-pattern/designpattern-basic.md"}');export{e as data};
