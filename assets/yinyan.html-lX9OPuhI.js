import{_ as n,r as a,o as d,c as r,a as e,b as t,d as c,e as s}from"./app-3RcBQnkC.js";const l={},h=e("h1",{id:"《chatgpt-微服务应用体系构建》引言-学习指引",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#《chatgpt-微服务应用体系构建》引言-学习指引","aria-hidden":"true"},"#"),t(" 《ChatGPT 微服务应用体系构建》引言：学习指引")],-1),i=e("br",null,null,-1),_={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},p=e("blockquote",null,[e("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),u=e("li",null,[e("strong",null,"本章难度"),t("：★☆☆☆☆")],-1),g=e("li",null,[e("strong",null,"本章重点"),t("：开篇介绍课程信息以及如何进入学习。后续也会把一些共性的学习问题在这里说明。")],-1),x=e("strong",null,"课程视频",-1),f={href:"https://t.zsxq.com/0dYzxHlZv",target:"_blank",rel:"noopener noreferrer"},m=s('<h2 id="一、产品形态" tabindex="-1"><a class="header-anchor" href="#一、产品形态" aria-hidden="true">#</a> 一、产品形态</h2><p>这趟车🚌，本身的核心是关于<strong>微服务应用体系的构建</strong>，通过讲解配置<code>Docker</code>、<code>Nginx</code>、<code>SSL</code>等环境以及开发出<code>鉴权</code>、<code>认证</code>、<code>微信公众号</code>、<code>企业微信</code>、<code>支付宝交易</code>等模块的方式，完善体系的物料服务。而 ChatGPT 只是其中的一种产品形态而已，这种产品形态通过 API 的方式与具体的物料服务模块解耦。这样做的方式是因为基础的物料<code>【物料指SDK和服务】</code>并不会频繁变化，而离业务最近的 API 会随业务变动发生较多的改动。所以这样的应用架构方式，在互联网大厂中也是非常常见和常用的。</p><p>这些东西的价值在于架构思维，而我也希望授人以渔，教会大家一些根本的东西，而不是永远的在CV+CRUD。有了这样的学习，学习的就不只是这样一个项目，而是可以把这个项目中所涉及的组件开发，都能进行任意物料模块与需要对接的服务进行关联打通使用。方便<code>写到简历</code>、<code>用到项目</code>、<code>实战锻炼</code>、<code>积累经验</code>。</p><h2 id="二、拓扑结构" tabindex="-1"><a class="header-anchor" href="#二、拓扑结构" aria-hidden="true">#</a> 二、拓扑结构</h2><p>接下来我们再以工程拓扑的视角看下这套需要开发的系统；</p><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-00-01.png?raw=true" width="850px"></div><p>如拓扑结构，系统从上到下以不同的产品形态，统一调用封装的服务API进行功能的流转。API系统中所处理的核心动作，会以各个物料模块进行实现。所以这里会拆分出标准的 ChatGPT-API 业务系统，之后再由各个模块系统支撑。到具体的模块中再进行详细的系统设计。</p>',7);function b(k,P){const o=a("ExternalLinkIcon");return d(),r("div",null,[h,e("p",null,[t("作者：小傅哥 "),i,t("博客："),e("a",_,[t("https://bugstack.cn"),c(o)])]),p,e("ul",null,[u,g,e("li",null,[x,t("："),e("a",f,[t("https://t.zsxq.com/0dYzxHlZv"),c(o)])])]),m])}const I=n(l,[["render",b],["__file","yinyan.html.vue"]]);export{I as default};
