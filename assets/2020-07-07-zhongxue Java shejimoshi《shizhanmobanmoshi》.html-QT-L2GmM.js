import{_ as e,r as c,o,c as l,a as n,b as s,d as t,e as p}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"重学-java-设计模式-实战模版模式「模拟爬虫各类电商商品-生成营销推广海报场景」",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#重学-java-设计模式-实战模版模式「模拟爬虫各类电商商品-生成营销推广海报场景」","aria-hidden":"true"},"#"),s(" 重学 Java 设计模式：实战模版模式「模拟爬虫各类电商商品，生成营销推广海报场景」")],-1),k=n("br",null,null,-1),r={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=726510008&bvid=BV1CS4y1b7UH&cid=718515511&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),v=p('<h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>黎明前的坚守，的住吗？</code></p><p>有人举过这样一个例子，先给你张北大的录取通知书，但要求你每天5点起床，12点睡觉😪，刻苦学习，勤奋上进。只要你坚持三年，这张通知书就有效。如果是你，你能坚持吗？其实对于这个例子很难在我们的人生中出现，因为它目标明确，有准确的行军路线。就像你是土豪家庭，家里给你安排的明明白白一样，只要你按照这个方式走就不会有问题。可大多数时候我们并没有这样的路线，甚至不知道多久到达自己的黎明。但！谁又不渴望见到黎明呢，坚持吧！</p><p><code>不要轻易被洗脑</code></p><p><code>键盘侠⌨</code>、<code>网络喷壶</code>，几乎当你努力坚持一件事的时候，在这条路上会遇到形形色色的人和事。有时候接收建议完善自己是有必要的，但不能放弃自己的初心和底线，有时候只坚持自己也是难能可贵的。<code>子路之勇，子贡之辩，冉有之智，此三子者，皆天下之所谓难能而可贵者也</code>。阳光和努力是这个世界最温暖的东西，加油坚持好自己的选的路。</p><p><code>有时还好坚持了</code></p><p>当你为自己的一个决定而感到万分开心😄时，是不是也非常感谢自己还好坚持了。坚持、努力、终身学习，似乎在程序员这个行业是离不开的，当你意愿于把这当做一份可以努力的爱好时，你就会愿意为此而努力。而我们很难说只在机会要来时准备，而是一直努力等待机会。也就是很多人说的别人抓住机会是因为一直在准备着。</p><h2 id="二、开发环境" tabindex="-1"><a class="header-anchor" href="#二、开发环境" aria-hidden="true">#</a> 二、开发环境</h2>',8),g=n("li",null,"JDK 1.8",-1),b=n("li",null,"Idea + Maven",-1),h=n("strong",null,"公众号",-1),f={href:"https://bugstack.cn/assets/images/qrcode.png",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"bugstack虫洞栈",-1),S=n("code",null,"源码下载",-1),y=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"工程"),n("th",null,"描述")])]),n("tbody",null,[n("tr",null,[n("td",null,"itstack-demo-design-21-00"),n("td",null,"场景模拟工程；模拟爬虫商品生成海报场景")])])],-1),_=n("h2",{id:"三、模版模式介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#三、模版模式介绍","aria-hidden":"true"},"#"),s(" 三、模版模式介绍")],-1),q=n("p",null,[n("img",{src:"https://bugstack.cn/assets/images/2020/itstack-demo-design-21-01.png",alt:"模版模式，图片来自 refactoringguru.cn"})],-1),M={href:"https://refactoringguru.cn/design-patterns/template-method",target:"_blank",rel:"noopener noreferrer"},I=p(`<p>模板模式的核心设计思路是通过在，抽象类中定义抽象方法的执行顺序，并将抽象方法设定为只有子类实现，但不设计<code>独立访问</code>的方法。简单说也就是把你安排的明明白白的。</p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-21-02.png" alt="西游记，孙悟空打妖怪"></p><p>就像西游记的99八十一难，基本每一关都是；师傅被掳走、打妖怪、妖怪被收走，具体什么妖怪你自己定义，怎么打你想办法，最后收走还是弄死看你本事，我只定义执行顺序和基本策略，具体的每一难由观音来安排。</p><h2 id="四、案例场景模拟" tabindex="-1"><a class="header-anchor" href="#四、案例场景模拟" aria-hidden="true">#</a> 四、案例场景模拟</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-21-03.png" alt="场景模拟；爬虫电商商品，组装优惠推广"></p><p><strong>在本案例中我们模拟爬虫各类电商商品，生成营销推广海报场景</strong></p><p>关于模版模式的核心点在于由抽象类定义抽象方法执行策略，也就是说父类规定了好一系列的执行标准，这些标准的串联成一整套业务流程。</p><p>在这个场景中我们模拟爬虫爬取各类商家的商品信息，生成推广海报(<code>海报中含带个人的邀请码</code>)赚取商品返利。<em>声明，这里是模拟爬取，并没有真的爬取</em></p><p>而整个的爬取过程分为；模拟登录、爬取信息、生成海报，这三个步骤，另外；</p><ol><li>因为有些商品只有登录后才可以爬取，并且登录可以看到一些特定的价格这与未登录用户看到的价格不同。</li><li>不同的电商网站爬取方式不同，解析方式也不同，因此可以作为每一个实现类中的特定实现。</li><li>生成海报的步骤基本一样，但会有特定的商品来源标识。所以这样三个步骤可以使用模版模式来设定，并有具体的场景做子类实现。</li></ol><h2 id="五、模版模式搭建工程" tabindex="-1"><a class="header-anchor" href="#五、模版模式搭建工程" aria-hidden="true">#</a> 五、模版模式搭建工程</h2><p>模版模式的业务场景可能在平时的开发中并不是很多，主要因为这个设计模式会在抽象类中定义逻辑行为的执行顺序。一般情况下，我们用的抽象类定义的逻辑行为都比较轻量级或者没有，只是提供一些基本方法公共调用和实现。</p><p>但如果遇到适合的场景使用这样的设计模式也是非常方便的，因为他可以控制整套逻辑的执行顺序和统一的输入、输出，而对于实现方只需要关心好自己的业务逻辑即可。</p><p>而在我们这个场景中，只需要记住这三步的实现即可；<code>模拟登录</code>、<code>爬取信息</code>、<code>生成海报</code></p><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">21</span><span class="token operator">-</span><span class="token number">00</span>
└── src
    ├── main
    │   └── java
    │       └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
    │           ├── group
    │           │	  ├── <span class="token class-name">DangDangNetMall</span><span class="token punctuation">.</span>java
    │           │	  ├── <span class="token class-name">JDNetMall</span><span class="token punctuation">.</span>java
    │           │	  └── <span class="token class-name">TaoBaoNetMall</span><span class="token punctuation">.</span>java
    │           ├──  <span class="token class-name">HttpClient</span><span class="token punctuation">.</span>java
    │           └──  <span class="token class-name">NetMall</span><span class="token punctuation">.</span>java
    └── test
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test
                └── <span class="token class-name">ApiTest</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>模版模式模型结构</strong></p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-21-04.png" alt="模版模式模型结构"></p><ul><li>以上的代码结构还是比较简单的，一个定义了抽象方法执行顺序的核心抽象类，以及三个模拟具体的实现(<code>京东</code>、<code>淘宝</code>、<code>当当</code>)的电商服务。</li></ul><h3 id="_2-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-代码实现" aria-hidden="true">#</a> 2. 代码实现</h3><h4 id="_2-1-定义执行顺序的抽象类" tabindex="-1"><a class="header-anchor" href="#_2-1-定义执行顺序的抽象类" aria-hidden="true">#</a> 2.1 定义执行顺序的抽象类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 基础电商推广服务
 * 1. 生成最优价商品海报
 * 2. 海报含带推广邀请码
 */</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">NetMall</span> <span class="token punctuation">{</span>

    <span class="token keyword">protected</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">NetMall</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> uId<span class="token punctuation">;</span>   <span class="token comment">// 用户ID</span>
    <span class="token class-name">String</span> uPwd<span class="token punctuation">;</span>  <span class="token comment">// 用户密码</span>

    <span class="token keyword">public</span> <span class="token class-name">NetMall</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> uPwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>uId <span class="token operator">=</span> uId<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>uPwd <span class="token operator">=</span> uPwd<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 生成商品推广海报
     *
     * <span class="token keyword">@param</span> <span class="token parameter">skuUrl</span> 商品地址(京东、淘宝、当当)
     * <span class="token keyword">@return</span> 海报图片base64位信息
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">generateGoodsPoster</span><span class="token punctuation">(</span><span class="token class-name">String</span> skuUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">login</span><span class="token punctuation">(</span>uId<span class="token punctuation">,</span> uPwd<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>             <span class="token comment">// 1. 验证登录</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> reptile <span class="token operator">=</span> <span class="token function">reptile</span><span class="token punctuation">(</span>skuUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2. 爬虫商品</span>
        <span class="token keyword">return</span> <span class="token function">createBase64</span><span class="token punctuation">(</span>reptile<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 3. 组装海报</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 模拟登录</span>
    <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token class-name">Boolean</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> uPwd<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 爬虫提取商品信息(登录后的优惠价格)</span>
    <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">reptile</span><span class="token punctuation">(</span><span class="token class-name">String</span> skuUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 生成商品海报信息</span>
    <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token class-name">String</span> <span class="token function">createBase64</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> goodsInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这个类是此设计模式的灵魂</li><li>定义可被外部访问的方法<code>generateGoodsPoster</code>，用于生成商品推广海报</li><li><code>generateGoodsPoster</code> 在方法中定义抽象方法的执行顺序 1 2 3 步</li><li>提供三个具体的抽象方法，让外部继承方实现；模拟登录(<code>login</code>)、模拟爬取(<code>reptile</code>)、生成海报(<code>createBase64</code>)</li></ul><h4 id="_2-2-模拟爬虫京东" tabindex="-1"><a class="header-anchor" href="#_2-2-模拟爬虫京东" aria-hidden="true">#</a> 2.2 模拟爬虫京东</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDNetMall</span> <span class="token keyword">extends</span> <span class="token class-name">NetMall</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">JDNetMall</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> uPwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>uId<span class="token punctuation">,</span> uPwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> uPwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟京东用户登录 uId：{} uPwd：{}&quot;</span><span class="token punctuation">,</span> uId<span class="token punctuation">,</span> uPwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">reptile</span><span class="token punctuation">(</span><span class="token class-name">String</span> skuUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token class-name">HttpClient</span><span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span>skuUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Pattern</span> p9 <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;(?&lt;=title\\\\&gt;).*(?=&lt;/title)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Matcher</span> m9 <span class="token operator">=</span> p9<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>m9<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> m9<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;5999.00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟京东商品爬虫解析：{} | {} 元 {}&quot;</span><span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> skuUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> map<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createBase64</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> goodsInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BASE64Encoder</span> encoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BASE64Encoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟生成京东商品base64海报&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> encoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>goodsInfo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>模拟登录</li><li>爬取信息，这里只是把<code>title</code>的信息爬取后的结果截取出来。</li><li>模拟创建<code>base64</code>图片的方法</li></ul><h4 id="_2-3-模拟爬虫淘宝" tabindex="-1"><a class="header-anchor" href="#_2-3-模拟爬虫淘宝" aria-hidden="true">#</a> 2.3 模拟爬虫淘宝</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TaoBaoNetMall</span> <span class="token keyword">extends</span> <span class="token class-name">NetMall</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">TaoBaoNetMall</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> uPwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>uId<span class="token punctuation">,</span> uPwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> uPwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟淘宝用户登录 uId：{} uPwd：{}&quot;</span><span class="token punctuation">,</span> uId<span class="token punctuation">,</span> uPwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">reptile</span><span class="token punctuation">(</span><span class="token class-name">String</span> skuUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token class-name">HttpClient</span><span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span>skuUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Pattern</span> p9 <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;(?&lt;=title\\\\&gt;).*(?=&lt;/title)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Matcher</span> m9 <span class="token operator">=</span> p9<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>m9<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> m9<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;4799.00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟淘宝商品爬虫解析：{} | {} 元 {}&quot;</span><span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> skuUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> map<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createBase64</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> goodsInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BASE64Encoder</span> encoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BASE64Encoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟生成淘宝商品base64海报&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> encoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>goodsInfo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>同上，模拟登录和爬取以及创建图片的<code>base64</code></li></ul><h4 id="_2-4-模拟爬虫当当" tabindex="-1"><a class="header-anchor" href="#_2-4-模拟爬虫当当" aria-hidden="true">#</a> 2.4 模拟爬虫当当</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DangDangNetMall</span> <span class="token keyword">extends</span> <span class="token class-name">NetMall</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">DangDangNetMall</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> uPwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>uId<span class="token punctuation">,</span> uPwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> uPwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟当当用户登录 uId：{} uPwd：{}&quot;</span><span class="token punctuation">,</span> uId<span class="token punctuation">,</span> uPwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">reptile</span><span class="token punctuation">(</span><span class="token class-name">String</span> skuUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token class-name">HttpClient</span><span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span>skuUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Pattern</span> p9 <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;(?&lt;=title\\\\&gt;).*(?=&lt;/title)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Matcher</span> m9 <span class="token operator">=</span> p9<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>m9<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> m9<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;4548.00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟当当商品爬虫解析：{} | {} 元 {}&quot;</span><span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> skuUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> map<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createBase64</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> goodsInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BASE64Encoder</span> encoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BASE64Encoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟生成当当商品base64海报&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> encoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>goodsInfo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>同上，模拟登录和爬取以及创建图片的<code>base64</code></li></ul><h3 id="_3-测试验证" tabindex="-1"><a class="header-anchor" href="#_3-测试验证" aria-hidden="true">#</a> 3. 测试验证</h3><h4 id="_3-1-编写测试类" tabindex="-1"><a class="header-anchor" href="#_3-1-编写测试类" aria-hidden="true">#</a> 3.1 编写测试类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 测试链接
 * 京东；https://item.jd.com/100008348542.html
 * 淘宝；https://detail.tmall.com/item.htm
 * 当当；http://product.dangdang.com/1509704171.html
 */</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_NetMall</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">NetMall</span> netMall <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JDNetMall</span><span class="token punctuation">(</span><span class="token string">&quot;1000001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;*******&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> base64 <span class="token operator">=</span> netMall<span class="token punctuation">.</span><span class="token function">generateGoodsPoster</span><span class="token punctuation">(</span><span class="token string">&quot;https://item.jd.com/100008348542.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> base64<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试类提供了三个商品链接，也可以是其他商品的链接</li><li>爬取的过程模拟爬取京东商品，可以替换为其他商品服务<code>new JDNetMall</code>、<code>new TaoBaoNetMall</code>、<code>new DangDangNetMall</code></li></ul><h4 id="_3-2-测试结果" tabindex="-1"><a class="header-anchor" href="#_3-2-测试结果" aria-hidden="true">#</a> 3.2 测试结果</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">23</span><span class="token operator">:</span><span class="token number">33</span><span class="token operator">:</span><span class="token number">13.616</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span></span>NetMall</span> <span class="token operator">-</span> 模拟京东用户登录 uId：<span class="token number">1000001</span> uPwd：<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">33</span><span class="token operator">:</span><span class="token number">15.038</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span></span>NetMall</span> <span class="token operator">-</span> 模拟京东商品爬虫解析：【<span class="token class-name">AppleiPhone</span> <span class="token number">11</span>】<span class="token class-name">Apple</span> iPhone <span class="token number">11</span> <span class="token punctuation">(</span><span class="token constant">A2223</span><span class="token punctuation">)</span> <span class="token number">128</span><span class="token constant">GB</span> 黑色 移动联通电信<span class="token number">4</span>G手机 双卡双待【行情 报价 价格 评测】<span class="token operator">-</span>京东 <span class="token operator">|</span> <span class="token number">5999.00</span> 元 https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>item<span class="token punctuation">.</span>jd<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token number">100008348542.</span>html
<span class="token number">23</span><span class="token operator">:</span><span class="token number">33</span><span class="token operator">:</span><span class="token number">15.038</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span></span>NetMall</span> <span class="token operator">-</span> 模拟生成京东商品base64海报
<span class="token number">23</span><span class="token operator">:</span><span class="token number">33</span><span class="token operator">:</span><span class="token number">15.086</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：eyJwcmljZSI6IjU5OTkuMDAiLCJuYW1lIjoi44CQQXBwbGVpUGhvbmUgMTHjgJFBcHBsZSBpUGhv
bmUgMTEgKEEyMjIzKSAxMjhHQiDpu5HoibIg56e75Yqo6IGU6YCa55S15L<span class="token operator">+</span>hNEfmiYvmnLog5Y<span class="token operator">+</span><span class="token class-name">M</span>
<span class="token number">5</span>Y2h5Y<span class="token operator">+</span><span class="token class-name">M5b6F44CQ6KGM5oOFIOaKpeS7tyDku7fmoLwg6K</span><span class="token operator">+</span><span class="token class-name">E5rWL44CRLeS6rOS4nCJ9</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、总结" tabindex="-1"><a class="header-anchor" href="#六、总结" aria-hidden="true">#</a> 六、总结</h2><ul><li>通过上面的实现可以看到<code>模版模式</code>在定义统一结构也就是执行标准上非常方便，也就很好的控制了后续的实现者不用关心调用逻辑，按照统一方式执行。那么类的继承者只需要关心具体的业务逻辑实现即可。</li><li>另外模版模式也是为了解决子类通用方法，放到父类中设计的优化。让每一个子类只做子类需要完成的内容，而不需要关心其他逻辑。这样提取公用代码，行为由父类管理，扩展可变部分，也就非常有利于开发拓展和迭代。</li><li>但每一种设计模式都有自己的特定场景，如果超过场景外的建设就需要额外考虑🤔其他模式的运用。而不是非要生搬硬套，否则自己不清楚为什么这么做，也很难让后续者继续维护代码。而想要活学活用就需要多加练习，有实践的经历。</li></ul>`,40);function j(N,x){const a=c("ExternalLinkIcon");return o(),l("div",null,[u,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",r,[s("https://bugstack.cn"),t(a)])]),d,m,v,n("ol",null,[g,b,n("li",null,[s("涉及工程三个，可以通过关注"),h,s("："),n("a",f,[w,t(a)]),s("，回复"),S,s("获取(打开获取的链接，找到序号18)")])]),y,_,q,n("ul",null,[n("li",null,[s("图片来自："),n("a",M,[s("https://refactoringguru.cn/design-patterns/template-method"),t(a)])])]),I])}const B=e(i,[["render",j],["__file","2020-07-07-zhongxue Java shejimoshi《shizhanmobanmoshi》.html.vue"]]);export{B as default};
