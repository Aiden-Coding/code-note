import{_ as e,r as o,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-3RcBQnkC.js";const l={},u=n("h1",{id:"汉字不能编程-别闹了-只是看着有点豪横-容易被开除",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#汉字不能编程-别闹了-只是看着有点豪横-容易被开除","aria-hidden":"true"},"#"),s(" 汉字不能编程？别闹了，只是看着有点豪横！容易被开除！")],-1),d=n("br",null,null,-1),r={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},k=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！")],-1),v=n("h2",{id:"一、前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、前言","aria-hidden":"true"},"#"),s(" 一、前言")],-1),m=n("p",null,[n("code",null,"在编程的路上你是否想过，用汉字写一写代码？")],-1),b={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"小傅哥",-1),g=n("strong",null,"易语言",-1),_=n("code",null,"Java",-1),f=n("code",null,"Spring",-1),q=p('<p>说到注释，我想到大部分程序员讨厌的<strong>两件事</strong>；</p><ol><li>不喜欢写注释</li><li>不喜欢别人不写注释</li></ol><p>其实对于学习编程来说，初学时写写案例，完成简单的功能，反复练习夯实基础。数学和英文都还并不是你的绊脚石，因为你不需要做复杂的逻辑处理，比如算法。也不需要查阅大量的资料，比如原版的英文资料以及国内没有翻译的技术书籍等。所以这个时候对你来说，只是需要不断的学，不断的写。并逐步强加自己的数学和英文能力。</p><p><strong>回到我们的说的</strong>，既然你问汉字可以写代码吗。其实在 <code>java</code> 里，原则上你可以写汉字的<code>类</code>、<code>属性</code>、<code>方法</code>，<code>JVM虚拟机</code>也是可以通过编译执行的。只是这样的代码并不能很好的维护，甚至说乱码了也很麻烦。再者，有人写方言怎么办！</p><p>好！那么我们接下来就使用汉字的方式来编写一段关于 <code>SpringAop</code> 的案例！</p><h2 id="二、开发环境" tabindex="-1"><a class="header-anchor" href="#二、开发环境" aria-hidden="true">#</a> 二、开发环境</h2>',6),y=n("li",null,"JDK 1.8.0",-1),w=n("li",null,"Spring 4.3.24.RELEASE",-1),x=n("strong",null,"公众号",-1),j={href:"https://bugstack.cn/assets/images/qrcode.png",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"bugstack虫洞栈",-1),S=p(`<h2 id="三、技术实现" tabindex="-1"><a class="header-anchor" href="#三、技术实现" aria-hidden="true">#</a> 三、技术实现</h2><p>为了这个案例更加真实，我们模拟<code>电影清朝韦小宝时期</code>，太监入宫的过程。说白了也就是 <code>Spring</code> 的 <code>AOP</code> 面向切面，<code>切</code>的编程。</p><p>在做案例之前，我们先了解一下 <code>AOP</code> 的基本概念；</p><ol><li><code>@Aspect</code>，定义切面的注解</li><li><code>@Pointcut</code>，切入点，一般会在方法上设定通配符表达式</li><li><code>@Around</code>，环绕，也就是你原本的方法会在这里处理</li><li><code>@Before</code>，前置处理</li><li><code>@After</code>，后置处理</li></ol><h3 id="_1-定义切面" tabindex="-1"><a class="header-anchor" href="#_1-定义切面" aria-hidden="true">#</a> 1. 定义切面</h3><blockquote><p>紫禁城.内务府.敬事房.膑.太监膑.净身监管.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Aspect</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> 净身监管 <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">&quot;execution(public * 紫禁城.内务府.敬事房.利器库..*.军刺切(..))&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> 监管员<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">&quot;监管员()&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> 敬事前<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;敬事前:---------准备下刀... ...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@After</span><span class="token punctuation">(</span><span class="token string">&quot;监管员()&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> 敬事后<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;敬事后:---------切面完成... ...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span><span class="token string">&quot;监管员()&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">aroundMethod</span><span class="token punctuation">(</span><span class="token class-name">ProceedingJoinPoint</span> pjp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;待切身份：&quot;</span><span class="token operator">+</span>pjp<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;执行工具：&quot;</span><span class="token operator">+</span>pjp<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//获得传递对象，并做处理</span>
        太监膑 太监 <span class="token operator">=</span> <span class="token punctuation">(</span>太监膑<span class="token punctuation">)</span> pjp<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">SimpleDateFormat</span> timeFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        太监<span class="token punctuation">.</span>set敬事日期<span class="token punctuation">(</span>timeFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//此处可以传递更改后的参数</span>
        <span class="token class-name">Object</span> obj <span class="token operator">=</span> pjp<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>太监<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> obj<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>@Aspect</code>，定义切面类，用于处理程序中的切面编程操作。</li><li><code>@Pointcut(&quot;execution(public * 紫禁城.内务府.敬事房.利器库..*.军刺切(..))&quot;)</code>，定义切点处，对那些方法进行执行切面操作。除了这样的操作外，还可以定义成自定义注解。那么后续只要把某个你需要的方法上面添加这样的自定义注解，就可以被 <code>AOP</code> 拦截。</li><li><code>@Before(&quot;监管员()&quot;)</code>、<code>@After(&quot;监管员()&quot;)</code>，记录切面执行前后的记录。</li><li><code>@Around(&quot;监管员()&quot;)</code>，用于环绕方法增强，可以这里去处理方法中的一些属性信息，比如添加给某个字段添加时间。<em>太监.set敬事日期(timeFormat.format(new Date()));</em></li></ul><h3 id="_2-设置切面可执行方法" tabindex="-1"><a class="header-anchor" href="#_2-设置切面可执行方法" aria-hidden="true">#</a> 2. 设置切面可执行方法</h3><blockquote><p>紫禁城.内务府.敬事房.利器库.切除器具.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span><span class="token string">&quot;切除&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> 切除器具 <span class="token punctuation">{</span>

    <span class="token keyword">public</span> 太监膑 军刺切<span class="token punctuation">(</span>太监膑 太监<span class="token punctuation">)</span><span class="token punctuation">{</span>
        太监<span class="token punctuation">.</span>set性别<span class="token punctuation">(</span>宦官<span class="token punctuation">.</span>太监<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;... 啊 ... ...老子被切面了！&quot;</span><span class="token operator">+</span>太监<span class="token punctuation">.</span>get姓名<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> 太监<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里类的方法就是上面定义的切点，<code>Pointcut</code>，也就是会被切面处理的方法。</li></ul><h3 id="_3-执行切面操作类" tabindex="-1"><a class="header-anchor" href="#_3-执行切面操作类" aria-hidden="true">#</a> 3. 执行切面操作类</h3><blockquote><p>紫禁城.内务府.敬事房.执刀人.张三丰执刀.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> 张三丰执刀 <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">ApplicationContext</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;皇太极.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        太监刑 太监行刑 <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;太监刑&quot;</span><span class="token punctuation">,</span>太监刑<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        太监膑 太监 <span class="token operator">=</span> <span class="token keyword">new</span> 太监膑<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        太监<span class="token punctuation">.</span>set姓名<span class="token punctuation">(</span><span class="token string">&quot;小德张&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        太监<span class="token punctuation">.</span>set年龄<span class="token punctuation">(</span><span class="token string">&quot;9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        太监<span class="token punctuation">.</span>set性别<span class="token punctuation">(</span>宦官<span class="token punctuation">.</span>男<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        太监 <span class="token operator">=</span> 太监行刑<span class="token punctuation">.</span>执行切除<span class="token punctuation">(</span>太监<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n切除状态：&quot;</span><span class="token operator">+</span>太监<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>首先这里定义了获取 <code>Spring</code> 注解的 <code>Application</code>，用于我们获取 <code>Bean</code> 。</li><li>接下来定义一个对象类，主要传递具体参数信息交给执行切面的方法，进行操作。</li><li>最后输出结果信息，也就是我们可以看到具体被切面操作的方法。</li></ul><h2 id="四、测试结果" tabindex="-1"><a class="header-anchor" href="#四、测试结果" aria-hidden="true">#</a> 四、测试结果</h2><h3 id="_1-执行内容" tabindex="-1"><a class="header-anchor" href="#_1-执行内容" aria-hidden="true">#</a> 1. 执行内容</h3><p>启动方法；<code>紫禁城.内务府.敬事房.执刀人.张三丰执刀.java</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>待切身份：太监膑 <span class="token punctuation">[</span>姓名<span class="token operator">=</span>小德张<span class="token punctuation">,</span> 年龄<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">,</span> 性别<span class="token operator">=</span>男<span class="token punctuation">,</span> 敬事日期<span class="token operator">=</span><span class="token punctuation">]</span>
执行工具：军刺切
敬事前<span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>准备下刀<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 啊 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>老子被切面了！小德张
敬事后<span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>切面完成<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

切除状态：太监膑 <span class="token punctuation">[</span>姓名<span class="token operator">=</span>小德张<span class="token punctuation">,</span> 年龄<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">,</span> 性别<span class="token operator">=</span>太监<span class="token punctuation">,</span> 敬事日期<span class="token operator">=</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">05</span><span class="token punctuation">]</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-效果图" tabindex="-1"><a class="header-anchor" href="#_2-效果图" aria-hidden="true">#</a> 2. 效果图</h3><p><img src="https://bugstack.cn/assets/images/2020/CodeGuide-01-1.png" alt="切面运行效果图"></p><h2 id="五、总结" tabindex="-1"><a class="header-anchor" href="#五、总结" aria-hidden="true">#</a> 五、总结</h2><ul><li><p>汉字编程，好奇可以试试，但别真的用到项目里。本文也只是通过这样的例子，向你展示学习过程的乐趣，建立一些学习过程的好感。</p></li><li><p>最近加了很多刚入门学习编程的小伙伴，有很多小问号。比如；</p><p><img src="https://bugstack.cn/assets/images/2020/CodeGuide-01-2.png" alt="切面运行效果图"></p><p><em>我是非常建议先跑起来，多写代码后再慢慢的去探究原理</em></p></li><li><p>最近听到一首诗，不错；<code>廿四桥边廿四风，凭栏犹忆旧江东。夕阳返照桃花渡，柳絮飞来片片红。</code>，白色的柳絮在夕阳桃花的映衬下就是成了<code>片片红</code>。只要你敢学识渊博，就敢让你拥有翻江倒海之力。</p></li></ul>`,24);function P(B,C){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[s("作者：小傅哥 "),d,s("博客："),n("a",r,[s("https://bugstack.cn"),t(a)])]),k,v,m,n("p",null,[s("最近有初学编程的小伙伴问"),n("a",b,[h,t(a)]),s("，汉字可以写代码吗。自己英文不好，要是汉字可以写代码就好了。难道你要的是"),g,s("？其实并不是，小伙伴也是学习 "),_,s(" 的初学者，刚刚学习到 "),f,s(" 看着一片没有注释的代码实在不好理解，要是都是汉字写的，那不和读作文一样了吗！")]),q,n("ol",null,[y,w,n("li",null,[s("本篇涉及的源码下载，可以关注"),x,s("："),n("a",j,[A,t(a)]),s(" 获取，并且还可以获取更多原创案例。")])]),S])}const E=e(l,[["render",P],["__file","2020-05-05-hanzibunenbiancheng？bienaoliao，zhishikanzhouyoudianhaoheng！rongyibeikaichu！.html.vue"]]);export{E as default};
