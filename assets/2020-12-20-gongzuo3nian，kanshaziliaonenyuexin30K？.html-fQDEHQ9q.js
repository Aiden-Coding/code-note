import{_ as r,r as l,o,c as i,a as t,b as e,d as s,e as a}from"./app-3RcBQnkC.js";const h={},d=t("h1",{id:"工作3年-看啥资料能月薪30k",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#工作3年-看啥资料能月薪30k","aria-hidden":"true"},"#"),e(" 工作3年，看啥资料能月薪30K？")],-1),c=t("br",null,null,-1),_={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},p=t("br",null,null,-1),u={href:"https://mp.weixin.qq.com/s/cSn1nIVJVw93T06m2oaaSg",target:"_blank",rel:"noopener noreferrer"},g=a('<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>月薪30K年薪是多少？</code></p><p>按照月薪30K，年终奖2~3个月来算，再算上季度的绩效奖金、加班费，可能也有一些大小周和节假日的三倍工资等。综合起来的税前年收入整体差不多在46K左右。<em>当然如果你在年会中了个大奖也可以算进去，或者阳光普照个IPhone！</em></p><p>**那30K月薪差不多是一个什么级别？**不知道大家有没有看过下面这张图，这个图来自一个薪资统计的网站，如下：</p><p><img src="https://bugstack.cn/assets/images/2020/all-16-0-0.png" alt="互联网薪资对标 duibiao.info"></p><ul><li>以上这种图的收入除了月薪还包括了，奖金、年终奖、股票，有些公司给的股票是比较多的。<em>股票有一定的解禁期，并不是一次能拿完。</em></li><li>那如果想拿月薪30K，基本是拿到了一个阿里的P6以及横向对标的级别。当然可能有些同学是在内部晋升加薪的，那样可能会略有差别。</li></ul><p><strong>30K对于工作3~5年还是蛮香的</strong>，但互联网大厂也确实不那么容易进去，如果在传统行业耽误了几年或者头几年做的项目单一，个人技术能力成长缓慢，过了30岁还真的挺难进去的。当然不是说30岁不要，只不过到了30岁，会要求面到更高的级别。</p><p>一般面试会从多方面进行考察，判断求职者是否满足招聘要求，如下图：<em>但也有很牛皮的求职者可能就一两个问题的回答，就已经把面试官镇住了！</em></p><p><img src="https://bugstack.cn/assets/images/2020/all-16-0.png" alt=""></p><p><strong>综上</strong>，梳理出七个方向的面试考点，包括：基本功底、常用技术、技术深度、技术经验、学习能力、工作能力、项目经验。</p><ul><li><strong>基本功底</strong>，是一个程序员的主科目语言的学习程度的一个基本考察，这部分内容需要平时大量积累和总结。否则一本简单的Java书很难全部给你讲透彻，因为Java中包括了太多的内容，远不止API使用。</li><li><strong>常用技术</strong>，聊的是你的技术广度，和岗位技术匹配度。比如需要用到过RPC，那你用过Dubbo。如果你的公司暂时用的技术不多，或者还是处于单体服务，那么需要自己补充。</li><li><strong>技术深入</strong>，除了技术广度接下来就是技术深入，在你常用的技术栈中，你有多了解他们，了解源码吗、了解运行机制吗、了解设计原理吗。这部分内容常被人说是造火箭，但这部分内容非常重要，可以承上启下的贯穿个人修为和薪资待遇。</li><li><strong>技术经验</strong>，什么是技术经验呢？这是落地能力，除了你可能认为上面一些是纸上谈兵，是造火箭。那么接下来这部分内容就是你是否真造过一个火箭，真完成过一个难题。所以这部分是从结果证明，不是你会什么，而是你做过什么。</li><li><strong>学习能力</strong>，作为程序员你是否保持热情，是否依旧在积极努力的关注技术，是否为自己的成长不断添砖加瓦、是否还有好奇心和较强的求知欲。<em>一般会从这里看你是不是一个真正的Coder！</em></li><li><strong>工作能力</strong>，以上的种种能力，最终要体现到工作上，要能看出你的交付能力。否则即使你再优秀，也不能把你当成一个吉祥物。工作能力的体现，才是真的为团队、为部门、为公司，贡献价值的。</li><li><strong>项目经验</strong>，这项内容会根据不同公司的不同业务线而不同，就像你懂交易、支付，那么面试花呗、借呗、白条等工作岗位就会很吃香。</li></ul><p><strong>好！</strong> 接下来小傅哥就带着你逐步介绍七个方向中的每一刻具体有哪些内容以及该如何学习。走起！</p><h2 id="二、技术大纲" tabindex="-1"><a class="header-anchor" href="#二、技术大纲" aria-hidden="true">#</a> 二、技术大纲</h2><h3 id="_1-基本功底" tabindex="-1"><a class="header-anchor" href="#_1-基本功底" aria-hidden="true">#</a> 1. 基本功底</h3><p><img src="https://bugstack.cn/assets/images/2020/all-16-1.png" alt="图 16-1 基本功底"></p><ul><li>重要程度：⭐⭐⭐⭐</li><li>内容介绍：数据结构讲的就是把数据放在不同形态的结构中，<code>堆栈队列链表数组</code>等。而算法逻辑就是把这些存放在数据结构中的数据按照一定规则进行增删改查，也就是二分、快排、动态规划、搜索等。而一门语言的核心技术就包括了对数据结构和算法的具体实现，像是我们用到的结合框架，ArrayList、HashMap等都是具体的实现。除此之外，在Java的核心技术中还要学习多线程、代理、反射等技术。<em>这不只是面试内容，更是写好代码的基础！</em></li><li>学习资料：算法图解、大话数据结构、数据结构与算法分析、算法导论、算法之美、计算机程序设计艺术</li><li>语重心长：学习，从来不只仅仅是为了当下工作需要。简单的CRUD也可能真的不需要复杂的设计，但个人的年龄和能力一直要成正比！</li></ul><h3 id="_2-常用技术" tabindex="-1"><a class="header-anchor" href="#_2-常用技术" aria-hidden="true">#</a> 2. 常用技术</h3><p><img src="https://bugstack.cn/assets/images/2020/all-16-2.png" alt="图 16-2 常用技术"></p>',19),m=t("li",null,"重要程度：⭐⭐⭐⭐",-1),b=t("li",null,"内容介绍：这部分内容是一个互联网研发中常用的技术栈内容，可能每个公司会有一些同类的其他技术，比如RPC框架就有很多种，但技术核心原理基本一致。可能以上的内容看上去比较杂，也可能有一些是你还没有接触过的，可以从上到下逐步了解。",-1),f={href:"http://tutorials.jenkov.com/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://tech.meituan.com/",target:"_blank",rel:"noopener noreferrer"},E={href:"http://mysql.taobao.org/monthly/",target:"_blank",rel:"noopener noreferrer"},A=t("li",null,"语重心长：如果你并不想做一个工具人，就给自己的知识架构体系建设的完整一些，也算是风险抵抗了！",-1),B=t("h3",{id:"_3-技术深度",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_3-技术深度","aria-hidden":"true"},"#"),e(" 3. 技术深度")],-1),w=t("p",null,[t("img",{src:"https://bugstack.cn/assets/images/2020/all-16-3.png",alt:"图 16-3 技术深度"})],-1),x=t("li",null,"重要程度：⭐⭐⭐⭐⭐",-1),C=t("li",null,"内容介绍：这一部分内容经常在面试求职过程中被称为造火箭、八股文。因为这部分知识探索到了JVM的运行机制，甚至去翻看C++源码，也包括JDK源码，同时还有框架的实现机制。除此之外，还有的公司会拓展到你可能完全没接触过的字节码插桩、全链路监控等等。",-1),v={href:"https://bugstack.cn/md/java/interview/2020-07-28-%E9%9D%A2%E7%BB%8F%E6%89%8B%E5%86%8C%20%C2%B7%20%E5%BC%80%E7%AF%87%E3%80%8A%E9%9D%A2%E8%AF%95%E5%AE%98%E9%83%BD%E9%97%AE%E6%88%91%E5%95%A5%E3%80%8B.html",target:"_blank",rel:"noopener noreferrer"},D={href:"https://bugstack.cn/md/bytecode/asm/2020-03-25-%5BASM%E5%AD%97%E8%8A%82%E7%A0%81%E7%BC%96%E7%A8%8B%5D%E5%A6%82%E6%9E%9C%E4%BD%A0%E5%8F%AA%E5%86%99CRUD%EF%BC%8C%E9%82%A3%E8%BF%99%E7%A7%8D%E6%8A%80%E6%9C%AF%E4%BD%A0%E6%B0%B8%E8%BF%9C%E7%A2%B0%E4%B8%8D%E5%88%B0.html",target:"_blank",rel:"noopener noreferrer"},y=t("li",null,"语重心长：有人说这叫内卷，那难道高考不卷？车牌号不卷？只要有资源竞争，就一定会有争夺。",-1),K=t("h3",{id:"_4-技术经验",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_4-技术经验","aria-hidden":"true"},"#"),e(" 4. 技术经验")],-1),V=t("p",null,[t("img",{src:"https://bugstack.cn/assets/images/2020/all-16-4.png",alt:"图 16-4 技术经验"})],-1),q=t("li",null,"重要程度：⭐⭐⭐⭐⭐",-1),F=t("li",null,[e("内容介绍：如果你说问你源码、机制是造飞机，那技术的落地才是你真正的本事。这里一部分是框架、架构的搭建，另外一部分是源码和核心组件的使用。也就是你的核心框架源码学习，是否能做到技术迁移运用到你的项目中，做出可落地的程序。"),t("em",null,"学习、沉淀、积累，这更像一盘大棋！")],-1),J={href:"https://github.com/fuzhengwei/CodeGuide/wiki",target:"_blank",rel:"noopener noreferrer"},z=t("li",null,"语重心长：不造轮子？对个人来说，轮子越多，车就越稳！",-1),I=t("h3",{id:"_5-学习能力",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_5-学习能力","aria-hidden":"true"},"#"),e(" 5. 学习能力")],-1),S=t("p",null,[t("img",{src:"https://bugstack.cn/assets/images/2020/all-16-5.png",alt:"图 16-5 学习能力"})],-1),P=t("li",null,"重要程度：⭐⭐⭐⭐",-1),j=t("li",null,"内容介绍：学习能力主要是输入和输出，一遍吸纳知识，一遍沉淀知识。如果只看不记录不写，早早晚晚也就忘没了。这方便沉淀下来的内容都是个人的技术标签，尤其是参与过开源项目，或者自己有一个项目得到认可。",-1),G={href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://stackoverflow.com/",target:"_blank",rel:"noopener noreferrer"},R={href:"https://www.csdn.net/",target:"_blank",rel:"noopener noreferrer"},L={href:"https://www.cnblogs.com",target:"_blank",rel:"noopener noreferrer"},M=t("li",null,"语重心长：写博客真的是一种非常好的学习方式，每当你要输出一个知识的时候，你就需要阅读、收集、整理、汇总。日复一日的沉淀，终究会让你有非常大的提升。",-1),T=a('<h3 id="_6-工作能力" tabindex="-1"><a class="header-anchor" href="#_6-工作能力" aria-hidden="true">#</a> 6. 工作能力</h3><p><img src="https://bugstack.cn/assets/images/2020/all-16-6.png" alt="图 16-6 工作能力"></p><ul><li>重要程度：⭐⭐⭐⭐</li><li>内容介绍：招聘人你觉得是先看能力还是先看素质？其实很多团队招聘是先看人的，如果你不能表现出一个积极、乐观、抗压、不玻璃心的态度，团队招聘是会有些抗拒的，谁也不希望招聘一个需要哄着的<code>码宝男</code>。但工作能力同样重要，最终是你的担事心态和担事能力来撑起你的工资和职位。</li><li>学习资料：《非暴力沟通》、《关键对话-如何高效能沟通》、《逆商：我们该如何应对坏事件》、《人月神话》</li><li>语重心长：沟通是解决双方或多方的认知偏差问题最终达成共识，情商是沟通的润滑剂，无论对谁都应该保持自己为追求更好而有的格局。</li></ul><h3 id="_7-项目经验" tabindex="-1"><a class="header-anchor" href="#_7-项目经验" aria-hidden="true">#</a> 7. 项目经验</h3><p><img src="https://bugstack.cn/assets/images/2020/all-16-7.png" alt="图 16-7 项目经验"></p><ul><li>重要程度：⭐⭐⭐⭐</li><li>内容介绍：项目经验来自于各个不同行业的技术范围，比如：社交、电商、外卖、出行、视频、音乐、汽车、支付、短视频等等，都会在各自的领域有一定的技术壁垒和相同之处。所以一般做游戏开发的可能跳槽到交易支付，还是会有很多不了解的。所以尽可能是在自己的行业内跳槽，或者你可以做到知识的拓展，自己多学习。</li><li>语重心长：不要守着自己的一亩三分地，多看看、多了解。</li></ul><h2 id="三、30岁程序员占比" tabindex="-1"><a class="header-anchor" href="#三、30岁程序员占比" aria-hidden="true">#</a> 三、30岁程序员占比</h2><p>本周在群里做了一次简单的《2020年互联网程序员年龄分布统计》，因为人群的关系可能数据是有一些不准。但这份数据可以作为参考，也可以参与投票。</p><table><thead><tr><th>选项</th><th>票数</th><th>占比</th></tr></thead><tbody><tr><td>未满 18 岁 - 19 岁</td><td>11</td><td>3.9 %</td></tr><tr><td>20-25 岁</td><td>108</td><td>38.6 %</td></tr><tr><td>26-30 岁</td><td>111</td><td>39.6 %</td></tr><tr><td>31-35 岁</td><td>27</td><td>9.6 %</td></tr><tr><td>36-40 岁</td><td>11</td><td>3.9 %</td></tr><tr><td>41-45 岁</td><td>9</td><td>3.2 %</td></tr><tr><td>46岁及以上</td><td>3</td><td>1.1 %</td></tr></tbody></table><ul><li>主力程序员集中在25~30岁，也就是刚毕业到工作7年左右。</li><li>30以后的程序员呢？是不写代码了吗？<strong>其实</strong>，其实从这数据可以看出30以后的程序可能是晋升做管理，几乎不怎么参与到各种技术群的学习了。但也有另外一个现实，就是30岁以后基本都已经结婚生子，上有老、下有小。基本是没有自己的时间，也就没有了学习新知识的时间，也没有参与到各种技术群的时间。</li></ul><p><strong>统计数据</strong></p><p><img src="https://bugstack.cn/assets/images/2020/all-16-8.png" alt="2020年互联网程序员年龄分布统计，截图"></p><p><strong>参与投票</strong></p><p><img src="https://bugstack.cn/assets/images/2020/all-16-9.png" alt="2020年互联网程序员年龄分布统计，投票"></p><h2 id="四、总结" tabindex="-1"><a class="header-anchor" href="#四、总结" aria-hidden="true">#</a> 四、总结</h2>',15),U=t("li",null,"与抵抗互联网风险相比能做的，只能是多学习、多沉淀、多积累。让30岁有30岁的能力，35岁有35岁的经历。因为没有所谓的安全，只有拥有留下的本事和走出去的能力才是安全的。",-1),H=t("li",null,"30岁以后面临的不只是学习技术，还有很多原因是没有时间。有家庭、有父母、有妻子，有生活的杂事，有工作的占据，很难拿出一个时间给自己。哪怕是健身、学习，也得要挤时间。",-1),O={href:"https://github.com/fuzhengwei/CodeGuide/issues/111",target:"_blank",rel:"noopener noreferrer"};function Q(W,X){const n=l("ExternalLinkIcon");return o(),i("div",null,[d,t("p",null,[e("作者：小傅哥 "),c,e("博客："),t("a",_,[e("https://bugstack.cn"),s(n)]),p,e("原文："),t("a",u,[e("https://mp.weixin.qq.com/s/cSn1nIVJVw93T06m2oaaSg"),s(n)])]),g,t("ul",null,[m,b,t("li",null,[e("学习资料："),t("a",f,[e("http://tutorials.jenkov.com"),s(n)]),e("、"),t("a",k,[e("https://tech.meituan.com/"),s(n)]),e("、"),t("a",E,[e("http://mysql.taobao.org/monthly/"),s(n)]),e("、《面向模式的软件架构》、《设计原本》、《架构之美》、《Clean Architecture》")]),A]),B,w,t("ul",null,[x,C,t("li",null,[e("学习资料：《java虚拟机规范》、《Java并发编程实战》、《多处理器编程的艺术》、"),t("a",v,[e("《面经手册》"),s(n)]),e("、"),t("a",D,[e("《字节码编程》"),s(n)])]),y]),K,V,t("ul",null,[q,F,t("li",null,[e("学习资料："),t("a",J,[e("CodeGuide"),s(n)])]),z]),I,S,t("ul",null,[P,j,t("li",null,[e("学习资料："),t("a",G,[e("https://github.com"),s(n)]),e("、"),t("a",N,[e("https://stackoverflow.com"),s(n)]),e("、"),t("a",R,[e("https://www.csdn.net"),s(n)]),e("、"),t("a",L,[e("https://www.cnblogs.com"),s(n)])]),M]),T,t("ul",null,[U,H,t("li",null,[e("大部分程序员的愿望是什么？做过一次5年后的愿望收集，大部分希望升官发财、家庭美好、买车买房，也有希望一屋两人三餐四季，平平淡淡。其实大家在这个行业都很累，我的愿望可能是以后蜗居在天津，有个大书房、写写书、开车逛逛，有自由的时间。来自："),t("a",O,[e("程序员的愿望"),s(n)])])])])}const Z=r(h,[["render",Q],["__file","2020-12-20-gongzuo3nian，kanshaziliaonenyuexin30K？.html.vue"]]);export{Z as default};
