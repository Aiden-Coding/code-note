import{_ as e,r as o,o as c,c as l,a as s,b as n,d as p,e as t}from"./app-3RcBQnkC.js";const u={},i=s("h1",{id:"面经手册-·-第22篇《线程池的介绍和使用-以及基于jvmti设计非入侵监控》",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#面经手册-·-第22篇《线程池的介绍和使用-以及基于jvmti设计非入侵监控》","aria-hidden":"true"},"#"),n(" 面经手册 · 第22篇《线程池的介绍和使用，以及基于jvmti设计非入侵监控》")],-1),r=s("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=t(`<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>五常大米好吃！</code></p><p>哈哈哈，是不你总买五常大米，其实五常和榆树是挨着的，榆树大米也好吃，榆树还是天下第一粮仓呢！但是五常出名，所以只认识五常。</p><p>为什么提这个呢，因为阿里不允许使用 Executors 创建线程池！其他很多大厂也不允许，这么创建的话，控制不好会出现OOM。</p><p><strong>好</strong>，本篇就带你学习四种线程池的不同使用方式、业务场景应用以及如何监控线程。</p><h2 id="二、面试题" tabindex="-1"><a class="header-anchor" href="#二、面试题" aria-hidden="true">#</a> 二、面试题</h2><p><code>谢飞机，小记！</code>，上次从面试官那逃跑后，恶补了多线程，自己好像也内卷了，所以出门逛逛！</p><p><strong>面试官</strong>：嗨，飞机，飞机，这边！</p><p><strong>谢飞机</strong>：嗯？！哎呀，面试官你咋来南海子公园了？</p><p><strong>面试官</strong>：我家就附近，跑步来了。最近你咋样，上次问你的多线程学了吗？</p><p><strong>谢飞机</strong>：哎，看了是看了，记不住鸭！</p><p><strong>面试官</strong>：嗯，不常用确实记不住。不过你可以选择跳槽，来大厂，大厂的业务体量较大！</p><p><strong>谢飞机</strong>：我就纠结呢，想回家考教师资格证了，我们村小学要教java了！</p><p><strong>面试官</strong>：哈哈哈哈哈，一起！</p><h2 id="三、四种线程池使用介绍" tabindex="-1"><a class="header-anchor" href="#三、四种线程池使用介绍" aria-hidden="true">#</a> 三、四种线程池使用介绍</h2><p><code>Executors</code> 是创建线程池的工具类，比较典型常见的四种线程池包括：<code>newFixedThreadPool</code>、<code>newSingleThreadExecutor</code>、<code>newCachedThreadPool</code>、<code>newScheduledThreadPool</code>。每一种都有自己特定的典型例子，可以按照每种的特性用在不同的业务场景，也可以做为参照精细化创建线程池。</p><h3 id="_1-newfixedthreadpool" tabindex="-1"><a class="header-anchor" href="#_1-newfixedthreadpool" aria-hidden="true">#</a> 1. newFixedThreadPool</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> groupId <span class="token operator">=</span> i<span class="token punctuation">;</span>
        executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ignored<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">}</span>
                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;第 {} 组任务，第 {} 次执行完成&quot;</span><span class="token punctuation">,</span> groupId<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 测试结果</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">24.628</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">1</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">24.628</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">1</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">24.628</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">1</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">25.633</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">2</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">25.633</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">2</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">25.633</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">2</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">26.633</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">3</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">26.633</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">3</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">26.633</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">3</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">27.634</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">4</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">27.634</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">4</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">27.634</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">4</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">28.635</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">1</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">29.635</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">2</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">30.635</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">3</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">31.636</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newFixedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">4</span> 次执行完成

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>图解</strong></p><p><img src="https://bugstack.cn/assets/images/2020/interview/interview-22-1.png" alt="图 22-1 newFixedThreadPool 执行过程"></p><ul><li><strong>代码</strong>：<code>new ThreadPoolExecutor(nThreads, nThreads, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue&lt;Runnable&gt;())</code></li><li><strong>介绍</strong>：创建一个固定大小可重复使用的线程池，以 <code>LinkedBlockingQueue</code> 无界阻塞队列存放等待线程。</li><li><strong>风险</strong>：随着线程任务不能被执行的的无限堆积，可能会导致OOM。</li></ul><h3 id="_2-newsinglethreadexecutor" tabindex="-1"><a class="header-anchor" href="#_2-newsinglethreadexecutor" aria-hidden="true">#</a> 2. newSingleThreadExecutor</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> groupId <span class="token operator">=</span> i<span class="token punctuation">;</span>
        executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ignored<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">}</span>
                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;第 {} 组任务，第 {} 次执行完成&quot;</span><span class="token punctuation">,</span> groupId<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 测试结果</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">15.066</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">1</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">16.069</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">2</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">17.070</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">3</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">18.070</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">4</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">19.071</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">1</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">280.071</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">2</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">281.072</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">3</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">282.072</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">4</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">283.073</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">1</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">284.074</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">2</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">285.074</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">3</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">286.075</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">4</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">287.075</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">1</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">288.075</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">2</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">289.076</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">3</span> 次执行完成
<span class="token number">23</span><span class="token operator">:</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">30.076</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newSingleThreadExecutor</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">4</span> 次执行完成
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>图解</strong></p><p><img src="https://bugstack.cn/assets/images/2020/interview/interview-22-2.png" alt="图 22-2 newSingleThreadExecutor 执行过程"></p><ul><li><strong>代码</strong>：<code>new ThreadPoolExecutor(1, 1, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue&lt;Runnable&gt;())</code></li><li><strong>介绍</strong>：只创建一个执行线程任务的线程池，如果出现意外终止则再创建一个。</li><li><strong>风险</strong>：同样这也是一个无界队列存放待执行线程，无限堆积下会出现OOM。</li></ul><h3 id="_3-newcachedthreadpool" tabindex="-1"><a class="header-anchor" href="#_3-newcachedthreadpool" aria-hidden="true">#</a> 3. newCachedThreadPool</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> groupId <span class="token operator">=</span> i<span class="token punctuation">;</span>
        executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ignored<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">}</span>
                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;第 {} 组任务，第 {} 次执行完成&quot;</span><span class="token punctuation">,</span> groupId<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 测试结果</span>
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">59.818</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">1</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">59.818</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">1</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">59.818</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">1</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">59.818</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">1</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.823</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">2</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.823</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">2</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.823</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">2</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.823</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">2</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">01.823</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">3</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">01.823</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">3</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">01.824</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">3</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">01.824</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">3</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">02.824</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">1</span> 组任务，第 <span class="token number">4</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">02.824</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">4</span> 组任务，第 <span class="token number">4</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">02.825</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">3</span> 组任务，第 <span class="token number">4</span> 次执行完成
    <span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">02.825</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>Test_newCachedThreadPool</span> <span class="token operator">-</span> 第 <span class="token number">2</span> 组任务，第 <span class="token number">4</span> 次执行完成
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>图解</strong></p><p><img src="https://bugstack.cn/assets/images/2020/interview/interview-22-3.png" alt="图 22-3 newCachedThreadPool 执行过程"></p><ul><li><strong>代码</strong>：<code>new ThreadPoolExecutor(0, Integer.MAX_VALUE, 60L, TimeUnit.SECONDS, new SynchronousQueue&lt;Runnable&gt;())</code></li><li><strong>介绍</strong>：首先 <code>SynchronousQueue</code> 是一个生产消费模式的阻塞任务队列，只要有任务就需要有线程执行，线程池中的线程可以重复使用。</li><li><strong>风险</strong>：如果线程任务比较耗时，又大量创建，会导致OOM</li></ul><h3 id="_4-newscheduledthreadpool" tabindex="-1"><a class="header-anchor" href="#_4-newscheduledthreadpool" aria-hidden="true">#</a> 4. newScheduledThreadPool</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ScheduledExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    executorService<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;3秒后开始执行&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    executorService<span class="token punctuation">.</span><span class="token function">scheduleAtFixedRate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;3秒后开始执行，以后每2秒执行一次&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    executorService<span class="token punctuation">.</span><span class="token function">scheduleWithFixedDelay</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;3秒后开始执行，后续延迟2秒&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 测试结果</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">28</span><span class="token operator">:</span><span class="token number">32.442</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newScheduledThreadPool</span> <span class="token operator">-</span> <span class="token number">3</span>秒后开始执行
<span class="token number">23</span><span class="token operator">:</span><span class="token number">28</span><span class="token operator">:</span><span class="token number">32.444</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newScheduledThreadPool</span> <span class="token operator">-</span> <span class="token number">3</span>秒后开始执行，以后每<span class="token number">2</span>秒执行一次
<span class="token number">23</span><span class="token operator">:</span><span class="token number">28</span><span class="token operator">:</span><span class="token number">32.444</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newScheduledThreadPool</span> <span class="token operator">-</span> <span class="token number">3</span>秒后开始执行，后续延迟<span class="token number">2</span>秒
<span class="token number">23</span><span class="token operator">:</span><span class="token number">28</span><span class="token operator">:</span><span class="token number">34.441</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newScheduledThreadPool</span> <span class="token operator">-</span> <span class="token number">3</span>秒后开始执行，以后每<span class="token number">2</span>秒执行一次
<span class="token number">23</span><span class="token operator">:</span><span class="token number">28</span><span class="token operator">:</span><span class="token number">34.445</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newScheduledThreadPool</span> <span class="token operator">-</span> <span class="token number">3</span>秒后开始执行，后续延迟<span class="token number">2</span>秒
<span class="token number">23</span><span class="token operator">:</span><span class="token number">28</span><span class="token operator">:</span><span class="token number">36.440</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newScheduledThreadPool</span> <span class="token operator">-</span> <span class="token number">3</span>秒后开始执行，以后每<span class="token number">2</span>秒执行一次
<span class="token number">23</span><span class="token operator">:</span><span class="token number">28</span><span class="token operator">:</span><span class="token number">36.445</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>i<span class="token punctuation">.</span>t<span class="token punctuation">.</span></span>Test_newScheduledThreadPool</span> <span class="token operator">-</span> <span class="token number">3</span>秒后开始执行，后续延迟<span class="token number">2</span>秒
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>图解</strong></p><p><img src="https://bugstack.cn/assets/images/2020/interview/interview-22-4.png" alt="图 22-4 newScheduledThreadPool 执行过程"></p><ul><li><strong>代码</strong>：<code>public ScheduledThreadPoolExecutor(int corePoolSize) { super(corePoolSize, Integer.MAX_VALUE, 0, NANOSECONDS, new ScheduledThreadPoolExecutor.DelayedWorkQueue()); }</code></li><li><strong>介绍</strong>：这就是一个比较有意思的线程池了，它可以延迟定时执行，有点像我们的定时任务。同样它也是一个无限大小的线程池 <code>Integer.MAX_VALUE</code>。它提供的调用方法比较多，包括：<code>scheduleAtFixedRate</code>、<code>scheduleWithFixedDelay</code>，可以按需选择延迟执行方式。</li><li><strong>风险</strong>：同样由于这是一组无限容量的线程池，所以依旧有OOM风险。</li></ul><h2 id="四、线程池使用场景说明" tabindex="-1"><a class="header-anchor" href="#四、线程池使用场景说明" aria-hidden="true">#</a> 四、线程池使用场景说明</h2><p>什么时候使用线程池？</p><p>说简单是当为了给老板省钱的时候，因为使用线程池可以降低服务器资源的投入，让每台机器尽可能更大限度的使用CPU。</p><p><em>😄那你这么说肯定没办法升职加薪了！</em></p>`,41),m={href:"https://baike.baidu.com/item/%E7%A7%91%E7%89%B9%E5%B0%94%E6%B3%95%E5%88%99/5496269?fr=aladdin",target:"_blank",rel:"noopener noreferrer"},b={href:"https://baike.baidu.com/item/%E9%98%BF%E5%A7%86%E8%BE%BE%E5%B0%94%E5%AE%9A%E5%BE%8B/10386960?fr=aladdin",target:"_blank",rel:"noopener noreferrer"},v=t(`<p><strong>假如</strong>：我们有一套电商服务，用户浏览商品的并发访问速率是：1000客户/每分钟，平均每个客户在服务器上的耗时0.5分钟。根据利特尔法则，在任何时刻，服务端都承担着1000*0.5=500个客户的业务处理量。过段时间大促了，并发访问的用户扩了一倍2000客户了，那怎么保障服务性能呢？</p><ol><li>提高服务器并发处理的业务量，即提高到2000×0.5=1000</li><li>减少服务器平均处理客户请求的时间，即减少到：2000×0.25=500</li></ol><p><strong>所以</strong>：在有些场景下会把串行的请求接口，压缩成并行执行，如图 22-5</p><p><img src="https://bugstack.cn/assets/images/2020/interview/interview-22-5.png" alt="图22-5 多线程接口查询使用"></p><p><strong>但是</strong>，线程池的使用会随着业务场景变化而不同，如果你的业务需要大量的使用线程池，并非常依赖线程池，那么就不可能用 <code>Executors</code> 工具类中提供的方法。因为这些线程池的创建都不够精细化，也非常容易造成OOM风险，而且随着业务场景逻辑不同，会有IO密集型和CPU密集型。</p><p><strong>最终</strong>，大家使用的线程池都是使用 <code>new ThreadPoolExecutor()</code> 创建的，当然也有基于Spring的线程池配置 <code>org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor</code>。</p><p><strong>可你想过吗</strong>，同样一个接口在有活动时候怎么办、有大促时候怎么办，可能你当时设置的线程池是合理的，但是一到流量非常大的时候就很不适合了，所以如果能动态调整线程池就非常有必要了。而且使用 <code>new ThreadPoolExecutor()</code> 方式创建的线程池是可以通过提供的 set 方法进行动态调整的。有了这个动态调整的方法后，就可以把线程池包装起来，在配合动态调整的页面，动态更新线程池参数，就可以非常方便的调整线程池了。</p><h2 id="五、获取线程池监控信息" tabindex="-1"><a class="header-anchor" href="#五、获取线程池监控信息" aria-hidden="true">#</a> 五、获取线程池监控信息</h2><p><code>你收过报警短信吗？</code></p><p>收过，半夜还有报警机器人打电话呢！崴，你的系统有个机器睡着了，快起来看看！！！</p><p>所以，如果你高频、高依赖线程池，那么有一个完整的监控系统，就非重要了。总不能线上挂了，你还不知道！</p><p><strong>可监控内容</strong></p><table><thead><tr><th><strong>方法</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>getActiveCount()</td><td>线程池中正在执行任务的线程数量</td></tr><tr><td>getCompletedTaskCount()</td><td>线程池已完成的任务数量，该值小于等于taskCount</td></tr><tr><td>getCorePoolSize()</td><td>线程池的核心线程数量</td></tr><tr><td>getLargestPoolSize()</td><td>线程池曾经创建过的最大线程数量。通过这个数据可以知道线程池是否满过，也就是达到了maximumPoolSize</td></tr><tr><td>getMaximumPoolSize()</td><td>线程池的最大线程数量</td></tr><tr><td>getPoolSize()</td><td>线程池当前的线程数量</td></tr><tr><td>getTaskCount()</td><td>线程池已经执行的和未执行的任务总数</td></tr></tbody></table><h3 id="_1-重写线程池方式监控" tabindex="-1"><a class="header-anchor" href="#_1-重写线程池方式监控" aria-hidden="true">#</a> 1. 重写线程池方式监控</h3><p>如果我们想监控一个线程池的方法执行动作，最简单的方式就是继承这个类，重写方法，在方法中添加动作收集信息。</p><p><strong>伪代码</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPoolMonitor</span> <span class="token keyword">extends</span> <span class="token class-name">ThreadPoolExecutor</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 统计已执行任务、正在执行任务、未执行任务数量</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> <span class="token function">shutdownNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 统计已执行任务、正在执行任务、未执行任务数量</span>
        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">shutdownNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">beforeExecute</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> t<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 记录开始时间</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterExecute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 记录完成耗时</span>
    <span class="token punctuation">}</span>
    
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-基于ivmti方式监控" tabindex="-1"><a class="header-anchor" href="#_2-基于ivmti方式监控" aria-hidden="true">#</a> 2. 基于IVMTI方式监控</h3><p>这块是监控的重点，因为我们不太可能让每一个需要监控的线程池都来重写的方式记录，这样的改造成本太高了。</p><p>那么除了这个笨方法外，可以选择使用基于JVMTI的方式，进行开发监控组件。</p><p><strong>JVMTI</strong>：JVMTI(JVM Tool Interface)位于jpda最底层，是Java虚拟机所提供的native编程接口。JVMTI可以提供性能分析、debug、内存管理、线程分析等功能。</p><p>基于jvmti提供的接口服务，运用C++代码(win32-add_library)在Agent_OnLoad里开发监控服务，并生成dll文件。开发完成后在java代码中加入agentpath，这样就可以监控到我们需要的信息内容。</p><p><strong>环境准备</strong>：</p><ol><li>Dev-C++</li><li>JetBrains CLion 2018.2.3</li><li>IntelliJ IDEA Community Edition 2018.3.1 x64</li><li>jdk1.8.0_45 64位</li><li>jvmti（在jdk安装目录下jdk1.8.0_45\\include里，把include整个文件夹复制到和工程案例同层级目录下，便于 include 引用）</li></ol><p><strong>配置信息</strong>：（路径相关修改为自己的）</p><ol><li>C++开发工具Clion配置 1.配置位置；Settings-&gt;Build,Execution,Deployment-&gt;Toolchains 2. MinGM配置：D:\\Program Files (x86)\\Dev-Cpp\\MinGW64</li><li>java调试时配置 <ol><li>配置位置：Run/Debug Configurations -&gt;VM options</li><li>配置内容：-agentpath:E:\\itstack\\git\\github.com\\itstack-jvmti\\cmake-build-debug\\libitstack_jvmti.dll</li></ol></li></ol><h4 id="_2-1-先做一个监控例子" tabindex="-1"><a class="header-anchor" href="#_2-1-先做一个监控例子" aria-hidden="true">#</a> 2.1 先做一个监控例子</h4><p><strong>Java工程</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestLocationException</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;TestLocationException&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">PartnerEggResourceImpl</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PartnerEggResourceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> obj <span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">queryUserInfoById</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：&quot;</span> <span class="token operator">+</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//屏蔽异常</span>
 <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">PartnerEggResourceImpl</span> <span class="token punctuation">{</span>
    <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;PartnerEggResourceImpl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">queryUserInfoById</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;根据用户Id获取用户信息&quot;</span> <span class="token operator">+</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;根据用户Id获取用户信息，空指针异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> userId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>c++监控</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>#include <span class="token generics"><span class="token punctuation">&lt;</span>iostream<span class="token punctuation">&gt;</span></span>
#include <span class="token generics"><span class="token punctuation">&lt;</span>cstring<span class="token punctuation">&gt;</span></span>
#include <span class="token string">&quot;jvmti.h&quot;</span>

using namespace std<span class="token punctuation">;</span>

<span class="token comment">//异常回调函数</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">JNICALL</span>
<span class="token function">callbackException</span><span class="token punctuation">(</span>jvmtiEnv <span class="token operator">*</span>jvmti_env<span class="token punctuation">,</span> <span class="token class-name">JNIEnv</span> <span class="token operator">*</span>env<span class="token punctuation">,</span> jthread thr<span class="token punctuation">,</span> jmethodID methodId<span class="token punctuation">,</span> jlocation location<span class="token punctuation">,</span>
jobject exception<span class="token punctuation">,</span> jmethodID catch_method<span class="token punctuation">,</span> jlocation catch_location<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// 获得方法对应的类</span>
jclass clazz<span class="token punctuation">;</span>
jvmti_env<span class="token operator">-&gt;</span><span class="token class-name">GetMethodDeclaringClass</span><span class="token punctuation">(</span>methodId<span class="token punctuation">,</span> <span class="token operator">&amp;</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获得类的签名</span>
<span class="token keyword">char</span> <span class="token operator">*</span>class_signature<span class="token punctuation">;</span>
jvmti_env<span class="token operator">-&gt;</span><span class="token class-name">GetClassSignature</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token operator">&amp;</span>class_signature<span class="token punctuation">,</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//过滤非本工程类信息</span>
string<span class="token operator">::</span><span class="token function">size_type</span> idx<span class="token punctuation">;</span>
string class_signature_str <span class="token operator">=</span> class_signature<span class="token punctuation">;</span>
idx <span class="token operator">=</span> class_signature_str<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;org/itstack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>idx <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//异常类名称</span>
<span class="token keyword">char</span> <span class="token operator">*</span>exception_class_name<span class="token punctuation">;</span>
jclass exception_class <span class="token operator">=</span> env<span class="token operator">-&gt;</span><span class="token class-name">GetObjectClass</span><span class="token punctuation">(</span>exception<span class="token punctuation">)</span><span class="token punctuation">;</span>
jvmti_env<span class="token operator">-&gt;</span><span class="token class-name">GetClassSignature</span><span class="token punctuation">(</span>exception_class<span class="token punctuation">,</span> <span class="token operator">&amp;</span>exception_class_name<span class="token punctuation">,</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获得方法名称</span>
<span class="token keyword">char</span> <span class="token operator">*</span>method_name_ptr<span class="token punctuation">,</span> <span class="token operator">*</span>method_signature_ptr<span class="token punctuation">;</span>
jvmti_env<span class="token operator">-&gt;</span><span class="token class-name">GetMethodName</span><span class="token punctuation">(</span>methodId<span class="token punctuation">,</span> <span class="token operator">&amp;</span>method_name_ptr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>method_signature_ptr<span class="token punctuation">,</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//获取目标方法的起止地址和结束地址</span>
jlocation start_location_ptr<span class="token punctuation">;</span>    <span class="token comment">//方法的起始位置</span>
jlocation end_location_ptr<span class="token punctuation">;</span>      <span class="token comment">//用于方法的结束位置</span>
jvmti_env<span class="token operator">-&gt;</span><span class="token class-name">GetMethodLocation</span><span class="token punctuation">(</span>methodId<span class="token punctuation">,</span> <span class="token operator">&amp;</span>start_location_ptr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>end_location_ptr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//输出测试结果</span>
cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;测试结果 - 定位类的签名：&quot;</span> <span class="token operator">&lt;&lt;</span> class_signature <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;测试结果 - 定位方法信息：&quot;</span> <span class="token operator">&lt;&lt;</span> method_name_ptr <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">&lt;&lt;</span> method_signature_ptr <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;测试结果 - 定位方法位置：&quot;</span> <span class="token operator">&lt;&lt;</span> start_location_ptr <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">&lt;&lt;</span> end_location_ptr <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;测试结果 - 异常类的名称：&quot;</span> <span class="token operator">&lt;&lt;</span> exception_class_name <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;测试结果-输出异常信息(可以分析行号)：&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
jclass throwable_class <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">&quot;java/lang/Throwable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jmethodID print_method <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>throwable_class<span class="token punctuation">,</span> <span class="token string">&quot;printStackTrace&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;()V&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">CallVoidMethod</span><span class="token punctuation">(</span>exception<span class="token punctuation">,</span> print_method<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>


<span class="token constant">JNIEXPORT</span> jint <span class="token constant">JNICALL</span> <span class="token class-name">Agent_OnLoad</span><span class="token punctuation">(</span><span class="token class-name">JavaVM</span> <span class="token operator">*</span>vm<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>options<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>reserved<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    jvmtiEnv <span class="token operator">*</span>gb_jvmti <span class="token operator">=</span> nullptr<span class="token punctuation">;</span>
    <span class="token comment">//初始化</span>
    vm<span class="token operator">-&gt;</span><span class="token class-name">GetEnv</span><span class="token punctuation">(</span>reinterpret_cast<span class="token operator">&lt;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>gb_jvmti<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">JVMTI_VERSION_1_0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建一个新的环境</span>
    jvmtiCapabilities caps<span class="token punctuation">;</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>caps<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>caps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    caps<span class="token punctuation">.</span>can_signal_thread <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    caps<span class="token punctuation">.</span>can_get_owned_monitor_info <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    caps<span class="token punctuation">.</span>can_generate_method_entry_events <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    caps<span class="token punctuation">.</span>can_generate_exception_events <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    caps<span class="token punctuation">.</span>can_generate_vm_object_alloc_events <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    caps<span class="token punctuation">.</span>can_tag_objects <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置当前环境</span>
    gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">AddCapabilities</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>caps<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建一个新的回调函数</span>
    jvmtiEventCallbacks callbacks<span class="token punctuation">;</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>callbacks<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//异常回调</span>
    <span class="token class-name"><span class="token namespace">callbacks<span class="token punctuation">.</span></span>Exception</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>callbackException<span class="token punctuation">;</span>
    <span class="token comment">// 设置回调函数</span>
    gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">SetEventCallbacks</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>callbacks<span class="token punctuation">,</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 开启事件监听(JVMTI_EVENT_EXCEPTION)</span>
    gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">SetEventNotificationMode</span><span class="token punctuation">(</span><span class="token constant">JVMTI_ENABLE</span><span class="token punctuation">,</span> <span class="token constant">JVMTI_EVENT_EXCEPTION</span><span class="token punctuation">,</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token constant">JNI_OK</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token constant">JNIEXPORT</span> <span class="token keyword">void</span> <span class="token constant">JNICALL</span> <span class="token class-name">Agent_OnUnload</span><span class="token punctuation">(</span><span class="token class-name">JavaVM</span> <span class="token operator">*</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试结果</strong></p><p>在 VM vptions 中配置：<code>-agentpath:E:\\itstack\\git\\github.com\\itstack-jvmti\\cmake-build-debug\\libitstack_jvmti.dll</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>十二月 <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2020</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">27</span> 下午 <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span></span>PartnerEggResourceImpl</span> queryUserInfoById
信息<span class="token operator">:</span> 根据用户<span class="token class-name">Id</span>获取用户信息<span class="token keyword">null</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>NullPointerException</span><span class="token operator">:</span> 根据用户<span class="token class-name">Id</span>获取用户信息，空指针异常
	at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span></span>PartnerEggResourceImpl</span><span class="token punctuation">.</span><span class="token function">queryUserInfoById</span><span class="token punctuation">(</span><span class="token class-name">TestLocationException</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">26</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span></span>TestLocationException</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">TestLocationException</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">13</span><span class="token punctuation">)</span>
测试结果<span class="token operator">-</span>定位类的签名：<span class="token class-name">Lorg</span><span class="token operator">/</span>itstack<span class="token operator">/</span>demo<span class="token operator">/</span><span class="token class-name">PartnerEggResourceImpl</span><span class="token punctuation">;</span>
测试结果<span class="token operator">-</span>定位方法信息：queryUserInfoById <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span><span class="token punctuation">;</span>
测试结果<span class="token operator">-</span>定位方法位置：<span class="token number">0</span> <span class="token operator">-&gt;</span> <span class="token number">43</span>
测试结果<span class="token operator">-</span>异常类的名称：<span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">NullPointerException</span><span class="token punctuation">;</span>
测试结果<span class="token operator">-</span>输出异常信息<span class="token punctuation">(</span>可以分析行号<span class="token punctuation">)</span>：
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这就是基于JVMTI的方式进行监控，这样的方式可以做到非入侵代码。不需要硬编码，也就节省了人力，否则所有人都会进行开发监控内容，而这部分内容与业务逻辑并无关系。</li></ul><h4 id="_2-2-扩展线程监控" tabindex="-1"><a class="header-anchor" href="#_2-2-扩展线程监控" aria-hidden="true">#</a> 2.2 扩展线程监控</h4><p>其实方法差不多，都是基于C++开发DLL文件，引入使用。不过这部分代码会监控方法信息，并采集线程的执行内容。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">JNICALL</span> <span class="token function">callbackMethodEntry</span><span class="token punctuation">(</span>jvmtiEnv <span class="token operator">*</span>jvmti_env<span class="token punctuation">,</span> <span class="token class-name">JNIEnv</span> <span class="token operator">*</span>env<span class="token punctuation">,</span> jthread thr<span class="token punctuation">,</span> jmethodID method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获得方法对应的类</span>
    jclass clazz<span class="token punctuation">;</span>
    jvmti_env<span class="token operator">-&gt;</span><span class="token class-name">GetMethodDeclaringClass</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token operator">&amp;</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 获得类的签名</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>class_signature<span class="token punctuation">;</span>
    jvmti_env<span class="token operator">-&gt;</span><span class="token class-name">GetClassSignature</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token operator">&amp;</span>class_signature<span class="token punctuation">,</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//过滤非本工程类信息</span>
    string<span class="token operator">::</span><span class="token function">size_type</span> idx<span class="token punctuation">;</span>
    string class_signature_str <span class="token operator">=</span> class_signature<span class="token punctuation">;</span>
    idx <span class="token operator">=</span> class_signature_str<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;org/itstack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">RawMonitorEnter</span><span class="token punctuation">(</span>gb_lock<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">{</span>
        <span class="token comment">//must be deallocate</span>
        <span class="token keyword">char</span> <span class="token operator">*</span>name <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">*</span>sig <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">*</span>gsig <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
        jint thr_hash_code <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        error <span class="token operator">=</span> gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">GetMethodName</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token operator">&amp;</span>name<span class="token punctuation">,</span> <span class="token operator">&amp;</span>sig<span class="token punctuation">,</span> <span class="token operator">&amp;</span>gsig<span class="token punctuation">)</span><span class="token punctuation">;</span>
        error <span class="token operator">=</span> gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">GetObjectHashCode</span><span class="token punctuation">(</span>thr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>thr_hash_code<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">strcmp</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;interrupt&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span>
            <span class="token function">strcmp</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;join&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">strcmp</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;stop&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span>
            <span class="token function">strcmp</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;suspend&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">strcmp</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;resume&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token comment">//must be deallocate</span>
            jobject thd_ptr <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
            jint hash_code <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">GetLocalObject</span><span class="token punctuation">(</span>thr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>thd_ptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">GetObjectHashCode</span><span class="token punctuation">(</span>thd_ptr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hash_code<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[线程监控]: thread (%10d) %10s (%10d)\\n&quot;</span><span class="token punctuation">,</span> thr_hash_code<span class="token punctuation">,</span> name<span class="token punctuation">,</span> hash_code<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">RawMonitorExit</span><span class="token punctuation">(</span>gb_lock<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token constant">JNIEXPORT</span> jint <span class="token constant">JNICALL</span> <span class="token class-name">Agent_OnLoad</span><span class="token punctuation">(</span><span class="token class-name">JavaVM</span> <span class="token operator">*</span>jvm<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>options<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>reserved<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 初始化</span>
    jvm<span class="token operator">-&gt;</span><span class="token class-name">GetEnv</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>gb_jvmti<span class="token punctuation">,</span> <span class="token constant">JVMTI_VERSION_1_0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建一个新的环境</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>gb_capa<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>jvmtiCapabilities<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_signal_thread <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_get_owned_monitor_info <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_generate_method_exit_events <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_generate_method_entry_events <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_generate_exception_events <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_generate_vm_object_alloc_events <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_tag_objects <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_generate_all_class_hook_events <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_generate_native_method_bind_events <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_access_local_variables <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    gb_capa<span class="token punctuation">.</span>can_get_monitor_info <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置当前环境</span>
    gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">AddCapabilities</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>gb_capa<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建一个新的回调函数</span>
    jvmtiEventCallbacks callbacks<span class="token punctuation">;</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>callbacks<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>jvmtiEventCallbacks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 方法回调</span>
    <span class="token class-name"><span class="token namespace">callbacks<span class="token punctuation">.</span></span>MethodEntry</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>callbackMethodEntry<span class="token punctuation">;</span>
    <span class="token comment">// 设置回调函数</span>
    gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">SetEventCallbacks</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>callbacks<span class="token punctuation">,</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">CreateRawMonitor</span><span class="token punctuation">(</span><span class="token string">&quot;XFG&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>gb_lock<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 注册事件监听(JVMTI_EVENT_VM_INIT、JVMTI_EVENT_EXCEPTION、JVMTI_EVENT_NATIVE_METHOD_BIND、JVMTI_EVENT_CLASS_FILE_LOAD_HOOK、JVMTI_EVENT_METHOD_ENTRY、JVMTI_EVENT_METHOD_EXIT)</span>
    error <span class="token operator">=</span> gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">SetEventNotificationMode</span><span class="token punctuation">(</span><span class="token constant">JVMTI_ENABLE</span><span class="token punctuation">,</span> <span class="token constant">JVMTI_EVENT_VM_INIT</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>jthread<span class="token punctuation">)</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    error <span class="token operator">=</span> gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">SetEventNotificationMode</span><span class="token punctuation">(</span><span class="token constant">JVMTI_ENABLE</span><span class="token punctuation">,</span> <span class="token constant">JVMTI_EVENT_EXCEPTION</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>jthread<span class="token punctuation">)</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    error <span class="token operator">=</span> gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">SetEventNotificationMode</span><span class="token punctuation">(</span><span class="token constant">JVMTI_ENABLE</span><span class="token punctuation">,</span> <span class="token constant">JVMTI_EVENT_NATIVE_METHOD_BIND</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>jthread<span class="token punctuation">)</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    error <span class="token operator">=</span> gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">SetEventNotificationMode</span><span class="token punctuation">(</span><span class="token constant">JVMTI_ENABLE</span><span class="token punctuation">,</span> <span class="token constant">JVMTI_EVENT_CLASS_FILE_LOAD_HOOK</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>jthread<span class="token punctuation">)</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    error <span class="token operator">=</span> gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">SetEventNotificationMode</span><span class="token punctuation">(</span><span class="token constant">JVMTI_ENABLE</span><span class="token punctuation">,</span> <span class="token constant">JVMTI_EVENT_METHOD_ENTRY</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>jthread<span class="token punctuation">)</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    error <span class="token operator">=</span> gb_jvmti<span class="token operator">-&gt;</span><span class="token class-name">SetEventNotificationMode</span><span class="token punctuation">(</span><span class="token constant">JVMTI_ENABLE</span><span class="token punctuation">,</span> <span class="token constant">JVMTI_EVENT_METHOD_EXIT</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>jthread<span class="token punctuation">)</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token constant">JNI_OK</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从监控的代码可以看到，这里有线程的 start、stop、join、interrupt 等，并可以记录执行信息。</li><li>另外这里监控的方法执行回调，<code>SetEventCallbacks(&amp;callbacks, sizeof(callbacks));</code> 以及相应事件的添加。</li></ul><h2 id="六、总结" tabindex="-1"><a class="header-anchor" href="#六、总结" aria-hidden="true">#</a> 六、总结</h2><ul><li>如果说你所经历的业务体量很小，那么几乎并不需要如此复杂的技术栈深度学习，甚至几乎不需要扩展各类功能，也不需要监控。但终究有一些需要造飞机的大厂，他们的业务体量庞大，并发数高，让原本可能就是一个简单的查询接口，也要做熔断、降级、限流、缓存、线程、异步、预热等等操作。</li><li>知其然才敢用，如果对一个技术点不是太熟悉，就不要胡乱使用，否则遇到的OOM并不是那么好复现，尤其是在并发场景下。当然如果你们技术体系中有各种服务，比如流量复现、链路追踪等等，那么还好。</li><li>又扯到了这，一个坚持学习、分享、沉淀的男人！好了，如果有错字、内容不准确，欢迎直接怼给我，我喜欢接受。<em>但不要欺负我哦哈哈哈哈哈！</em></li></ul>`,41);function g(h,_){const a=o("ExternalLinkIcon");return c(),l("div",null,[i,s("p",null,[n("作者：小傅哥 "),r,n("博客："),s("a",k,[n("https://bugstack.cn"),p(a)])]),d,s("p",null,[n("所以如果说的高大上一点，那么是在符合"),s("a",m,[n("科特尔法则"),p(a)]),n("和"),s("a",b,[n("阿姆达尔定律 "),p(a)]),n("的情况下，引入线程池的使用最为合理。啥意思呢，还得简单说！")]),v])}const w=e(u,[["render",g],["__file","2020-12-16-mianjingshouce · di22pian《xianchengchidejieshaoheshiyong，yijijiyujvmtishejifeiruqinjiankong》.html.vue"]]);export{w as default};
