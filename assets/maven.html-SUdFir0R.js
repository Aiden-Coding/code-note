import{_ as t,r as p,o,c as r,a,b as n,d as e,e as l}from"./app-3RcBQnkC.js";const c={},i=a("h1",{id:"maven-使用说明和配置",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#maven-使用说明和配置","aria-hidden":"true"},"#"),n(" Maven 使用说明和配置")],-1),u=a("br",null,null,-1),d={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},k=a("blockquote",null,[a("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),g=a("h2",{id:"一、前言",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#一、前言","aria-hidden":"true"},"#"),n(" 一、前言")],-1),v={href:"https://maven.apache.org/",target:"_blank",rel:"noopener noreferrer"},m=a("p",null,"简单来说，Apache Maven 最大的核心功能是帮你管理 Jar 包。不知道你是否在最开始学习 Java 开发时，如果有需要依赖其他 Jar 包，则需要把那个 Jar 复制到工程中，并且还需要在 Eclipse 里配置加载 Jar 包才能使用。而现在有 Maven 这样的工具后，一切都变得简单了。工程所需的 Jar 包，只需要配置 POM 就可以直接使用拉取和使用。",-1),h=a("div",{align:"center"},[a("img",{src:"https://bugstack.cn/images/roadmap/tutorial/road-map-230704-01.png?raw=true",width:"550px"})],-1),b=a("strong",null,"官网",-1),_={href:"https://maven.apache.org/",target:"_blank",rel:"noopener noreferrer"},f=a("strong",null,"仓库",-1),x={href:"https://mvnrepository.com/",target:"_blank",rel:"noopener noreferrer"},M=a("strong",null,"镜像",-1),I={href:"https://developer.aliyun.com/mvn/guide",target:"_blank",rel:"noopener noreferrer"},w=a("h2",{id:"一、软件下载",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#一、软件下载","aria-hidden":"true"},"#"),n(" 一、软件下载")],-1),j=a("p",null,"Maven 3.8+ 需要 JDK 1.7 或更高版本才能执行。 —— 较为常用的版本",-1),J=a("strong",null,"下载",-1),y={href:"https://maven.apache.org/download.cgi",target:"_blank",rel:"noopener noreferrer"},A=l(`<div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230704-02.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230704-03.png?raw=true" width="750px"></div><ul><li>下载后直接解压就可以，它就是文件，不需要做安装操作。</li><li>提醒；如果你是在 Linux 等服务器上有使用需求，而不是配置到 IntelliJ IDEA 则需要配置对应的环境变量。这样才能使用 mvn 命令。</li></ul><hr><p>编辑 <strong>/etc/profile</strong> 文件 <strong>sudo vim /etc/profile</strong>，在文件末尾添加如下代码：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export MAVEN_HOME=/usr/local/apache-maven-3.8.8
export PATH=\${PATH}:\${MAVEN_HOME}/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>保存文件，并运行如下命令使环境变量生效：</p><p># source /etc/profile</p><p>在控制台输入如下命令，如果能看到 Maven 相关版本信息，则说明 Maven 已经安装成功：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># mvn -v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="二、环境配置" tabindex="-1"><a class="header-anchor" href="#二、环境配置" aria-hidden="true">#</a> 二、环境配置</h2><p>Maven /conf/settings.xml 最常用的配置一个是仓库Jar存放的位置，另外一个为了提高拉取Jar包的速度，需要配置阿里云镜像地址。—— 注意配置前，先复制一个 <code>settings.xml.bak</code> 做个备份。</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230704-04.png?raw=true" width="950px"></div><h3 id="_1-存储地址" tabindex="-1"><a class="header-anchor" href="#_1-存储地址" aria-hidden="true">#</a> 1. 存储地址</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>localRepository<span class="token punctuation">&gt;</span></span><span class="token operator">/</span><span class="token class-name">Users</span><span class="token operator">/</span>fuzhengwei<span class="token operator">/</span>dev<span class="token operator">-</span>ops<span class="token operator">/</span>apache<span class="token operator">-</span>maven<span class="token operator">-</span><span class="token number">3.8</span><span class="token number">.8</span><span class="token operator">/</span>repository<span class="token operator">&lt;</span><span class="token operator">/</span>localRepository<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-镜像仓库" tabindex="-1"><a class="header-anchor" href="#_2-镜像仓库" aria-hidden="true">#</a> 2. 镜像仓库</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>mirrors<span class="token punctuation">&gt;</span></span>
  <span class="token generics"><span class="token punctuation">&lt;</span>mirror<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>id<span class="token punctuation">&gt;</span></span>aliyunmaven<span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>mirrorOf<span class="token punctuation">&gt;</span></span><span class="token operator">*</span><span class="token operator">&lt;</span><span class="token operator">/</span>mirrorOf<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>name<span class="token punctuation">&gt;</span></span>阿里云公共仓库<span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>url<span class="token punctuation">&gt;</span></span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>maven<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>repository<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>mirror<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>mirrors<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置上阿里云的仓库以后，Maven 的下载速度就嗖嗖的了！</li></ul><h2 id="三、使用配置" tabindex="-1"><a class="header-anchor" href="#三、使用配置" aria-hidden="true">#</a> 三、使用配置</h2><p>打开你的 IntelliJ IDEA 如图配置 Maven；</p><p><strong>首次打开时：</strong></p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230704-06.png?raw=true" width="850px"></div><p><strong>打开工程时：</strong></p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230704-05.png?raw=true" width="850px"></div><ul><li>配置好你的 Maven 地址就可以使用了。</li></ul><h2 id="四、命令操作" tabindex="-1"><a class="header-anchor" href="#四、命令操作" aria-hidden="true">#</a> 四、命令操作</h2><p>IntelliJ IDEA Maven 面板提供了操作控制；</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230704-07.png?raw=true" width="550px"></div><ul><li>clean：清理，执行该命令会删除项目路径下的target文件，但是不会删除本地的maven仓库已经生成的jar文件。</li><li>validate：验证，验证工程正确性，所需信息完整否。</li><li>compile：编译，大伙都知道java的识别文件是.class，编译生成class文件,编译命令，只编译选定的目标，不管之前是否已经编译过，会在你的项目路径下生成一个target目录，在该目录中包含一个classes文件夹，里面全是生成的class文件及字节码文件。与build区别：只编译选定的目标，不管之前是否已经编译过。</li><li>test：测试，单元测试。</li><li>package：打包，将工程文件打包为指定的格式，例如JAR，WAR等（看你项目的pom文件，里面的packaging标签就是来指定打包类型的）。这个命令会在你的项目路径下一个target目录，并且拥有compile命令的功能进行编译，同时会在target目录下生成项目的jar/war文件。如果a项目依赖于b项目，打包b项目时，只会打包到b项目下target下，编译a项目时就会报错，因为找不到所依赖的b项目，说明a项目在本地仓库是没有找到它所依赖的b项目，这时就用到install命令。</li><li>verify：核实，主要是对package检查是否有效、符合标准。</li><li>install：安装，将包安装至本地仓库，以让其它项目依赖。该命令包含了package命令功能，不但会在项目路径下生成class文件和jar包，同时会在你的本地maven仓库生成jar文件，供其他项目使用（如果没有设置过maven本地仓库，一般在用户/.m2目录下。如果a项目依赖于b项目，那么install b项目时，会在本地仓库同时生成pom文件和jar文件，解决了上面打包package出错的问题）。</li><li>build：建造，功能类似compile，区别是对整个项目进行编译。与compile区别及特点：是对整个工程进行彻底的重新编译，而不管是否已经编译过。Build过程往往会生成发布包，这个具体要看对IDE的配置了，Build在实际中应用很少，因为开发时候基本上不用，发布生产时候一般都用ANT等工具来发布。Build因为要全部编译，还要执行打包等额外工 作，因此时间较长。</li><li>site：站点，生成项目的站点文档。</li><li>deploy：配置部署，复制到远程仓库。前提需要在工程 POM 和 Maven 里配置上相关的信息以及账号。</li></ul><h2 id="五、构建配置" tabindex="-1"><a class="header-anchor" href="#五、构建配置" aria-hidden="true">#</a> 五、构建配置</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>build<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>finalName<span class="token punctuation">&gt;</span></span>项目名称<span class="token operator">&lt;</span><span class="token operator">/</span>finalName<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>plugins<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>maven<span class="token punctuation">.</span>plugins<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>maven<span class="token operator">-</span>compiler<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span>
                <span class="token generics"><span class="token punctuation">&lt;</span>source<span class="token punctuation">&gt;</span></span><span class="token number">1.8</span><span class="token operator">&lt;</span><span class="token operator">/</span>source<span class="token operator">&gt;</span>
                <span class="token generics"><span class="token punctuation">&lt;</span>target<span class="token punctuation">&gt;</span></span><span class="token number">1.8</span><span class="token operator">&lt;</span><span class="token operator">/</span>target<span class="token operator">&gt;</span>
                <span class="token generics"><span class="token punctuation">&lt;</span>encoding<span class="token punctuation">&gt;</span></span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>encoding<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>maven<span class="token punctuation">.</span>plugins<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>maven<span class="token operator">-</span>resources<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.5</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span>
                <span class="token generics"><span class="token punctuation">&lt;</span>encoding<span class="token punctuation">&gt;</span></span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>encoding<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 统一设定<span class="token constant">POM</span>版本信息插件 <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>codehaus<span class="token punctuation">.</span>mojo<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>versions<span class="token operator">-</span>maven<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.7</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>build<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230704-08.png?raw=true" width="950px"></div><p>这是一个基本的构建配置；</p><ul><li>maven-compiler-plugin 指定构建版本</li><li>maven-resources-plugin 构建资源</li><li>versions-maven-plugin 用于统一设定工程的版本工具【如图】</li></ul><h2 id="六、实战技巧" tabindex="-1"><a class="header-anchor" href="#六、实战技巧" aria-hidden="true">#</a> 六、实战技巧</h2><p>公司中会有很多的内部工程，开发时是怎么管理Jar的呢？</p><ol><li>如果是自己本地验证，那么你需要把你的N个工程，只要是需要被M工程引用的，就需要在N个工程里都操作 Install 操作，让Jar包进入到本地仓库。这样你的其他工程就可以引入了。</li><li>如果你的本地工程已经定义好接口，需要给其他人使用。那么你可以点击deploy部署。这个部署是把你的Jar发布到内部的私有仓库，只公司可见。这个操作之前需要在 POM 里配置发布部署的信息以及账号。</li></ol>`,37);function E(N,O){const s=p("ExternalLinkIcon");return o(),r("div",null,[i,a("p",null,[n("作者：小傅哥 "),u,n("博客："),a("a",d,[n("https://bugstack.cn"),e(s)])]),k,g,a("p",null,[a("a",v,[n("Apache Maven"),e(s)]),n(" 是一个软件项目管理、构建和依赖工具。基于项目对象模型 (POM) 的概念，Maven 可以通过中央信息来管理项目的构建、报告和文档。")]),m,h,a("ul",null,[a("li",null,[b,n("："),a("a",_,[n("https://maven.apache.org/"),e(s)])]),a("li",null,[f,n("："),a("a",x,[n("https://mvnrepository.com/"),e(s)])]),a("li",null,[M,n("："),a("a",I,[n("https://developer.aliyun.com/mvn/guide"),e(s)]),n(" - 阿里云提供的公共代理仓库，方便研发伙伴使用，速度更快更稳定。")])]),w,j,a("p",null,[J,n("："),a("a",y,[n("https://maven.apache.org/download.cgi"),e(s)])]),A])}const B=t(c,[["render",E],["__file","maven.html.vue"]]);export{B as default};
