import{_ as p,r as l,o as i,c,a as n,b as s,d as t,e}from"./app-3RcBQnkC.js";const o={},u=n("h1",{id:"第3节-两种方式创建插件工程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#第3节-两种方式创建插件工程","aria-hidden":"true"},"#"),s(" 第3节：两种方式创建插件工程")],-1),r=n("br",null,null,-1),d={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},k=n("br",null,null,-1),g={href:"https://mp.weixin.qq.com/s/YcpHDgQsQ2L2Ft33EaR8fQ",target:"_blank",rel:"noopener noreferrer"},v=e('<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>并不是所有的不会，都是真不会！</code></p><p>对于码农这一行业的编程学习生涯来说，会遇到很多的<strong>不会</strong>，不会搭建IDEA工程、不会写老师的案例、不会完成书中的效果、不会做项目的需求、不会实现复杂的逻辑、不会抽象工程的结构等等。但这些不会当中并不是所有的不会，都因为太复杂学不会，而是很大一部分内容因为找不到好的资料、没有清晰的文档、缺少完整的案例，导致不知道所以不会。</p><p>正好最近在折腾IDEA插件开发的时候，市面的资料确实不多，也没有成体系完整的开发指导手册，所以就遇到了很多不知道就不会的事情，需要一点点查询搜索源码、验证API接口，最终把各项功能实现，当然在这个过程中也确实踩了不少坑！</p><p>好！沉淀下来，接下来在这个专栏会把一些关于 IDEA 插件开发用到的各项知识做成案例输出出来，一方面可以让自己缕清所有的知识项，另一方面也可以帮助到更多的有需要的研发人员使用。</p><h2 id="二、需求目的" tabindex="-1"><a class="header-anchor" href="#二、需求目的" aria-hidden="true">#</a> 二、需求目的</h2><p>可能你会想什么场景会需要用到插件开发，其实插件开发算是一种通用的解决方案，由服务平台定义标准让各自使用方进行自需的扩展。</p><p>这就像我们非常常用的 P3C 代码检查插件、代码审计插件、脚手架工程创建插件、自动化API提取插件、单元测试统计插件等等，这些都是在 IDEA 代码开发平台扩展出来的各项功能插件。</p><p>插件也可以说是一种解决方案，其实与你在代码编程时使用人家已经定义好的标准结构和功能下，扩展出自己的功能时是一样的。而这种方式也可以非常好的解决一些属于代码开发期间不易于放到代码提测后问题场景，并能及时提醒研发人员作出响应的修改处理。</p><h2 id="三、环境说明" tabindex="-1"><a class="header-anchor" href="#三、环境说明" aria-hidden="true">#</a> 三、环境说明</h2><ul><li>IntelliJ Platform Plugin JDK <em>不是自己安装的JDK1.8等，只有插件JDK才能开发插件</em></li><li>IntelliJ IDEA 2019.3.1 x64 <em>如果你是其他版本，会涉及到 插件工程创建后版本修改</em></li><li>gradle-5.2.1 <em>与 2019 IDEA 版本下的插件开发匹配，如果遇到一些环境问题可以参考我们开篇介绍</em></li></ul>',12),m={href:"https://plugins.jetbrains.com/docs/intellij/disposers.html",target:"_blank",rel:"noopener noreferrer"},b=e(`<h2 id="四、模板方式创建" tabindex="-1"><a class="header-anchor" href="#四、模板方式创建" aria-hidden="true">#</a> 四、模板方式创建</h2><h3 id="_1-创建引导" tabindex="-1"><a class="header-anchor" href="#_1-创建引导" aria-hidden="true">#</a> 1. 创建引导</h3><p><strong>New -&gt; Project -&gt; IntelliJ Platform Plugin</strong></p><p><img src="https://bugstack.cn/assets/images/middleware/guide-idea-plugin-1-01.png" alt=""></p><h3 id="_2-工程结构" tabindex="-1"><a class="header-anchor" href="#_2-工程结构" aria-hidden="true">#</a> 2. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>guide<span class="token operator">-</span>idea<span class="token operator">-</span>plugin<span class="token operator">-</span>create<span class="token operator">-</span>project<span class="token operator">-</span>by<span class="token operator">-</span>platform
├── resources
│   └── <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span>
│       └── plugin<span class="token punctuation">.</span>xml 
└── src
    └── cn<span class="token punctuation">.</span>bugstack<span class="token punctuation">.</span>guide<span class="token punctuation">.</span>idea<span class="token punctuation">.</span>plugin
        └── <span class="token class-name">MyAction</span><span class="token punctuation">.</span>java  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><strong>源码获取</strong>：#公众号：<code>bugstack虫洞栈</code> 回复：<code>idea</code> 即可下载全部 IDEA 插件开发源码</p></li><li><p>plugin.xml 插件配置：开发描述、版本信息、Action事件入口、扩展信息(数据存放等)</p></li><li><p>src 具体的事件、UI窗体、工程逻辑代码开发</p></li><li><p>另外类似 MyAction 的创建并不是直接创建普通类，而是通过 <strong>New -&gt; Plugin DevKit -&gt; Action</strong> 的方式进行创建，因为这样的创建方式可以再 plugin.xml 中自动添加 action 配置。<em>当然如果你要是自己手动创建普通类那样创建 Action 类，则需要自己手动处理配置信息。</em></p></li></ul><h3 id="_3-plugin-xml-配置" tabindex="-1"><a class="header-anchor" href="#_3-plugin-xml-配置" aria-hidden="true">#</a> 3. plugin.xml 配置</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>idea-plugin</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>cn.bugstack.guide.idea.plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>CreateProjectByPlatform<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vendor</span> <span class="token attr-name">email</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>184172133@qq.com<span class="token punctuation">&quot;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://bugstack.cn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>小傅哥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vendor</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[
      基于IDEA插件模板方式创建测试工程&lt;br&gt;
      &lt;em&gt;1. 学习IDEA插件工程搭建&lt;/em&gt;
      &lt;em&gt;2. 验证插件基础功能实现&lt;/em&gt;
    ]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>change-notes</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[
      插件开发学习功能点&lt;br&gt;
      &lt;em&gt;1. 工程搭建&lt;/em&gt;
      &lt;em&gt;2. 菜单读取&lt;/em&gt;
      &lt;em&gt;3. 获取配置&lt;/em&gt;
      &lt;em&gt;4. 回显页面&lt;/em&gt;
    ]]&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>change-notes</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>idea-version</span> <span class="token attr-name">since-build</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>173.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

  <span class="token comment">&lt;!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>depends</span><span class="token punctuation">&gt;</span></span>com.intellij.modules.platform<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>depends</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extensions</span> <span class="token attr-name">defaultExtensionNs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.intellij<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Add your extensions here --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extensions</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>actions</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Add your actions here --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MyAction<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cn.bugstack.guide.idea.plugin.MyAction<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MyAction<span class="token punctuation">&quot;</span></span> <span class="token attr-name">description</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MyAction<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>add-to-group</span> <span class="token attr-name">group-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FileMenu<span class="token punctuation">&quot;</span></span> <span class="token attr-name">anchor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>first<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>action</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>actions</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>idea-plugin</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里重点看 actions 其他上面的工程信息、版本描述、个人资料都按照自己的信息填写就行，不会影响插件运行。</li><li>actions 下是关于所有事件入口的配置，也就是你希望让你的 IDEA 插件在 IDEA 窗体中什么地方展示，以及配置快捷键等。这里的配置说明是在 FileMenu 下的第一个入口即为你的插件。</li></ul><h3 id="_4-myaction-事件入口" tabindex="-1"><a class="header-anchor" href="#_4-myaction-事件入口" aria-hidden="true">#</a> 4. MyAction 事件入口</h3><p><img src="https://bugstack.cn/assets/images/middleware/guide-idea-plugin-1-04.png" alt=""></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAction</span> <span class="token keyword">extends</span> <span class="token class-name">AnAction</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">AnActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Project</span> project <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token class-name">PlatformDataKeys</span><span class="token punctuation">.</span><span class="token constant">PROJECT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PsiFile</span> psiFile <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token class-name">CommonDataKeys</span><span class="token punctuation">.</span><span class="token constant">PSI_FILE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> classPath <span class="token operator">=</span> psiFile<span class="token punctuation">.</span><span class="token function">getVirtualFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Messages</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span>project<span class="token punctuation">,</span> <span class="token string">&quot;guide-idea-plugin-create-project-by-platform: &quot;</span> <span class="token operator">+</span> classPath<span class="token punctuation">,</span> <span class="token string">&quot;Hi IDEA Plugin&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Messages</span><span class="token punctuation">.</span><span class="token function">getInformationIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 MyAction 事件入口中获取 Project 工程信息、PsiFile 文件信息，以及对应的类路径。</li><li>最后在 Messages.showMessageDialog 下打印，这样把鼠标放到工程类下，在点这个按钮的时候就可以看到类的路径弹窗了。</li></ul><h3 id="_5-运行测试" tabindex="-1"><a class="header-anchor" href="#_5-运行测试" aria-hidden="true">#</a> 5. 运行测试</h3><p><strong>运行过程</strong></p><ul><li>点击 Plugin 绿色箭头，和正常启动程序一样</li><li>这个时候它会打开一个新的 IDEA 工程，并在这个工程中默认安装你开发好的插件</li><li>在新打开的 IDEA 插件工程中，选中工程类后，点击 File -&gt; MyAction</li></ul><p><strong>运行结果</strong></p><p><img src="https://bugstack.cn/assets/images/middleware/guide-idea-plugin-1-04.png" alt=""></p><ul><li>通过测试运行效果可以看到，已经可以打出工程下类的路径信息了。<em>你也可以尝试把Action的入口放到其他按钮下进行测试</em></li></ul><h2 id="五、gradle-方式创建" tabindex="-1"><a class="header-anchor" href="#五、gradle-方式创建" aria-hidden="true">#</a> 五、Gradle 方式创建</h2><h3 id="_1-创建引导-1" tabindex="-1"><a class="header-anchor" href="#_1-创建引导-1" aria-hidden="true">#</a> 1. 创建引导</h3><p><strong>New -&gt; Project -&gt; Gradle 选中 Java &amp; IntelliJ Platform Plugin</strong></p><p><img src="https://bugstack.cn/assets/images/middleware/guide-idea-plugin-1-03.png" alt=""></p><h3 id="_2-工程结构-1" tabindex="-1"><a class="header-anchor" href="#_2-工程结构-1" aria-hidden="true">#</a> 2. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>guide<span class="token operator">-</span>idea<span class="token operator">-</span>plugin<span class="token operator">-</span>create<span class="token operator">-</span>project<span class="token operator">-</span>by<span class="token operator">-</span>gradle
├── <span class="token punctuation">.</span>gradle
└── src
    ├── main
    │   └── java
    │   	└── cn<span class="token punctuation">.</span>bugstack<span class="token punctuation">.</span>guide<span class="token punctuation">.</span>idea<span class="token punctuation">.</span>plugin 
    │       	└── <span class="token class-name">MyAction</span><span class="token punctuation">.</span>java    
    ├── resources
    │   └── <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span>
    │       └── plugin<span class="token punctuation">.</span>xml 
    ├── build<span class="token punctuation">.</span>gradle  
    └── gradle<span class="token punctuation">.</span>properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),h=n("strong",null,"源码",-1),_={href:"https://github.com/fuzhengwei/guide-idea-plugin-create-project-by-gradle",target:"_blank",rel:"noopener noreferrer"},f=e(`<ul><li>与模板方式创建 Gradle 主要差异在 build.gradle、gradle.properties 内容的配置，这两个文件主要是处理 Gradle 相关信息的，其中 gradle.properties 用于配置 JVM Xmx 参数的，避免下载耗费资源较大崩溃。</li><li>plugin.xml 配置插件入口等内容，MyAction 是事件入口。</li></ul><h3 id="_3-build-gradle-配置" tabindex="-1"><a class="header-anchor" href="#_3-build-gradle-配置" aria-hidden="true">#</a> 3. build.gradle 配置</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>plugins <span class="token punctuation">{</span>
    id <span class="token char">&#39;java&#39;</span>
    id &#39;org<span class="token punctuation">.</span>jetbrains<span class="token punctuation">.</span>intellij&#39; version <span class="token char">&#39;0.6.3&#39;</span>
<span class="token punctuation">}</span>

group &#39;cn<span class="token punctuation">.</span>bugstack<span class="token punctuation">.</span>guide<span class="token punctuation">.</span>idea<span class="token punctuation">.</span>plugin&#39;
version &#39;<span class="token number">1.0</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span>&#39;

sourceCompatibility <span class="token operator">=</span> <span class="token number">1.8</span>

repositories <span class="token punctuation">{</span>
    <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

dependencies <span class="token punctuation">{</span>
    testCompile group<span class="token operator">:</span> <span class="token char">&#39;junit&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token char">&#39;junit&#39;</span><span class="token punctuation">,</span> version<span class="token operator">:</span> <span class="token char">&#39;4.12&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// See https://github.com/JetBrains/gradle-intellij-plugin/</span>
intellij <span class="token punctuation">{</span>
    version &#39;<span class="token number">2019.3</span><span class="token number">.1</span>&#39;
<span class="token punctuation">}</span>
patchPluginXml <span class="token punctuation">{</span>
    changeNotes <span class="token triple-quoted-string string">&quot;&quot;&quot;
      &lt;![CDATA[
      插件开发学习功能点&lt;br&gt;
      &lt;em&gt;1. 工程搭建&lt;/em&gt;
      &lt;em&gt;2. 菜单读取&lt;/em&gt;
      &lt;em&gt;3. 获取配置&lt;/em&gt;
      &lt;em&gt;4. 回显页面&lt;/em&gt;
    ]]&gt;&quot;&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>gradle 与 maven 的使用配置上，还是可以相通的找到一些类似的地方的，如果没有使用过 gradle 也是可以使用的。</li><li>这里需要注意 plugins 中 <code>id &#39;org.jetbrains.intellij&#39; version &#39;0.6.3&#39;</code> 默认创建工程的版本有点高，与 gradle 5.x 不匹配。<em>不过你可以尝试调试合适版本进行使用</em></li></ul><h3 id="_4-myaction-事件入口-1" tabindex="-1"><a class="header-anchor" href="#_4-myaction-事件入口-1" aria-hidden="true">#</a> 4. MyAction 事件入口</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAction</span> <span class="token keyword">extends</span> <span class="token class-name">AnAction</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">AnActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Project</span> project <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token class-name">PlatformDataKeys</span><span class="token punctuation">.</span><span class="token constant">PROJECT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PsiFile</span> psiFile <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token class-name">CommonDataKeys</span><span class="token punctuation">.</span><span class="token constant">PSI_FILE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> classPath <span class="token operator">=</span> psiFile<span class="token punctuation">.</span><span class="token function">getVirtualFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Messages</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span>project<span class="token punctuation">,</span> <span class="token string">&quot;guide-idea-plugin-create-project-by-gradle: &quot;</span> <span class="token operator">+</span> classPath<span class="token punctuation">,</span> <span class="token string">&quot;Hi IDEA Plugin&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Messages</span><span class="token punctuation">.</span><span class="token function">getInformationIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里与模板方式创建的案例是一样的，为了区别两个插件测试，我们这里打印了工程的名称。当然你也可以使用 project.getName() 获取工程名称。</li></ul><h3 id="_5-运行测试-1" tabindex="-1"><a class="header-anchor" href="#_5-运行测试-1" aria-hidden="true">#</a> 5. 运行测试</h3><ul><li>Gradle 测试运行相当于是运行 <code>:runIde</code> ,也是和普通的代码调试一样。</li></ul><p><strong>运行结果</strong></p><p><img src="https://bugstack.cn/assets/images/middleware/guide-idea-plugin-1-05.png" alt=""></p><ul><li>通过测试运行效果可以看到，已经可以打出工程下类的路径信息了。</li></ul><h2 id="六、总结" tabindex="-1"><a class="header-anchor" href="#六、总结" aria-hidden="true">#</a> 六、总结</h2><ul><li>整篇内容的学习还是蛮简单的，哪怕你之前没开发过 IDEA 插件，按照这样的套路往下折腾也是可以完成插件开发的。类似这样的知识内容只是平时常做业务开发所以接触的也不多，乍一听上去还是很陌生的，不过有这样的资料就可以上手了。</li><li>本章节初步介绍 IDEA 插件的方式和一个非常简单的基本功能，后续我们在 Gradle 创建插件的基础上，继续开发其他案例功能，逐步学习 IDEA 插件开发用到的各项技巧用于完成所需要解决的问题。</li><li>在学习的过程中可以自行尝试扩展一些其他组件入口，打印不同的工程信息。就像你使用的一些的插件一样，帮助你生成get、set，或者提取采集接口信息，也包括你写了多少行代码，思考它们是如何实现的。</li></ul>`,14);function j(A,q){const a=l("ExternalLinkIcon");return i(),c("div",null,[u,n("p",null,[s("作者：小傅哥 "),r,s("博客："),n("a",d,[s("https://bugstack.cn"),t(a)]),k,s("原文："),n("a",g,[s("https://mp.weixin.qq.com/s/YcpHDgQsQ2L2Ft33EaR8fQ"),t(a)])]),v,n("p",null,[s("在官方文档 "),n("a",m,[s("https://plugins.jetbrains.com/docs/intellij/disposers.html"),t(a)]),s(" 介绍开发 IDEA 插件的工程方式有两种，分别是模板方式和 Gradle 工程方式。这里我们分别演示下不同方式下工程的创建和所涉及到知识点内容的介绍，虽然两种方式都能创建 IDEA 插件工程，但更推荐使用 Gradle 方式。")]),b,n("p",null,[h,s("："),n("a",_,[s("https://github.com/fuzhengwei/guide-idea-plugin-create-project-by-gradle"),t(a)])]),f])}const y=p(o,[["render",j],["__file","2021-10-18-《IntelliJ IDEA chajiankaifa》diyijie：liangzhongfangshichuangjianchajiangongcheng.html.vue"]]);export{y as default};
