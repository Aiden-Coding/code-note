import{_ as i,r as l,o as r,c as o,a as e,b as a,d as s,e as c}from"./app-3RcBQnkC.js";const d={},n=e("h1",{id:"idea-plugin-vo2dto-——-对象转换插件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#idea-plugin-vo2dto-——-对象转换插件","aria-hidden":"true"},"#"),a(" IDEA Plugin vo2dto —— 对象转换插件")],-1),h=e("br",null,null,-1),p={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},u=e("blockquote",null,[e("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=e("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=253158803&bvid=BV13Y411h7fv&cid=485549535&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),g=c('<h2 id="一、承认你优秀很难" tabindex="-1"><a class="header-anchor" href="#一、承认你优秀很难" aria-hidden="true">#</a> 一、承认你优秀很难</h2><p><code>很多码农，把路走窄了</code></p><p>捧一个，喷一个，很多码农都不会多一点思路看问题，总是喜欢用矛和盾在显示自己有点<code>本事</code>。Github 你写文章说你不如做开源代码有价值，你写了开源代码说你这没有意义，那你问他贡献了啥，他只贡献了嘴。<em>聊理论吹的叮当的，写代码搞的稀得囊的</em></p><p><img src="https://bugstack.cn/images/article/assembly/assembly-211228-01.png" alt=""></p><ul><li>好在，你这一路上能遇到很多<code>同好</code>，他们能真诚的给你意见、提供思路、帮助解决，让你们一群有技术初心的人，不断的成长。</li><li>这可能就是技术创作的土壤，如果大家都不施肥，反而还要过来用力的踩踩这块地，那最后大家都只能一起卷死在这，谁也不要创新。<em>加油，我希望你可以和我一起做点事情</em></li></ul><h2 id="二、写了个什么插件" tabindex="-1"><a class="header-anchor" href="#二、写了个什么插件" aria-hidden="true">#</a> 二、写了个什么插件</h2><p>最近一个月多都在折腾关于 IDEA Plugin 插件开发的案例编写技术总结，在日常编码开发和折腾插件技术过程中发现一个<code>痛点</code>。</p><p>日常编码的过程中有太多的 vo2dto 对象转换操作，尤其是在 DDD 架构下多了不少的防腐层，而这层之间的对象 po、vo、do、dto，总是需要被转换，而使用 BeanUtils 多了，以后增改字段名都不知道影响到哪。</p><p>当然也有不错的工具 MapStruct 既可以保证性能又有不错的效率，但它需要给每一个转换对象维护对应的转换类，对于接口层的转换还是非常适合的，但那些很小的方法块内，也是如此折腾就显得有些麻烦了。</p><p><strong>所以</strong>，小傅哥结合 IDEA Plugin 插件开发的能力，通过鼠标定位到转换对象上，一键织入需要生成一堆的 <code>x.set(y.get)</code> 方法，并且在几次优化中以及可以支持父类对象、lombok插件。演示图如下：</p><p><img src="https://bugstack.cn/images/article/assembly/assembly-211228-02.png" alt=""></p><ul><li>支持：复制一个对象，光标定位另外一个对象上，鼠标右键 Generate -&gt; Vo2Dto 一键生成转换代码</li><li>支持：不复制对象，直接在转换可以生成空的 set 对象，方便自由添加内容</li><li>支持：插件中通过注解检测的方式，允许使用 lombok</li></ul><h2 id="三、发布插件的经历" tabindex="-1"><a class="header-anchor" href="#三、发布插件的经历" aria-hidden="true">#</a> 三、发布插件的经历</h2><p><code>🤔原来不用英文描述，不给我过</code></p><h3 id="_1-请用英语描述" tabindex="-1"><a class="header-anchor" href="#_1-请用英语描述" aria-hidden="true">#</a> 1. 请用英语描述</h3><p><img src="https://bugstack.cn/images/article/assembly/assembly-211228-03.png" alt=""></p><ul><li>这是我第一次发布插件接收到的邮件提醒，告诉我在你的 plugin.xml 中，要用英语描述。<em>一直没看，以为垃圾邮件</em></li></ul><h3 id="_2-请用英文截图" tabindex="-1"><a class="header-anchor" href="#_2-请用英文截图" aria-hidden="true">#</a> 2. 请用英文截图</h3><p><img src="https://bugstack.cn/images/article/assembly/assembly-211228-04.png" alt=""></p><ul><li>告诉我，你的截图要用英语的，这样我才能给你通过。</li></ul><h3 id="_3-说我截图没用" tabindex="-1"><a class="header-anchor" href="#_3-说我截图没用" aria-hidden="true">#</a> 3. 说我截图没用</h3><p><img src="https://bugstack.cn/images/article/assembly/assembly-211228-05.png" alt=""></p><ul><li>问我你确定需要这个截图吗，他觉得没啥意义</li></ul><h3 id="_4-终于发布出去" tabindex="-1"><a class="header-anchor" href="#_4-终于发布出去" aria-hidden="true">#</a> 4. 终于发布出去</h3><p><img src="https://bugstack.cn/images/article/assembly/assembly-211228-06.png" alt=""></p><ul><li>改了注释、删了截图，终于迎来曙光。<em>你说，不发布一次，你会知道遇到这些吗！</em></li></ul><h2 id="四、把这插件安排上" tabindex="-1"><a class="header-anchor" href="#四、把这插件安排上" aria-hidden="true">#</a> 四、把这插件安排上</h2><h3 id="_1-安装插件" tabindex="-1"><a class="header-anchor" href="#_1-安装插件" aria-hidden="true">#</a> 1. 安装插件</h3><p><code>讲到这我就兴奋了！</code></p><p>为啥兴奋，因为这一个插件发布，我整整等了2周，因为一次修改就要2个工作日才能审核，所以上面我犯的错，都是用时间磨出来。</p><p>不过现在好了，你可以直接在 IDEA 中搜索安装小傅哥写的插件了，哈哈哈，这种没做过的事搞一次，总是让人很兴奋！</p><p><img src="https://bugstack.cn/images/article/assembly/assembly-211228-07.png" alt=""></p><ul><li>看到能搜索到 vo2dto 并顺利安装使用，我的心舒服了。<em>没有人能阻挡你最技术的热爱，即使你来我这踩两脚</em></li></ul><h3 id="_2-使用介绍" tabindex="-1"><a class="header-anchor" href="#_2-使用介绍" aria-hidden="true">#</a> 2. 使用介绍</h3><p><img src="https://bugstack.cn/images/article/assembly/assembly-211228-08.png" alt=""></p><p>如图所示，你只需要很简单的步骤，既可以快速且准确的帮你生成对应的转换代码，在一些场景里使用还是非常 <code>Good</code> 的！操作步骤：</p><ul><li>复制对象 <code>UserDto userDto</code> 这个是被转换对象，复制后才能便于生成获取属性的代码。<em>如果你不复制，那么就是生成空代码</em></li><li>定位对象 <code>User usxxer</code> 把光标定位到对象或属性上，点击 Generate -&gt; Vo2Dto 这样就可以把你的对象生成出来了。</li><li>注意：支持 lombok、支持继承对象，如果你在使用过程中遇到其他需求或者问题，都可以反馈给我</li></ul><h3 id="_3-源码共享" tabindex="-1"><a class="header-anchor" href="#_3-源码共享" aria-hidden="true">#</a> 3. 源码共享</h3><p><img src="https://bugstack.cn/images/article/assembly/assembly-211228-09.png" alt=""></p>',39),b={href:"https://github.com/fuzhengwei/vo2dto",target:"_blank",rel:"noopener noreferrer"},_=e("li",null,"说明：有同好的技术人共建才会让一件小事不断的优秀起来，所以我把这块代码共享出来，我们可以一起做一个非常短小精致的产品，来帮助我们自己完成一些便捷的开发处理。",-1),f=e("h2",{id:"五、我确定挺倔强",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#五、我确定挺倔强","aria-hidden":"true"},"#"),a(" 五、我确定挺倔强")],-1),x=e("p",null,"有一种倔强可能也是天生的，我喜欢技术、喜欢折腾、喜欢简单干净的事情，并把我认准的事长久坚持下去。有时候我也知道另外一条路会更轻松、更有钱拿，但那并不是我的内心，只有我认识到的我才是我，否则强加给我的我，始终不会是我。",-1);function k(y,v){const t=l("ExternalLinkIcon");return r(),o("div",null,[n,e("p",null,[a("作者：小傅哥 "),h,a("博客："),e("a",p,[a("https://bugstack.cn"),s(t)])]),u,m,g,e("ul",null,[e("li",null,[a("源码："),e("a",b,[a("https://github.com/fuzhengwei/vo2dto"),s(t)])]),_]),f,x])}const V=i(d,[["render",k],["__file","vo2dto.html.vue"]]);export{V as default};
