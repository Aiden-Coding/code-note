import{_ as p,r as e,o,c,a as n,b as s,d as t,e as i}from"./app-3RcBQnkC.js";const l={},u=n("h1",{id:"mock-单元测试-插件生成测试代码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mock-单元测试-插件生成测试代码","aria-hidden":"true"},"#"),s(" Mock 单元测试&插件生成测试代码")],-1),k=n("br",null,null,-1),d={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},r=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=492503304&bvid=BV1mN411x7rJ&cid=1311297417&p=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),v={href:"https://zh.wikipedia.org/wiki/%E6%A8%A1%E6%8B%9F%E5%AF%B9%E8%B1%A1",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"从整个工程所处不同阶段的测试手段包括；单元测试、集成测试、系统测试、验收测试、性能测试、安全测试、回归测试，以及兼容、可靠、可用性测试。",-1),h={href:"https://zh.wikipedia.org/wiki/%E6%A8%A1%E6%8B%9F%E5%AF%B9%E8%B1%A1",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,"本文涉及的工程：",-1),f={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-mock",target:"_blank",rel:"noopener noreferrer"},w={href:"https://gitcode.net/KnowledgePlanet/road-map/chatglm-sdk-java",target:"_blank",rel:"noopener noreferrer"},y=n("h2",{id:"一、案例背景",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、案例背景","aria-hidden":"true"},"#"),s(" 一、案例背景")],-1),I=n("p",null,"因为 Mock 单元测试的重点，主要体现在；功能流程较长、调用外部接口稳定性较差、测试过程中希望可以不启动 SpringBoot 应用就能对单个功能模块进行测试验证。",-1),_={href:"https://bugstack.cn/md/road-map/http.html",target:"_blank",rel:"noopener noreferrer"},x=i(`<div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-mock-01.png" width="650px"></div><ul><li>首先，这里使用 DDD 工程模型结构，搭建出测试工程。—— DDD 是一种软件设计方法，而软件的设计方法涵盖了；范式、模型、框架、方法论。所以通常下 MVC 与 DDD 的对比先从模型、框架在到思想设计和方法论。</li><li>之后，我们在这样的一个模型结构下，实现出自动回帖的领域功能。而这个模型的实现恰好需要调用外部的接口和 ChatGLM SDK，这与我们要做的 Mock 测试正好符合，因为在大部分开发场景下，远程的 HTTP 调用可能不不会一直可用，所以可以用 Mock 方式进行模拟。</li></ul><h2 id="二、功能实现" tabindex="-1"><a class="header-anchor" href="#二、功能实现" aria-hidden="true">#</a> 二、功能实现</h2><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-mock-02.png" width="450px"></div><ul><li>在 domain 中实现一个zsxq的自动回帖领域，而它所需的要调用的接口则由基础设施层提供。</li><li>另外在 app 中还有 ChatGLM SDK 的配置启动，也会被注入到 AiReply 实现类中。</li></ul><h3 id="_2-ai模块启动" tabindex="-1"><a class="header-anchor" href="#_2-ai模块启动" aria-hidden="true">#</a> 2. Ai模块启动</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># ChatGLM SDK Config</span>
<span class="token key atrule">chatglm</span><span class="token punctuation">:</span>
  <span class="token key atrule">sdk</span><span class="token punctuation">:</span>
    <span class="token key atrule">config</span><span class="token punctuation">:</span>
      <span class="token comment"># 状态；true = 开启、false 关闭</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
      <span class="token comment"># 官网地址</span>
      <span class="token key atrule">api-host</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//open.bigmodel.cn/
      <span class="token comment"># 官网申请 https://open.bigmodel.cn/usercenter/apikeys</span>
      <span class="token key atrule">api-secret-key</span><span class="token punctuation">:</span> d570f7c5d289cdac2abdfdc562e39f3f.trqz1dH8ZK6ED7Pg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;chatglm.sdk.config.enabled&quot;</span><span class="token punctuation">,</span> havingValue <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> matchIfMissing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">OpenAiSession</span> <span class="token function">openAiSession</span><span class="token punctuation">(</span><span class="token class-name">ChatGLMSDKConfigProperties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1. 配置文件</span>
    <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>bugstack<span class="token punctuation">.</span>chatglm<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span>Configuration</span> configuration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>bugstack<span class="token punctuation">.</span>chatglm<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span>Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    configuration<span class="token punctuation">.</span><span class="token function">setApiHost</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getApiHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    configuration<span class="token punctuation">.</span><span class="token function">setApiSecretKey</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getApiSecretKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 2. 会话工厂</span>
    <span class="token class-name">OpenAiSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultOpenAiSessionFactory</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 3. 开启会话</span>
    <span class="token keyword">return</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>所有的这些配置类的服务，都可以放到 app下的 config 模块中。</li><li>ChatGLM 可以直接在官网申请，默认会赠送18元的额度，对于它所提供的模型，还是非常够测试使用的。</li></ul><h3 id="_3-基础设置-接口调用" tabindex="-1"><a class="header-anchor" href="#_3-基础设置-接口调用" aria-hidden="true">#</a> 3. 基础设置 - 接口调用</h3><h4 id="_3-1-接口-防腐对接" tabindex="-1"><a class="header-anchor" href="#_3-1-接口-防腐对接" aria-hidden="true">#</a> 3.1 接口 - 防腐对接</h4><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.infrastructure.gateway.api.IZSXQApi</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IZSXQApi</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 查询知识星球帖子内容
     *
     * <span class="token keyword">@return</span> 帖子数据
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> 异常
     */</span>
    <span class="token class-name">ResponseDTO</span> <span class="token function">topics</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 回复帖子
     *
     * <span class="token keyword">@param</span> <span class="token parameter">topicId</span> 帖子ID
     * <span class="token keyword">@param</span> <span class="token parameter">content</span> 回复内容
     */</span>
    <span class="token keyword">void</span> <span class="token function">comment</span><span class="token punctuation">(</span><span class="token keyword">long</span> topicId<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在基础设置层中定义 gateway 网关接口调用，对于外部的接口使用，中间要做一层防腐，不要直接把外部的接口暴露出去使用。</li></ul><h4 id="_3-2-使用-依赖倒置" tabindex="-1"><a class="header-anchor" href="#_3-2-使用-依赖倒置" aria-hidden="true">#</a> 3.2 使用 - 依赖倒置</h4><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.infrastructure.gateway.adapter.ZSXQAdapter</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZSXQAdapter</span> <span class="token keyword">implements</span> <span class="token class-name">IZSXQAdapter</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">IZSXQApi</span> zsxqApi<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicsItemVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryTopics</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">ResponseDTO</span> responseDTO <span class="token operator">=</span> zsxqApi<span class="token punctuation">.</span><span class="token function">topics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">RespData</span> respData <span class="token operator">=</span> responseDTO<span class="token punctuation">.</span><span class="token function">getRespData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicsItem</span><span class="token punctuation">&gt;</span></span> topics <span class="token operator">=</span> respData<span class="token punctuation">.</span><span class="token function">getTopics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicsItemVO</span><span class="token punctuation">&gt;</span></span> topicsItemVOList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TopicsItem</span> topicsItem <span class="token operator">:</span> topics<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">TopicsItemVO</span> topicsItemVO <span class="token operator">=</span> <span class="token class-name">TopicsItemVO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">topicId</span><span class="token punctuation">(</span>topicsItem<span class="token punctuation">.</span><span class="token function">getTopicId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">talk</span><span class="token punctuation">(</span>topicsItem<span class="token punctuation">.</span><span class="token function">getTalk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">showCommentsItems</span><span class="token punctuation">(</span>topicsItem<span class="token punctuation">.</span><span class="token function">getShowComments</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> topicsItem<span class="token punctuation">.</span><span class="token function">getShowComments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>showCommentsItem <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                                    <span class="token class-name">TopicsItemVO<span class="token punctuation">.</span>ShowCommentsItem</span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopicsItemVO<span class="token punctuation">.</span>ShowCommentsItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    item<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>showCommentsItem<span class="token punctuation">.</span><span class="token function">getOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token keyword">return</span> item<span class="token punctuation">;</span>
                                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                topicsItemVOList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>topicsItemVO<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> topicsItemVOList<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">comment</span><span class="token punctuation">(</span><span class="token keyword">long</span> topicId<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        zsxqApi<span class="token punctuation">.</span><span class="token function">comment</span><span class="token punctuation">(</span>topicId<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意，TopicsItemVO 对象来自于 domain 下领域中模型下的 VO 对象。因为是依赖倒置的，所以 infrastructure 引用的是 domain 并对其接口做实现处理。</li><li>并且，TopicsItemVO 只是需要获取自己需要的对象，还可以做简单的封装处理。这样可以衔接外部接口和内部逻辑中间的桥梁，不做强关联。</li></ul><h3 id="_4-任务调度" tabindex="-1"><a class="header-anchor" href="#_4-任务调度" aria-hidden="true">#</a> 4. 任务调度</h3><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.job.ReplyJob</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReplyJob</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">IAiReply</span> aiReply<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;0/10 * * * * ?&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;自动回帖任务开始执行...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aiReply<span class="token punctuation">.</span><span class="token function">doAiReply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>现在在 trigger 触发器层中的 job 下，就可以调用我们已经实现好的 AiReply 自动回帖功能了。</li><li>此外，注意 Application 中 <code>@EnableScheduling</code> 注解是开启的，否则任务不能执行。</li></ul><h2 id="三、系统测试" tabindex="-1"><a class="header-anchor" href="#三、系统测试" aria-hidden="true">#</a> 三、系统测试</h2><h3 id="_1-集成测试" tabindex="-1"><a class="header-anchor" href="#_1-集成测试" aria-hidden="true">#</a> 1. 集成测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">IAiReply</span> aiReply<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_IAiReply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        aiReply<span class="token punctuation">.</span><span class="token function">doAiReply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>通常情况下这种测试是最多的，写多少功能，就直接测试调用。如功能中所用到的；HTTP接口、RPC接口、数据库、Redis等资源，都会需要使用到。有时候也因为这样，所以不好测试。那么单元测试就出现了。</li></ul><h3 id="_2-单元测试" tabindex="-1"><a class="header-anchor" href="#_2-单元测试" aria-hidden="true">#</a> 2. 单元测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MockTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">IAiReply</span> aiReply<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@MockBean</span>
    <span class="token keyword">private</span> <span class="token class-name">IZSXQAdapter</span> izsxqAdapter<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_doAiReply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">JsonProcessingException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>izsxqAdapter<span class="token punctuation">.</span><span class="token function">queryTopics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicsItemVO</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token class-name">TopicsItemVO</span> topicsItemVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopicsItemVO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            topicsItemVO<span class="token punctuation">.</span><span class="token function">setTopicId</span><span class="token punctuation">(</span><span class="token number">10001L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            topicsItemVO<span class="token punctuation">.</span><span class="token function">setTalk</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;e type=\\&quot;mention\\&quot; uid=\\&quot;241858242255511\\&quot; title=\\&quot;%40%E5%B0%8F%E5%82%85%E5%93%A5\\&quot; /&gt; 提问 java 冒泡排序&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">add</span><span class="token punctuation">(</span>topicsItemVO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>izsxqAdapter<span class="token punctuation">.</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">anyLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">anyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        aiReply<span class="token punctuation">.</span><span class="token function">doAiReply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 等待；ChatGLM 异步回复</span>
        <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-mock-03.png" width="550px"></div><ul><li>在基于使用 SpringBoot 的启动，以及一部分功能需要走真实调用的情况下，另外一部分功能的接口可能没法调用时。可以使用这样的一种 MockBean 的方式进行处理，并对整条链路上调用到的接口方法进行 Mock 处理。\`Mockito.when(调用到的接口).thenReturn(返回的结果);</li><li>那么现在在测试方法中，做了2个Mock操作，把查询帖子和回复帖子，都给处理掉。也就是有了 Mock 以后，程序调用到这里，就直接走 Mock 里设置的结果信息了。</li></ul><h3 id="_3-功能测试" tabindex="-1"><a class="header-anchor" href="#_3-功能测试" aria-hidden="true">#</a> 3. 功能测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">MockitoJUnitRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZSXQAdapterTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Mock</span>
    <span class="token keyword">private</span> <span class="token class-name">IZSXQApi</span> mockZsxqApi<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@InjectMocks</span>
    <span class="token keyword">private</span> <span class="token class-name">ZSXQAdapter</span> zsxqAdapterUnderTest<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testQueryTopics</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// Setup</span>
        <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicsItemVO</span><span class="token punctuation">&gt;</span></span> expectedResult <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">TopicsItemVO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">topicId</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">talk</span><span class="token punctuation">(</span><span class="token string">&quot;talk&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">showCommentsItems</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">TopicsItemVO<span class="token punctuation">.</span>ShowCommentsItem</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Configure IZSXQApi.topics(...).</span>
        <span class="token keyword">final</span> <span class="token class-name">ResponseDTO</span> responseDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">RespData</span> respData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RespData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">TopicsItem</span> topicsItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopicsItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">ShowCommentsItem</span> showCommentsItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ShowCommentsItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Owner</span> owner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Owner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        owner<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        showCommentsItem<span class="token punctuation">.</span><span class="token function">setOwner</span><span class="token punctuation">(</span>owner<span class="token punctuation">)</span><span class="token punctuation">;</span>
        topicsItem<span class="token punctuation">.</span><span class="token function">setShowComments</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>showCommentsItem<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Talk</span> talk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Talk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        talk<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;talk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        topicsItem<span class="token punctuation">.</span><span class="token function">setTalk</span><span class="token punctuation">(</span>talk<span class="token punctuation">)</span><span class="token punctuation">;</span>
        topicsItem<span class="token punctuation">.</span><span class="token function">setTopicId</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        respData<span class="token punctuation">.</span><span class="token function">setTopics</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>topicsItem<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        responseDTO<span class="token punctuation">.</span><span class="token function">setRespData</span><span class="token punctuation">(</span>respData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">when</span><span class="token punctuation">(</span>mockZsxqApi<span class="token punctuation">.</span><span class="token function">topics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span>responseDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Run the test</span>
        <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicsItemVO</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> zsxqAdapterUnderTest<span class="token punctuation">.</span><span class="token function">queryTopics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Verify the results</span>
        <span class="token function">assertEquals</span><span class="token punctuation">(</span>expectedResult<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-mock-04.png" width="550px"></div><ul><li>除了前面两种测试，我们在开发功能的时候，还有场景测试；不启动 SpringBoot 但希望对实现的功能进行测试。</li><li>那么这里所体现的就是这样的测试，主要使用；<code>@RunWith(MockitoJUnitRunner.class)</code>、<code>@Mock</code>、<code>@InjectMocks</code> 相当于模拟了一个启动的过程，只不过都是 Mock 的信息。但你可以根据这些信息来调试你的接口。</li><li>提示：你可以安装 <code>IDEA Plugin Squaretest</code> 它能自动的帮你生成Mock单元测试。<code>这个插件是收费的，但还好不贵。</code></li></ul>`,35);function T(A,S){const a=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",d,[s("https://bugstack.cn"),t(a)])]),r,m,n("p",null,[s("本文的宗旨在于通过简单干净实践的方式教会读者，如何使用 "),n("a",v,[s("Mock"),t(a)]),s(" 进行工程的单元测试，以便于验证系统中的独立模块功能的健壮性。")]),b,n("p",null,[s("而单元测试的重点在于，对工程开发中的代码，进行流程中的单元化测试。如一整个下单流程中，需要调用各项外部的接口(风控、账户、营销、试算、支付)，才能完成整个下单流程。但在本地开发过程中，不太能将所有的外部接口都调试为开发环境可用状态，所有这个时候要做单元化测试，对于一些不能随时提供服务的接口进行 "),n("a",h,[s("Mock"),t(a)]),s(" 处理。")]),g,n("ul",null,[n("li",null,[s("xfg-dev-tech-mock："),n("a",f,[s("https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-mock"),t(a)])]),n("li",null,[s("chatglm-sdk-java："),n("a",w,[s("https://gitcode.net/KnowledgePlanet/road-map/chatglm-sdk-java"),t(a)])])]),y,I,n("p",null,[s("所以本章节带着这样一个案例背景的情况，小傅哥带着大家把 "),n("a",_,[s("《HTTP 框架使用和场景实战 - 结合ChatGLM自动回帖！》"),t(a)]),s(" 做一个小重构。来对 Mock 框架进行验证使用。")]),x])}const R=p(l,[["render",T],["__file","mock.html.vue"]]);export{R as default};
