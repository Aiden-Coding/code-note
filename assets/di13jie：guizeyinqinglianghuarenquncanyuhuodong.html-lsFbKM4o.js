import{_ as t,r as o,o as r,c as l,a as n,b as s,d as a,e as p}from"./app-3RcBQnkC.js";const c={},i=n("h1",{id:"第13节-规则引擎量化人群参与活动",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#第13节-规则引擎量化人群参与活动","aria-hidden":"true"},"#"),s(" 第13节：规则引擎量化人群参与活动")],-1),u=n("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！")],-1),_={href:"https://gitcode.net/KnowledgePlanet/Lottery/-/tree/211008_xfg_rule",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,"描述：使用组合模式搭建用于量化人群的规则引擎，用于用户参与活动之前，通过规则引擎过滤性别、年龄、首单消费、消费金额、忠实用户等各类身份来量化出具体可参与的抽奖活动。通过这样的方式控制运营成本和精细化运营。",-1),f=n("h2",{id:"零、优秀作业",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#零、优秀作业","aria-hidden":"true"},"#"),s(" 零、优秀作业")],-1),b={href:"https://t.zsxq.com/06fufyrzn",target:"_blank",rel:"noopener noreferrer"},g={href:"https://t.zsxq.com/06euz3zVj",target:"_blank",rel:"noopener noreferrer"},m={href:"https://t.zsxq.com/066iQZJYN",target:"_blank",rel:"noopener noreferrer"},y={href:"https://t.zsxq.com/06vRFEA6u",target:"_blank",rel:"noopener noreferrer"},x={href:"https://t.zsxq.com/06ayB6Iyv",target:"_blank",rel:"noopener noreferrer"},v={href:"https://t.zsxq.com/06ieyzNbQ",target:"_blank",rel:"noopener noreferrer"},q={href:"https://t.zsxq.com/067MJqnQ7",target:"_blank",rel:"noopener noreferrer"},E={href:"https://t.zsxq.com/06FqbyFM3",target:"_blank",rel:"noopener noreferrer"},w={href:"https://t.zsxq.com/07QjqzbIy",target:"_blank",rel:"noopener noreferrer"},z={href:"https://t.zsxq.com/0dCldrhBF",target:"_blank",rel:"noopener noreferrer"},L={href:"https://t.zsxq.com/0dhUPOvoS",target:"_blank",rel:"noopener noreferrer"},N={href:"https://t.zsxq.com/0dRKQE6r0",target:"_blank",rel:"noopener noreferrer"},T={href:"https://t.zsxq.com/0eS6ekcEo",target:"_blank",rel:"noopener noreferrer"},A={href:"https://t.zsxq.com/0edujSAGM",target:"_blank",rel:"noopener noreferrer"},M={href:"https://t.zsxq.com/0flIV5OeL",target:"_blank",rel:"noopener noreferrer"},U={href:"https://t.zsxq.com/10knSHqgD",target:"_blank",rel:"noopener noreferrer"},C={href:"https://t.zsxq.com/10ipUFkC2",target:"_blank",rel:"noopener noreferrer"},R={href:"https://t.zsxq.com/102mZrEzu",target:"_blank",rel:"noopener noreferrer"},I={href:"https://t.zsxq.com/11vxKGZor",target:"_blank",rel:"noopener noreferrer"},D={href:"https://t.zsxq.com/14AV22r8X",target:"_blank",rel:"noopener noreferrer"},F=p('<h2 id="一、开发日志" tabindex="-1"><a class="header-anchor" href="#一、开发日志" aria-hidden="true">#</a> 一、开发日志</h2><ul><li>增加规则引擎开发需要的相关的配置类表：rule_tree、rule_tree_node、rule_tree_node_line</li><li>运用组合模式搭建规则引擎领域服务，包括：logic 逻辑过滤器、engine 引擎执行器</li><li>修改 lottery-infrastructure 基础层中仓储实现类更为合适的的注解为 <code>@Repository</code> 包括： ActivityRepository、RuleRepository、StrategyRepository、UserTakeActivityRepository</li></ul><h2 id="二、库表设计" tabindex="-1"><a class="header-anchor" href="#二、库表设计" aria-hidden="true">#</a> 二、库表设计</h2><p>组合模式的特点就像是搭建出一棵二叉树，而库表中则需要把这样一颗二叉树存放进去，那么这里就需要包括：树根、树茎、子叶、果实。在具体的逻辑实现中则需要通过子叶判断走哪个树茎以及最终筛选出一个果实来。</p><p><strong>rule_tree</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>rule_tree<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;主键ID&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>tree_name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;规则树Id&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>tree_desc<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;规则树描述&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>tree_root_node_id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;规则树根ID&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">10002</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6);function O(B,S){const e=o("ExternalLinkIcon");return r(),l("div",null,[i,n("p",null,[s("作者：小傅哥 "),u,s("博客："),n("a",k,[s("https://bugstack.cn"),a(e)])]),d,n("ul",null,[n("li",null,[s("分支："),n("a",_,[s("211008_xfg_rule"),a(e)])]),h]),f,n("ul",null,[n("li",null,[n("a",b,[s("13-19节结构图梳理 @阿羲⭐️"),a(e)])]),n("li",null,[n("a",g,[s("规则引擎量化人群参与活动 @一点江南"),a(e)])]),n("li",null,[n("a",m,[s("规则引擎量化人群参与活动 @BerserkD"),a(e)])]),n("li",null,[n("a",y,[s("规则引擎量化量化人群参与活动 @杨杨得亿🙉"),a(e)])]),n("li",null,[n("a",x,[s("通过用户的年龄和性别对用户进行筛选 @Chin"),a(e)])]),n("li",null,[n("a",v,[s("规则引擎之量化人群参与抽奖 @Geroge Liu"),a(e)])]),n("li",null,[n("a",q,[s("规则引擎量化人群参与活动 @liuc"),a(e)])]),n("li",null,[n("a",E,[s("领域量化人群 @微风"),a(e)])]),n("li",null,[n("a",w,[s("通过注解配置执行SQL语句 @杨杨得亿🙉"),a(e)])]),n("li",null,[n("a",z,[s("打造这样一棵有规则限制的二叉树，筛选出合适的用户。@AD钙奶"),a(e)])]),n("li",null,[n("a",L,[s("规则引擎是什么，用在什么地方？@锚"),a(e)])]),n("li",null,[n("a",N,[s("本章节学习到了组合模式的设计模式，组合模式是什么，用在什么地方，优点是什么？ @星期一"),a(e)])]),n("li",null,[n("a",T,[s("组合模式在决策树规则引擎场景的使用，最主要是数据库表的设计 @learningJ"),a(e)])]),n("li",null,[n("a",A,[s("在对整个流程梳理下来时，才体会到了组合，并且对组合模式解决的问题有了更深的体会 @错否"),a(e)])]),n("li",null,[n("a",M,[s("规则引擎决策树学习整理 @爱幻想"),a(e)])]),n("li",null,[n("a",U,[s("通过组合模式实现量化人群的规则引擎，整个设计结构梳理 @炸毛的猫"),a(e)])]),n("li",null,[n("a",C,[s("活动领取、领域编排、规则引擎，功能图总结 @派大星来学习"),a(e)])]),n("li",null,[n("a",R,[s("本章节运用了组合模式，组合模式是依据树形结构来组合对象 @素质男孩"),a(e)])]),n("li",null,[n("a",I,[s("系统功能流程图汇总 @CCAT"),a(e)])]),n("li",null,[n("a",D,[s("规则引擎这一章节有一些懵，画一个时序图豁然开朗 @1"),a(e)])])]),F])}const Q=t(c,[["render",O],["__file","di13jie：guizeyinqinglianghuarenquncanyuhuodong.html.vue"]]);export{Q as default};
