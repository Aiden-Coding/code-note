const e=JSON.parse('{"key":"v-f4b25a86","path":"/CodeGuide/md/spring/develop-spring/2021-06-17-di7zhang：suoxiangpimi，shixianyingyongshangxiawen，zidongshibie、ziyuanjiazai、kuozhanjizhi.html","title":"第07章：实现应用上下文","lang":"zh-CN","frontmatter":{"category":"spring","title":"第07章：实现应用上下文","tagline":"by 小傅哥","tag":["java"],"excerpt":"你这代码，可不能写死了呀！说到不把代码写死，就是因为我们需要继续在手写 Spring 框架中继续扩展新的功能，如一个Bean的定义和实例化的过程前后，是否可以满足我们进行自定义扩展，对Bean对象执行一些修改、增强、记录等操作呢？ 这个过程基本就是你在使用 Spring 容器框架时候做的一些中间件扩展开发。","lock":"need"},"headers":[{"level":2,"title":"一、前言","slug":"一、前言","link":"#一、前言","children":[]},{"level":2,"title":"二、目标","slug":"二、目标","link":"#二、目标","children":[]},{"level":2,"title":"三、设计","slug":"三、设计","link":"#三、设计","children":[]},{"level":2,"title":"四、实现","slug":"四、实现","link":"#四、实现","children":[{"level":3,"title":"1. 工程结构","slug":"_1-工程结构","link":"#_1-工程结构","children":[]},{"level":3,"title":"2. 定义 BeanFactoryPostProcessor","slug":"_2-定义-beanfactorypostprocessor","link":"#_2-定义-beanfactorypostprocessor","children":[]},{"level":3,"title":"3. 定义 BeanPostProcessor","slug":"_3-定义-beanpostprocessor","link":"#_3-定义-beanpostprocessor","children":[]},{"level":3,"title":"4. 定义上下文接口","slug":"_4-定义上下文接口","link":"#_4-定义上下文接口","children":[]},{"level":3,"title":"5. 应用上下文抽象类实现","slug":"_5-应用上下文抽象类实现","link":"#_5-应用上下文抽象类实现","children":[]},{"level":3,"title":"6. 获取Bean工厂和加载资源","slug":"_6-获取bean工厂和加载资源","link":"#_6-获取bean工厂和加载资源","children":[]},{"level":3,"title":"7. 上下文中对配置信息的加载","slug":"_7-上下文中对配置信息的加载","link":"#_7-上下文中对配置信息的加载","children":[]},{"level":3,"title":"8. 应用上下文实现类(ClassPathXmlApplicationContext)","slug":"_8-应用上下文实现类-classpathxmlapplicationcontext","link":"#_8-应用上下文实现类-classpathxmlapplicationcontext","children":[]},{"level":3,"title":"9. 在Bean创建时完成前置和后置处理","slug":"_9-在bean创建时完成前置和后置处理","link":"#_9-在bean创建时完成前置和后置处理","children":[]}]},{"level":2,"title":"五、测试","slug":"五、测试","link":"#五、测试","children":[{"level":3,"title":"1. 事先准备","slug":"_1-事先准备","link":"#_1-事先准备","children":[]},{"level":3,"title":"2. 实现 BeanPostProcessor 和 BeanFactoryPostProcessor","slug":"_2-实现-beanpostprocessor-和-beanfactorypostprocessor","link":"#_2-实现-beanpostprocessor-和-beanfactorypostprocessor","children":[]},{"level":3,"title":"3. 配置文件","slug":"_3-配置文件","link":"#_3-配置文件","children":[]},{"level":3,"title":"4. 不用应用上下文","slug":"_4-不用应用上下文","link":"#_4-不用应用上下文","children":[]},{"level":3,"title":"5. 使用应用上下文","slug":"_5-使用应用上下文","link":"#_5-使用应用上下文","children":[]}]},{"level":2,"title":"六、总结","slug":"六、总结","link":"#六、总结","children":[]},{"level":2,"title":"七、优秀作业","slug":"七、优秀作业","link":"#七、优秀作业","children":[]}],"git":{"createdTime":1704301416000,"updatedTime":1704373598000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":2}]},"filePathRelative":"CodeGuide/md/spring/develop-spring/2021-06-17-第7章：所向披靡，实现应用上下文，自动识别、资源加载、扩展机制.md"}');export{e as data};
