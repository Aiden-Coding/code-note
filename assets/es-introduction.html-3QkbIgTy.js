import{_ as e,o as a,c as s,e as n}from"./app-3RcBQnkC.js";const t="/code-note/assets/es-cluster-0-28LGDmG0.png",r={},d=n(`<h1 id="lucene-和-es-的前世今生" tabindex="-1"><a class="header-anchor" href="#lucene-和-es-的前世今生" aria-hidden="true">#</a> Lucene 和 ES 的前世今生</h1><p>Lucene 是最先进、功能最强大的搜索库。如果直接基于 Lucene 开发，非常复杂，即便写一些简单的功能，也要写大量的 Java 代码，需要深入理解原理。</p><p>ElasticSearch 基于 Lucene，隐藏了 lucene 的复杂性，提供了简单易用的 RESTful api / Java api 接口（另外还有其他语言的 api 接口）。</p><ul><li>分布式的文档存储引擎</li><li>分布式的搜索引擎和分析引擎</li><li>分布式，支持 PB 级数据</li></ul><h2 id="es-的核心概念" tabindex="-1"><a class="header-anchor" href="#es-的核心概念" aria-hidden="true">#</a> ES 的核心概念</h2><h3 id="near-realtime" tabindex="-1"><a class="header-anchor" href="#near-realtime" aria-hidden="true">#</a> Near Realtime</h3><p>近实时，有两层意思：</p><ul><li>从写入数据到数据可以被搜索到有一个小延迟（大概是 1s）</li><li>基于 ES 执行搜索和分析可以达到秒级</li></ul><h3 id="cluster-集群" tabindex="-1"><a class="header-anchor" href="#cluster-集群" aria-hidden="true">#</a> Cluster 集群</h3><p>集群包含多个节点，每个节点属于哪个集群都是通过一个配置来决定的，对于中小型应用来说，刚开始一个集群就一个节点很正常。</p><h3 id="node-节点" tabindex="-1"><a class="header-anchor" href="#node-节点" aria-hidden="true">#</a> Node 节点</h3><p>Node 是集群中的一个节点，节点也有一个名称，默认是随机分配的。默认节点会去加入一个名称为 <code>elasticsearch</code> 的集群。如果直接启动一堆节点，那么它们会自动组成一个 elasticsearch 集群，当然一个节点也可以组成 elasticsearch 集群。</p><h3 id="document-field" tabindex="-1"><a class="header-anchor" href="#document-field" aria-hidden="true">#</a> Document &amp; field</h3><p>文档是 ES 中最小的数据单元，一个 document 可以是一条客户数据、一条商品分类数据、一条订单数据，通常用 json 数据结构来表示。每个 index 下的 type，都可以存储多条 document。一个 document 里面有多个 field，每个 field 就是一个数据字段。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;product_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;product_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;iPhone X&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;product_desc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;苹果手机&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;category_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;category_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;电子产品&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="index" tabindex="-1"><a class="header-anchor" href="#index" aria-hidden="true">#</a> Index</h3><p>索引包含了一堆有相似结构的文档数据，比如商品索引。一个索引包含很多 document，一个索引就代表了一类相似或者相同的 document。</p><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> Type</h3><p>类型，每个索引里可以有一个或者多个 type，type 是 index 的一个逻辑分类，比如商品 index 下有多个 type：日化商品 type、电器商品 type、生鲜商品 type。每个 type 下的 document 的 field 可能不太一样。</p><h3 id="shard" tabindex="-1"><a class="header-anchor" href="#shard" aria-hidden="true">#</a> shard</h3><p>单台机器无法存储大量数据，ES 可以将一个索引中的数据切分为多个 shard，分布在多台服务器上存储。有了 shard 就可以横向扩展，存储更多数据，让搜索和分析等操作分布到多台服务器上去执行，提升吞吐量和性能。每个 shard 都是一个 lucene index。</p><h3 id="replica" tabindex="-1"><a class="header-anchor" href="#replica" aria-hidden="true">#</a> replica</h3><p>任何一个服务器随时可能故障或宕机，此时 shard 可能就会丢失，因此可以为每个 shard 创建多个 replica 副本。replica 可以在 shard 故障时提供备用服务，保证数据不丢失，多个 replica 还可以提升搜索操作的吞吐量和性能。primary shard（建立索引时一次设置，不能修改，默认 5 个），replica shard（随时修改数量，默认 1 个），默认每个索引 10 个 shard，5 个 primary shard，5 个 replica shard，最小的高可用配置，是 2 台服务器。</p><p>这么说吧，shard 分为 primary shard 和 replica shard。而 primary shard 一般简称为 shard，而 replica shard 一般简称为 replica。</p><p><img src="`+t+'" alt="es-cluster-0"></p><h2 id="es-核心概念-vs-db-核心概念" tabindex="-1"><a class="header-anchor" href="#es-核心概念-vs-db-核心概念" aria-hidden="true">#</a> ES 核心概念 vs. DB 核心概念</h2><table><thead><tr><th>ES</th><th>DB</th></tr></thead><tbody><tr><td>index</td><td>数据库</td></tr><tr><td>type</td><td>数据表</td></tr><tr><td>document</td><td>一行数据</td></tr></tbody></table><p>以上是一个简单的类比。</p>',28),i=[d];function c(p,o){return a(),s("div",null,i)}const h=e(r,[["render",c],["__file","es-introduction.html.vue"]]);export{h as default};
