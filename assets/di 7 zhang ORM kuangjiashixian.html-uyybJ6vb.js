import{_ as n,r,o,c as i,a as e,b as a,d as c,e as s}from"./app-3RcBQnkC.js";const l={},d=e("h1",{id:"第-7-章-orm-框架实现",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#第-7-章-orm-框架实现","aria-hidden":"true"},"#"),a(" 第 7 章 ORM 框架实现")],-1),h=e("br",null,null,-1),p={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},_=s('<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！</p></blockquote><h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>中间件可以为上层应用，屏蔽底层异构操作</code></p><p>在我们的生活中有很多一站式服务为用户提供便捷的服务，如；</p><ul><li>装修公司，解决，设计、人工、材料、品牌、搭配</li><li>婚庆公司，解决，酒店、婚车、行程、司仪、布景</li><li>旅游公司，解决，路线、行程、吃住、门票、照片</li></ul><p>而这些所有的服务都在以完成屏蔽底层异构，让用户有一个简单、单一、容易的方式来使用这些服务和功能。而这些方式在我们代码开发中，也可以映射在中间件的功能里，这些都是在解决底层的差异，提供统一的服务。</p><h2 id="二、需求背景" tabindex="-1"><a class="header-anchor" href="#二、需求背景" aria-hidden="true">#</a> 二、需求背景</h2><p>在我们初学 JAVA 时，都接使用过 JDBC 的方式进行数据库连接操作，随着后续学习的深入，陆续接触到了 IBatis、MyBatis、Hibernate，这些都是 ORM(Object Relational Mapping) 组件的具体产品实现。</p><p>ORM 对象关系映射，是一种程序设计技术，用于实现面向对象编程语言里不同类型系统的数据之间的转换，也让我们可以更方便的使用数据库。</p><p>那么，类似于 MyBatis 这样的 ORM 框架是如何实现的呢？本章节我们就来以实现一个 ORM 框架为目标，看看该怎么设计和实现。</p><p><em>另外关于 ORM 框架的实现，只是模拟开发一个类似 MyBatis SpringBoot Starter 的第一步，后续我们会逐步实现这些功能</em></p>',11);function u(b,f){const t=r("ExternalLinkIcon");return o(),i("div",null,[d,e("p",null,[a("作者：小傅哥 "),h,a("博客："),e("a",p,[a("https://bugstack.cn"),c(t)])]),_])}const M=n(l,[["render",u],["__file","di 7 zhang ORM kuangjiashixian.html.vue"]]);export{M as default};
