import{_ as o,r as c,o as r,c as l,a as e,b as t,d as n,e as s}from"./app-3RcBQnkC.js";const i={},h=e("h1",{id:"《chatgpt-微服务应用体系构建》-chatgpt-web-第5节-对话框消息",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#《chatgpt-微服务应用体系构建》-chatgpt-web-第5节-对话框消息","aria-hidden":"true"},"#"),t(" 《ChatGPT 微服务应用体系构建》 - chatgpt-web 第5节：对话框消息")],-1),d=e("br",null,null,-1),_={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},u=e("blockquote",null,[e("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),p=e("li",null,[e("strong",null,"本章难度"),t("：★★★☆☆")],-1),g=e("li",null,[e("strong",null,"本章重点"),t("：围绕dialog对话消息实现为主，实现对应的；子路由设置、页面跳转、消息透传、界面设计和实现。")],-1),f=e("strong",null,"课程视频",-1),x={href:"https://t.zsxq.com/0f0rqVfX8",target:"_blank",rel:"noopener noreferrer"},b=s('<h2 id="一、本章诉求" tabindex="-1"><a class="header-anchor" href="#一、本章诉求" aria-hidden="true">#</a> 一、本章诉求</h2><p>在已经有了对话框列表以后，我们需要实现对话框消息面板的内容。也就是当我们点击对话框的列表元素以后，可以对应在右侧有一个对话框消息，同时再增加一个消息的输入。当然目前所有的这些操作仍不会与服务端有关联，都是在前端进行操作处理。</p><p>在学习本章节之前，你可以先思考下你的对话框消息是怎么和对话框元素关联上的，怎么在点击的时候就能切换到对应的聊天对话框消息上去。以目标结果为导向，带着问题驱动学习会更加明确的让你知道自己要完成什么和学习什么。</p><h2 id="二、目标效果" tabindex="-1"><a class="header-anchor" href="#二、目标效果" aria-hidden="true">#</a> 二、目标效果</h2><p>在有了对话框消息的体现后，整个页面又完善了不少；</p><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-web-05-01.png?raw=true" width="950px"></div><ul><li>在测试验证的时候，你可以点击绿色的按钮进行创建对话。每一个对话会有一个对应的 ID 这个 ID 来串联对话框消息。当点击各个对话列表的元素，如【心里咨询、面试官】那么就会切换到对应的对话消息上。</li><li>右侧工程部分，以<code>dialog</code>文件下内容为主，用来实现整个对话框消息部分。同时因为这里有页面的切换，所以在 <code>home.tsx</code>、<code>chat.tsx</code> 也有对应少量代码的改动。</li></ul>',7);function m(k,w){const a=c("ExternalLinkIcon");return r(),l("div",null,[h,e("p",null,[t("作者：小傅哥 "),d,t("博客："),e("a",_,[t("https://bugstack.cn"),n(a)])]),u,e("ul",null,[p,g,e("li",null,[f,t("："),e("a",x,[t("https://t.zsxq.com/0f0rqVfX8"),n(a)])])]),b])}const q=o(i,[["render",m],["__file","di5jie：duihuakuangxiaoxi.html.vue"]]);export{q as default};
