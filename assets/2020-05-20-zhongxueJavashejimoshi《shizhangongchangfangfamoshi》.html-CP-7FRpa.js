import{_ as o,r as e,o as c,c as u,a as n,b as s,d as t,e as p}from"./app-3RcBQnkC.js";const l={},i=n("h1",{id:"重学-java-设计模式-实战工厂方法模式「多种类型商品不同接口-统一发奖服务搭建场景」",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#重学-java-设计模式-实战工厂方法模式「多种类型商品不同接口-统一发奖服务搭建场景」","aria-hidden":"true"},"#"),s(" 重学 Java 设计模式：实战工厂方法模式「多种类型商品不同接口，统一发奖服务搭建场景」")],-1),k=n("br",null,null,-1),r={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=767227209&bvid=BV1ar4y1B7os&cid=548575671&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),v=p(`<h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>好看的代码千篇一律，恶心的程序升职加薪。</code></p><p>该说不说几乎是程序员就都知道或者了解设计模式，但大部分小伙伴写代码总是习惯于一把梭。无论多少业务逻辑就一个类几千行，这样的开发也可以归纳为三步；定义属性、创建方法、调用展示，Done！只不过开发一时爽，重构火葬场。</p><p>好的代码不只为了完成现有功能，也会考虑后续扩展。在结构设计上松耦合易读易扩展，在领域实现上高内聚不对外暴漏实现细节不被外部干扰。而这就有点像家里三居(MVC)室、四居(DDD)室的装修，你不会允许几十万的房子把走线水管裸漏在外面，也不会允许把马桶放到厨房，炉灶安装到卫生间。</p><p><strong>谁发明了设计模式？</strong> 设计模式的概念最早是由 <code>克里斯托佛·亚历山大</code> 在其著作 <code>《建筑模式语言》</code> 中首次提出的。 本书介绍了城市设计的 “语言”，提供了253个描述城镇、邻里、住宅、花园、房间及西部构造的模式， 而此类 “语言” 的基本单元就是模式。后来，<code>埃里希·伽玛</code>、 <code>约翰·弗利赛德斯</code>、 <code>拉尔夫·约翰逊</code> 和 <code>理查德·赫尔姆</code> 这四位作者接受了模式的概念。 1994 年， 他们出版了 <code>《设计模式： 可复用面向对象软件的基础》</code> 一书， 将设计模式的概念应用到程序开发领域中。</p><p>其实有一部分人并没有仔细阅读过设计模式的相关书籍和资料，但依旧可以编写出优秀的代码。这主要是由于在经过众多项目的锤炼和对程序设计的不断追求，从而在多年编程历程上提炼出来的心得体会。而这份经验最终会与设计模式提到的内容几乎一致，同样会要求高内聚、低耦合、可扩展、可复用。你可能也遇到类似的经历，在学习一些框架的源码时，发现它里的某些设计和你在做开发时一样。</p><p><strong>我怎么学不会设计模式？</strong> 钱也花了，书也买了。代码还是一坨一坨的！设计模式是由多年的经验提炼出来开发指导思想。就像我告诉你自行车怎么骑、汽车怎么开，但只要你没跑过几千公里，你能记住的只是理论，想上道依旧很慌！</p><p><strong>所以</strong>，本设计模式专题系列开始，会带着你使用设计模式的思想去优化代码。从而学习设计模式的心得并融入给自己。当然这里还需要多加练习，一定是<em>人车合一</em>，才能站在设计模式的基础上构建出更加合理的代码。</p><h2 id="二、开发环境" tabindex="-1"><a class="header-anchor" href="#二、开发环境" aria-hidden="true">#</a> 二、开发环境</h2><ol><li>JDK 1.8</li><li>Idea + Maven</li><li>涉及工程三个，可以通过关注<strong>公众号</strong>：<code>bugstack虫洞栈</code>，回复<code>源码下载</code>获取。<em>你会获得一个连接打开后的列表中编号<code>18</code>：<code>itstack-demo-design</code></em></li></ol><table><thead><tr><th>工程</th><th>描述</th></tr></thead><tbody><tr><td>itstack-demo-design-1-00</td><td>场景模拟工程，用于提供三组不同奖品的发放接口</td></tr><tr><td>itstack-demo-design-1-01</td><td>使用一坨代码实现业务需求，也是对ifelse的使用</td></tr><tr><td>itstack-demo-design-1-02</td><td>通过设计模式优化改造代码，产生对比性从而学习</td></tr></tbody></table><pre><code>- 1-00，1 代表着第一个设计模式，工厂方法模式
- 1-00，00 代表模拟的场景
- 1-01，01 代表第一种实现方案，后续 02 03 以此类推
</code></pre><h2 id="三、工厂方法模式介绍" tabindex="-1"><a class="header-anchor" href="#三、工厂方法模式介绍" aria-hidden="true">#</a> 三、工厂方法模式介绍</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-1-01.png" alt="工厂方法模式，图片来自 refactoringguru.cn"></p>`,14),g={href:"https://refactoringguru.cn/design-patterns/factory-method",target:"_blank",rel:"noopener noreferrer"},b=p(`<p>工厂模式又称工厂方法模式，是一种创建型设计模式，其在父类中提供一个创建对象的方法， 允许子类决定实例化对象的类型。</p><p>这种设计模式也是 Java 开发中最常见的一种模式，它的主要意图是定义一个创建对象的接口，让其子类自己决定实例化哪一个工厂类，工厂模式使其创建过程延迟到子类进行。</p><p>简单说就是为了提供代码结构的扩展性，屏蔽每一个功能类中的具体实现逻辑。让外部可以更加简单的只是知道调用即可，同时，这也是去掉众多<code>ifelse</code>的方式。当然这可能也有一些缺点，比如需要实现的类非常多，如何去维护，怎样减低开发成本。但这些问题都可以在后续的设计模式结合使用中，逐步降低。</p><h2 id="四、模拟发奖多种商品" tabindex="-1"><a class="header-anchor" href="#四、模拟发奖多种商品" aria-hidden="true">#</a> 四、模拟发奖多种商品</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-1-02.png" alt="模拟发奖多种商品，bugstack虫洞栈"></p><p>为了可以让整个学习的案例更加贴近实际开发，这里模拟互联网中在营销场景下的业务。由于营销场景的复杂、多变、临时的特性，它所需要的设计需要更加深入，否则会经常面临各种紧急CRUD操作，从而让代码结构混乱不堪，难以维护。</p><p>在营销场景中经常会有某个用户做了一些操作；打卡、分享、留言、邀请注册等等，进行返利积分，最后通过积分在兑换商品，从而促活和拉新。</p><p>那么在这里我们模拟积分兑换中的发放多种类型商品，假如现在我们有如下三种类型的商品接口；</p><table><thead><tr><th>序号</th><th>类型</th><th>接口</th></tr></thead><tbody><tr><td>1</td><td>优惠券</td><td><code>CouponResult sendCoupon(String uId, String couponNumber, String uuid)</code></td></tr><tr><td>2</td><td>实物商品</td><td><code>Boolean deliverGoods(DeliverReq req)</code></td></tr><tr><td>3</td><td>第三方爱奇艺兑换卡</td><td><code>void grantToken(String bindMobileNumber, String cardId)</code></td></tr></tbody></table><p><strong>从以上接口来看有如下信息：</strong></p><ul><li>三个接口返回类型不同，有对象类型、布尔类型、还有一个空类型。</li><li>入参不同，发放优惠券需要仿重、兑换卡需要卡ID、实物商品需要发货位置(对象中含有)。</li><li>另外可能会随着后续的业务的发展，会新增其他种商品类型。因为你所有的开发需求都是随着业务对市场的拓展而带来的。</li></ul><h2 id="五、用一坨坨代码实现" tabindex="-1"><a class="header-anchor" href="#五、用一坨坨代码实现" aria-hidden="true">#</a> 五、用一坨坨代码实现</h2><p>如果不考虑任何扩展性，只为了尽快满足需求，那么对这么几种奖励发放只需使用ifelse语句判断，调用不同的接口即可满足需求。可能这也是一些刚入门编程的小伙伴，常用的方式。接下来我们就先按照这样的方式来实现业务的需求。</p><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">01</span>
└── src
    ├── main
    │   └── java
    │       └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
    │           ├── <span class="token class-name">AwardReq</span><span class="token punctuation">.</span>java
    │           ├── <span class="token class-name">AwardRes</span><span class="token punctuation">.</span>java
    │           └── <span class="token class-name">PrizeController</span><span class="token punctuation">.</span>java 
    └── test
         └── java
             └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test
                 └── <span class="token class-name">ApiTest</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>工程结构上非常简单，一个入参对象 <code>AwardReq</code> 、一个出参对象 <code>AwardRes</code>，以及一个接口类 <code>PrizeController</code></li></ul><h3 id="_2-ifelse实现需求" tabindex="-1"><a class="header-anchor" href="#_2-ifelse实现需求" aria-hidden="true">#</a> 2. ifelse实现需求</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PrizeController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">PrizeController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AwardRes</span> <span class="token function">awardToUser</span><span class="token punctuation">(</span><span class="token class-name">AwardReq</span> req<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> reqJson <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AwardRes</span> awardRes <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;奖品发放开始{}。req:{}&quot;</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reqJson<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 按照不同类型方法商品[1优惠券、2实物商品、3第三方兑换卡(爱奇艺)]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getAwardType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">CouponService</span> couponService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CouponService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">CouponResult</span> couponResult <span class="token operator">=</span> couponService<span class="token punctuation">.</span><span class="token function">sendCoupon</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getAwardNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getBizId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>couponResult<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    awardRes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AwardRes</span><span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;发放成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    awardRes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AwardRes</span><span class="token punctuation">(</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> couponResult<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getAwardType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">GoodsService</span> goodsService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GoodsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">DeliverReq</span> deliverReq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeliverReq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                deliverReq<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token function">queryUserName</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                deliverReq<span class="token punctuation">.</span><span class="token function">setUserPhone</span><span class="token punctuation">(</span><span class="token function">queryUserPhoneNumber</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                deliverReq<span class="token punctuation">.</span><span class="token function">setSku</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getAwardNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                deliverReq<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getBizId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                deliverReq<span class="token punctuation">.</span><span class="token function">setConsigneeUserName</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getExtMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                deliverReq<span class="token punctuation">.</span><span class="token function">setConsigneeUserPhone</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getExtMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserPhone&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                deliverReq<span class="token punctuation">.</span><span class="token function">setConsigneeUserAddress</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getExtMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserAddress&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Boolean</span> isSuccess <span class="token operator">=</span> goodsService<span class="token punctuation">.</span><span class="token function">deliverGoods</span><span class="token punctuation">(</span>deliverReq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>isSuccess<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    awardRes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AwardRes</span><span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;发放成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    awardRes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AwardRes</span><span class="token punctuation">(</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;发放失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getAwardType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> bindMobileNumber <span class="token operator">=</span> <span class="token function">queryUserPhoneNumber</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">IQiYiCardService</span> iQiYiCardService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IQiYiCardService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                iQiYiCardService<span class="token punctuation">.</span><span class="token function">grantToken</span><span class="token punctuation">(</span>bindMobileNumber<span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getAwardNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                awardRes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AwardRes</span><span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;发放成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;奖品发放完成{}。&quot;</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;奖品发放失败{}。req:{}&quot;</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reqJson<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            awardRes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AwardRes</span><span class="token punctuation">(</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> awardRes<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">queryUserName</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;花花&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">queryUserPhoneNumber</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;15200101232&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如上就是使用 <code>ifelse</code> 非常直接的实现出来业务需求的一坨代码，如果仅从业务角度看，研发如期甚至提前实现了功能。</li><li>那这样的代码目前来看并不会有什么问题，但如果在经过几次的迭代和拓展，接手这段代码的研发将十分痛苦。重构成本高需要理清之前每一个接口的使用，测试回归验证时间长，需要全部验证一次。这也就是很多人并不愿意接手别人的代码，如果接手了又被压榨开发时间。那么可想而知这样的 <code>ifelse</code> 还会继续增加。</li></ul><h3 id="_3-测试验证" tabindex="-1"><a class="header-anchor" href="#_3-测试验证" aria-hidden="true">#</a> 3. 测试验证</h3><p>写一个单元测试来验证上面编写的接口方式，养成单元测试的好习惯会为你增强代码质量。</p><p><strong>编写测试类：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_awardToUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">PrizeController</span> prizeController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrizeController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n模拟发放优惠券测试\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 模拟发放优惠券测试</span>
    <span class="token class-name">AwardReq</span> req01 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AwardReq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req01<span class="token punctuation">.</span><span class="token function">setuId</span><span class="token punctuation">(</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req01<span class="token punctuation">.</span><span class="token function">setAwardType</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req01<span class="token punctuation">.</span><span class="token function">setAwardNumber</span><span class="token punctuation">(</span><span class="token string">&quot;EGM1023938910232121323432&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req01<span class="token punctuation">.</span><span class="token function">setBizId</span><span class="token punctuation">(</span><span class="token string">&quot;791098764902132&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">AwardRes</span> awardRes01 <span class="token operator">=</span> prizeController<span class="token punctuation">.</span><span class="token function">awardToUser</span><span class="token punctuation">(</span>req01<span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;请求参数：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>req01<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>awardRes01<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n模拟方法实物商品\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 模拟方法实物商品</span>
    <span class="token class-name">AwardReq</span> req02 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AwardReq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req02<span class="token punctuation">.</span><span class="token function">setuId</span><span class="token punctuation">(</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req02<span class="token punctuation">.</span><span class="token function">setAwardType</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req02<span class="token punctuation">.</span><span class="token function">setAwardNumber</span><span class="token punctuation">(</span><span class="token string">&quot;9820198721311&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req02<span class="token punctuation">.</span><span class="token function">setBizId</span><span class="token punctuation">(</span><span class="token string">&quot;1023000020112221113&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> extMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    extMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;谢飞机&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    extMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserPhone&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;15200292123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    extMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserAddress&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;吉林省.长春市.双阳区.XX街道.檀溪苑小区.#18-2109&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req02<span class="token punctuation">.</span><span class="token function">setExtMap</span><span class="token punctuation">(</span>extMap<span class="token punctuation">)</span><span class="token punctuation">;</span>

    commodityService_2<span class="token punctuation">.</span><span class="token function">sendCommodity</span><span class="token punctuation">(</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;9820198721311&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1023000020112221113&quot;</span><span class="token punctuation">,</span> extMap<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">AwardRes</span> awardRes02 <span class="token operator">=</span> prizeController<span class="token punctuation">.</span><span class="token function">awardToUser</span><span class="token punctuation">(</span>req02<span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;请求参数：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>req02<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>awardRes02<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n第三方兑换卡(爱奇艺)\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">AwardReq</span> req03 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AwardReq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req03<span class="token punctuation">.</span><span class="token function">setuId</span><span class="token punctuation">(</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req03<span class="token punctuation">.</span><span class="token function">setAwardType</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req03<span class="token punctuation">.</span><span class="token function">setAwardNumber</span><span class="token punctuation">(</span><span class="token string">&quot;AQY1xjkUodl8LO975GdfrYUio&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">AwardRes</span> awardRes03 <span class="token operator">=</span> prizeController<span class="token punctuation">.</span><span class="token function">awardToUser</span><span class="token punctuation">(</span>req03<span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;请求参数：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>req03<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>awardRes03<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结果：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>模拟发放优惠券测试

<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.668</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span></span>PrizeController</span> <span class="token operator">-</span> 奖品发放开始<span class="token number">10001</span>。req<span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;awardNumber&quot;</span><span class="token operator">:</span><span class="token string">&quot;EGM1023938910232121323432&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;awardType&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;bizId&quot;</span><span class="token operator">:</span><span class="token string">&quot;791098764902132&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;uId&quot;</span><span class="token operator">:</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">}</span>
模拟发放优惠券一张：<span class="token number">10001</span><span class="token punctuation">,</span><span class="token constant">EGM1023938910232121323432</span><span class="token punctuation">,</span><span class="token number">791098764902132</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.671</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span></span>PrizeController</span> <span class="token operator">-</span> 奖品发放完成<span class="token number">10001</span>。
<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.673</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 请求参数：<span class="token punctuation">{</span><span class="token string">&quot;uId&quot;</span><span class="token operator">:</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;bizId&quot;</span><span class="token operator">:</span><span class="token string">&quot;791098764902132&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;awardNumber&quot;</span><span class="token operator">:</span><span class="token string">&quot;EGM1023938910232121323432&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;awardType&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.674</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;发放成功&quot;</span><span class="token punctuation">}</span>

模拟方法实物商品

<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.675</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span></span>PrizeController</span> <span class="token operator">-</span> 奖品发放开始<span class="token number">10001</span>。req<span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;awardNumber&quot;</span><span class="token operator">:</span><span class="token string">&quot;9820198721311&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;awardType&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;bizId&quot;</span><span class="token operator">:</span><span class="token string">&quot;1023000020112221113&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;extMap&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;consigneeUserName&quot;</span><span class="token operator">:</span><span class="token string">&quot;谢飞机&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;consigneeUserPhone&quot;</span><span class="token operator">:</span><span class="token string">&quot;15200292123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;consigneeUserAddress&quot;</span><span class="token operator">:</span><span class="token string">&quot;吉林省.长春市.双阳区.XX街道.檀溪苑小区.#18-2109&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;uId&quot;</span><span class="token operator">:</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">}</span>
模拟发货实物商品一个：<span class="token punctuation">{</span><span class="token string">&quot;consigneeUserAddress&quot;</span><span class="token operator">:</span><span class="token string">&quot;吉林省.长春市.双阳区.XX街道.檀溪苑小区.#18-2109&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;consigneeUserName&quot;</span><span class="token operator">:</span><span class="token string">&quot;谢飞机&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;consigneeUserPhone&quot;</span><span class="token operator">:</span><span class="token string">&quot;15200292123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;orderId&quot;</span><span class="token operator">:</span><span class="token string">&quot;1023000020112221113&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;sku&quot;</span><span class="token operator">:</span><span class="token string">&quot;9820198721311&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;userName&quot;</span><span class="token operator">:</span><span class="token string">&quot;花花&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;userPhone&quot;</span><span class="token operator">:</span><span class="token string">&quot;15200101232&quot;</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.677</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span></span>PrizeController</span> <span class="token operator">-</span> 奖品发放完成<span class="token number">10001</span>。
<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.677</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 请求参数：<span class="token punctuation">{</span><span class="token string">&quot;extMap&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;consigneeUserName&quot;</span><span class="token operator">:</span><span class="token string">&quot;谢飞机&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;consigneeUserAddress&quot;</span><span class="token operator">:</span><span class="token string">&quot;吉林省.长春市.双阳区.XX街道.檀溪苑小区.#18-2109&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;consigneeUserPhone&quot;</span><span class="token operator">:</span><span class="token string">&quot;15200292123&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;uId&quot;</span><span class="token operator">:</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;bizId&quot;</span><span class="token operator">:</span><span class="token string">&quot;1023000020112221113&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;awardNumber&quot;</span><span class="token operator">:</span><span class="token string">&quot;9820198721311&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;awardType&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.677</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;发放成功&quot;</span><span class="token punctuation">}</span>

第三方兑换卡<span class="token punctuation">(</span>爱奇艺<span class="token punctuation">)</span>

<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.678</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span></span>PrizeController</span> <span class="token operator">-</span> 奖品发放开始<span class="token number">10001</span>。req<span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;awardNumber&quot;</span><span class="token operator">:</span><span class="token string">&quot;AQY1xjkUodl8LO975GdfrYUio&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;awardType&quot;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;uId&quot;</span><span class="token operator">:</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">}</span>
模拟发放爱奇艺会员卡一张：<span class="token number">15200101232</span>，<span class="token class-name">AQY1xjkUodl8LO975GdfrYUio</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.678</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span></span>PrizeController</span> <span class="token operator">-</span> 奖品发放完成<span class="token number">10001</span>。
<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.678</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 请求参数：<span class="token punctuation">{</span><span class="token string">&quot;uId&quot;</span><span class="token operator">:</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;awardNumber&quot;</span><span class="token operator">:</span><span class="token string">&quot;AQY1xjkUodl8LO975GdfrYUio&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;awardType&quot;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">55.678</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;发放成功&quot;</span><span class="token punctuation">}</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行结果正常，满足当前所有业务产品需求，写的还很快。但！实在难以为维护！</li></ul><h2 id="六、工厂模式优化代码" tabindex="-1"><a class="header-anchor" href="#六、工厂模式优化代码" aria-hidden="true">#</a> 六、工厂模式优化代码</h2><p>接下来使用工厂方法模式来进行代码优化，也算是一次很小的<strong>重构</strong>。整理重构会你会发现代码结构清晰了、也具备了下次新增业务需求的扩展性。但在实际使用中还会对此进行完善，目前的只是抽离出最核心的部分体现到你面前，方便学习。</p><h3 id="_1-工程结构-1" tabindex="-1"><a class="header-anchor" href="#_1-工程结构-1" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">02</span>
└── src
    ├── main
    │   └── java
    │       └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
    │           ├── store    
    │           │   ├── impl
    │           │   │   ├── <span class="token class-name">CardCommodityService</span><span class="token punctuation">.</span>java
    │           │   │   ├── <span class="token class-name">CouponCommodityService</span><span class="token punctuation">.</span>java 
    │           │   │   └── <span class="token class-name">GoodsCommodityService</span><span class="token punctuation">.</span>java  
    │           │   └── <span class="token class-name">ICommodity</span><span class="token punctuation">.</span>java
    │           └── <span class="token class-name">StoreFactory</span><span class="token punctuation">.</span>java 
    └── test
         └── java
             └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test
                 └── <span class="token class-name">ApiTest</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>首先，从上面的工程结构中你是否一些感觉，比如；它看上去清晰了、这样分层可以更好扩展了、似乎可以想象到每一个类做了什么。</li><li>如果还不能理解为什么这样修改，也没有关系。因为你是在通过这样的文章，来学习设计模式的魅力。并且再获取源码后，进行实际操作几次也就慢慢掌握了<code>工厂模式</code>的技巧。</li></ul><h3 id="_2-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-代码实现" aria-hidden="true">#</a> 2. 代码实现</h3><h4 id="_2-1-定义发奖接口" tabindex="-1"><a class="header-anchor" href="#_2-1-定义发奖接口" aria-hidden="true">#</a> 2.1 定义发奖接口</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ICommodity</span> <span class="token punctuation">{</span>

    <span class="token keyword">void</span> <span class="token function">sendCommodity</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> commodityId<span class="token punctuation">,</span> <span class="token class-name">String</span> bizId<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> extMap<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>所有的奖品无论是实物、虚拟还是第三方，都需要通过我们的程序实现此接口进行处理，以保证最终入参出参的统一性。</li><li>接口的入参包括；<code>用户ID</code>、<code>奖品ID</code>、<code>业务ID</code>以及<code>扩展字段</code>用于处理发放实物商品时的收获地址。</li></ul><h4 id="_2-2-实现奖品发放接口" tabindex="-1"><a class="header-anchor" href="#_2-2-实现奖品发放接口" aria-hidden="true">#</a> 2.2 实现奖品发放接口</h4><p><strong>优惠券</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CouponCommodityService</span> <span class="token keyword">implements</span> <span class="token class-name">ICommodity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">CouponCommodityService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">CouponService</span> couponService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CouponService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendCommodity</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> commodityId<span class="token punctuation">,</span> <span class="token class-name">String</span> bizId<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> extMap<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">CouponResult</span> couponResult <span class="token operator">=</span> couponService<span class="token punctuation">.</span><span class="token function">sendCoupon</span><span class="token punctuation">(</span>uId<span class="token punctuation">,</span> commodityId<span class="token punctuation">,</span> bizId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;请求参数[优惠券] =&gt; uId：{} commodityId：{} bizId：{} extMap：{}&quot;</span><span class="token punctuation">,</span> uId<span class="token punctuation">,</span> commodityId<span class="token punctuation">,</span> bizId<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>extMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果[优惠券]：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>couponResult<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>couponResult<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>couponResult<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实物商品</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsCommodityService</span> <span class="token keyword">implements</span> <span class="token class-name">ICommodity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">GoodsCommodityService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">GoodsService</span> goodsService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GoodsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendCommodity</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> commodityId<span class="token punctuation">,</span> <span class="token class-name">String</span> bizId<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> extMap<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">DeliverReq</span> deliverReq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeliverReq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        deliverReq<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token function">queryUserName</span><span class="token punctuation">(</span>uId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        deliverReq<span class="token punctuation">.</span><span class="token function">setUserPhone</span><span class="token punctuation">(</span><span class="token function">queryUserPhoneNumber</span><span class="token punctuation">(</span>uId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        deliverReq<span class="token punctuation">.</span><span class="token function">setSku</span><span class="token punctuation">(</span>commodityId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        deliverReq<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span>bizId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        deliverReq<span class="token punctuation">.</span><span class="token function">setConsigneeUserName</span><span class="token punctuation">(</span>extMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        deliverReq<span class="token punctuation">.</span><span class="token function">setConsigneeUserPhone</span><span class="token punctuation">(</span>extMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserPhone&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        deliverReq<span class="token punctuation">.</span><span class="token function">setConsigneeUserAddress</span><span class="token punctuation">(</span>extMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserAddress&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Boolean</span> isSuccess <span class="token operator">=</span> goodsService<span class="token punctuation">.</span><span class="token function">deliverGoods</span><span class="token punctuation">(</span>deliverReq<span class="token punctuation">)</span><span class="token punctuation">;</span>

        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;请求参数[优惠券] =&gt; uId：{} commodityId：{} bizId：{} extMap：{}&quot;</span><span class="token punctuation">,</span> uId<span class="token punctuation">,</span> commodityId<span class="token punctuation">,</span> bizId<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>extMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果[优惠券]：{}&quot;</span><span class="token punctuation">,</span> isSuccess<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSuccess<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;实物商品发放失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">queryUserName</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;花花&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">queryUserPhoneNumber</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;15200101232&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第三方兑换卡</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CardCommodityService</span> <span class="token keyword">implements</span> <span class="token class-name">ICommodity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">CardCommodityService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 模拟注入</span>
    <span class="token keyword">private</span> <span class="token class-name">IQiYiCardService</span> iQiYiCardService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IQiYiCardService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendCommodity</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> commodityId<span class="token punctuation">,</span> <span class="token class-name">String</span> bizId<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> extMap<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> mobile <span class="token operator">=</span> <span class="token function">queryUserMobile</span><span class="token punctuation">(</span>uId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        iQiYiCardService<span class="token punctuation">.</span><span class="token function">grantToken</span><span class="token punctuation">(</span>mobile<span class="token punctuation">,</span> bizId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;请求参数[爱奇艺兑换卡] =&gt; uId：{} commodityId：{} bizId：{} extMap：{}&quot;</span><span class="token punctuation">,</span> uId<span class="token punctuation">,</span> commodityId<span class="token punctuation">,</span> bizId<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>extMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果[爱奇艺兑换卡]：success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">queryUserMobile</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;15200101232&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从上面可以看到每一种奖品的实现都包括在自己的类中，新增、修改或者删除都不会影响其他奖品功能的测试，降低回归测试的可能。</li><li>后续在新增的奖品只需要按照此结构进行填充即可，非常易于维护和扩展。</li><li>在统一了入参以及出参后，调用方不在需要关心奖品发放的内部逻辑，按照统一的方式即可处理。</li></ul><h4 id="_2-3-创建商店工厂" tabindex="-1"><a class="header-anchor" href="#_2-3-创建商店工厂" aria-hidden="true">#</a> 2.3 创建商店工厂</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StoreFactory</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">ICommodity</span> <span class="token function">getCommodityService</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> commodityType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> commodityType<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> commodityType<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CouponCommodityService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">==</span> commodityType<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">GoodsCommodityService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">==</span> commodityType<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CardCommodityService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;不存在的商品服务类型&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里我们定义了一个商店的工厂类，在里面按照类型实现各种商品的服务。可以非常干净整洁的处理你的代码，后续新增的商品在这里扩展即可。如果你不喜欢<code>if</code>判断，也可以使用<code>switch</code>或者<code>map</code>配置结构，会让代码更加干净。</li><li>另外很多代码检查软件和编码要求，不喜欢if语句后面不写扩展，这里是为了更加干净的向你体现逻辑。在实际的业务编码中可以添加括号。</li></ul><h3 id="_3-测试验证-1" tabindex="-1"><a class="header-anchor" href="#_3-测试验证-1" aria-hidden="true">#</a> 3. 测试验证</h3><p><strong>编写测试类：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_commodity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">StoreFactory</span> storeFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StoreFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 1. 优惠券</span>
    <span class="token class-name">ICommodity</span> commodityService_1 <span class="token operator">=</span> storeFactory<span class="token punctuation">.</span><span class="token function">getCommodityService</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    commodityService_1<span class="token punctuation">.</span><span class="token function">sendCommodity</span><span class="token punctuation">(</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EGM1023938910232121323432&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;791098764902132&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 2. 实物商品</span>
    <span class="token class-name">ICommodity</span> commodityService_2 <span class="token operator">=</span> storeFactory<span class="token punctuation">.</span><span class="token function">getCommodityService</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> extMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    extMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;谢飞机&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    extMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserPhone&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;15200292123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    extMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;consigneeUserAddress&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;吉林省.长春市.双阳区.XX街道.檀溪苑小区.#18-2109&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    commodityService_2<span class="token punctuation">.</span><span class="token function">sendCommodity</span><span class="token punctuation">(</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;9820198721311&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1023000020112221113&quot;</span><span class="token punctuation">,</span> extMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 3. 第三方兑换卡(爱奇艺)</span>
    <span class="token class-name">ICommodity</span> commodityService_3 <span class="token operator">=</span> storeFactory<span class="token punctuation">.</span><span class="token function">getCommodityService</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    commodityService_3<span class="token punctuation">.</span><span class="token function">sendCommodity</span><span class="token punctuation">(</span><span class="token string">&quot;10001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;AQY1xjkUodl8LO975GdfrYUio&quot;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结果：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>模拟发放优惠券一张：<span class="token number">10001</span><span class="token punctuation">,</span><span class="token constant">EGM1023938910232121323432</span><span class="token punctuation">,</span><span class="token number">791098764902132</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">10.922</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>d<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>i<span class="token punctuation">.</span></span>CouponCommodityService</span> <span class="token operator">-</span> 请求参数<span class="token punctuation">[</span>优惠券<span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> uId：<span class="token number">10001</span> commodityId：<span class="token constant">EGM1023938910232121323432</span> bizId：<span class="token number">791098764902132</span> extMap：<span class="token keyword">null</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">10.957</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>d<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>i<span class="token punctuation">.</span></span>CouponCommodityService</span> <span class="token operator">-</span> 测试结果<span class="token punctuation">[</span>优惠券<span class="token punctuation">]</span>：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;发放成功&quot;</span><span class="token punctuation">}</span>
模拟发货实物商品一个：<span class="token punctuation">{</span><span class="token string">&quot;consigneeUserAddress&quot;</span><span class="token operator">:</span><span class="token string">&quot;吉林省.长春市.双阳区.XX街道.檀溪苑小区.#18-2109&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;consigneeUserName&quot;</span><span class="token operator">:</span><span class="token string">&quot;谢飞机&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;consigneeUserPhone&quot;</span><span class="token operator">:</span><span class="token string">&quot;15200292123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;orderId&quot;</span><span class="token operator">:</span><span class="token string">&quot;1023000020112221113&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;sku&quot;</span><span class="token operator">:</span><span class="token string">&quot;9820198721311&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;userName&quot;</span><span class="token operator">:</span><span class="token string">&quot;花花&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;userPhone&quot;</span><span class="token operator">:</span><span class="token string">&quot;15200101232&quot;</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">10.962</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>d<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>GoodsCommodityService</span> <span class="token operator">-</span> 请求参数<span class="token punctuation">[</span>优惠券<span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> uId：<span class="token number">10001</span> commodityId：<span class="token number">9820198721311</span> bizId：<span class="token number">1023000020112221113</span> extMap：<span class="token punctuation">{</span><span class="token string">&quot;consigneeUserName&quot;</span><span class="token operator">:</span><span class="token string">&quot;谢飞机&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;consigneeUserAddress&quot;</span><span class="token operator">:</span><span class="token string">&quot;吉林省.长春市.双阳区.XX街道.檀溪苑小区.#18-2109&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;consigneeUserPhone&quot;</span><span class="token operator">:</span><span class="token string">&quot;15200292123&quot;</span><span class="token punctuation">}</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">10.962</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>d<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>GoodsCommodityService</span> <span class="token operator">-</span> 测试结果<span class="token punctuation">[</span>优惠券<span class="token punctuation">]</span>：<span class="token boolean">true</span>
模拟发放爱奇艺会员卡一张：<span class="token number">15200101232</span>，<span class="token keyword">null</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">10.963</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>d<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>CardCommodityService</span> <span class="token operator">-</span> 请求参数<span class="token punctuation">[</span>爱奇艺兑换卡<span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> uId：<span class="token number">10001</span> commodityId：<span class="token class-name">AQY1xjkUodl8LO975GdfrYUio</span> bizId：<span class="token keyword">null</span> extMap：<span class="token keyword">null</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">10.963</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>i<span class="token punctuation">.</span>d<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>CardCommodityService</span> <span class="token operator">-</span> 测试结果<span class="token punctuation">[</span>爱奇艺兑换卡<span class="token punctuation">]</span>：success

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行结果正常，既满足了业务产品需求，也满足了自己对代码的追求。这样的代码部署上线运行，内心不会恐慌，不会觉得半夜会有电话。</li><li>另外从运行测试结果上也可以看出来，在进行封装后可以非常清晰的看到一整套发放奖品服务的完整性，统一了入参、统一了结果。</li></ul><h2 id="七、总结" tabindex="-1"><a class="header-anchor" href="#七、总结" aria-hidden="true">#</a> 七、总结</h2><ul><li>从上到下的优化来看，工厂方法模式并不复杂，甚至这样的开发结构在你有所理解后，会发现更加简单了。</li><li>那么这样的开发的好处知道后，也可以总结出来它的优点；<code>避免创建者与具体的产品逻辑耦合</code>、<code>满足单一职责，每一个业务逻辑实现都在所属自己的类中完成</code>、<code>满足开闭原则，无需更改使用调用方就可以在程序中引入新的产品类型</code>。但这样也会带来一些问题，比如有非常多的奖品类型，那么实现的子类会极速扩张。因此也需要使用其他的模式进行优化，这些在后续的设计模式中会逐步涉及到。</li><li>从案例入手看设计模式往往要比看理论学的更加容易，因为案例是缩短理论到上手的最佳方式，如果你已经有所收获，一定要去尝试实操。</li></ul>`,54);function q(y,w){const a=e("ExternalLinkIcon");return c(),u("div",null,[i,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",r,[s("https://bugstack.cn"),t(a)])]),d,m,v,n("ul",null,[n("li",null,[s("图片来自："),n("a",g,[s("https://refactoringguru.cn/design-patterns/factory-method"),t(a)])])]),b])}const h=o(l,[["render",q],["__file","2020-05-20-zhongxueJavashejimoshi《shizhangongchangfangfamoshi》.html.vue"]]);export{h as default};
