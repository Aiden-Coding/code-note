import{_ as p,r as o,o as l,c,a,b as s,d as e,e as t}from"./app-3RcBQnkC.js";const r={},i=a("h1",{id:"elk-使用教程采集系统日志-elasticsearch、logstash、kibana",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#elk-使用教程采集系统日志-elasticsearch、logstash、kibana","aria-hidden":"true"},"#"),s(" ELK 使用教程采集系统日志 Elasticsearch、Logstash、Kibana")],-1),u=a("br",null,null,-1),d={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},k=a("blockquote",null,[a("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=a("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=664765195&bvid=BV1pa4y1R7Rh&cid=1369260100&p=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),v={href:"https://bugstack.cn/md/road-map/ratelimiter.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://bugstack.cn/md/road-map/grafana.html",target:"_blank",rel:"noopener noreferrer"},b=a("p",null,"本文涉及的工程：",-1),g={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-elk",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.elastic.co/cn/",target:"_blank",rel:"noopener noreferrer"},f=t(`<h2 id="一、简要说明" tabindex="-1"><a class="header-anchor" href="#一、简要说明" aria-hidden="true">#</a> 一、简要说明</h2><p>Elastic Stack 技术栈，别是 <code>Elasticsearch</code>、<code>Logstash</code>、<code>Kibana</code> 组成，简称 ELK 是一套针对日志数据做解决方案的框架。它使您能够聚合来自所有系统和应用程序的日志，分析这些日志，并创建可视化来进行应用程序和基础设施监控、更快的故障排除、安全分析等。</p><ul><li>E = Elasticsearch：Elasticsearch 是在 Apache Lucene 上构建的分布式搜索和分析引擎。对各种语言、高性能和无架构 JSON 文档的支持使 Elasticsearch 成为各种日志分析和搜索使用案例的理想选择。</li><li>L = Logstash：Logstash 是一个开源数据摄取工具，允许您从各种来源收集数据，转换数据，并将数据发送到您希望的目标。通过预构建的筛选器和对 200 多种插件的支持，Logstash 使用户能够轻松摄取数据，无论数据源或类型如何。</li><li>K = Kibana：Kibana 是一种数据可视化和挖掘工具，可以用于日志和时间序列分析、应用程序监控和运营智能使用案例。它提供了强大且易用的功能，例如直方图、线形图、饼图、热图和内置的地理空间支持。此外，付费的 Kibana 还有 x-pack-jdbc 可以使用，让你就像使用 MyBatis 操作 MySQL 数据库一样操作 Elasticsearch 数据。</li></ul><p>综上，3个组件的组合使用。由 Logstash 将摄取、转换数据并将其发送到 Elasticsearch 为摄取的数据编制索引，并且分析和搜索这些数据。最终 Kibana 会将分析结果可视化。也就是你可以在 Kibana 上实时看到系统的运行日志。</p><h2 id="二、环境配置" tabindex="-1"><a class="header-anchor" href="#二、环境配置" aria-hidden="true">#</a> 二、环境配置</h2><p>这里小傅哥做了个工程案例，并配有对应的环境安装、日志上报，你只需要跟随接下来的文章说明，即可知道 ELK 如何配置和使用。</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-elk-01.png?raw=true" width="600px"></div><ul><li>环境；jdk 1.8、Maven 3.6.x、Docker</li><li>组件；ELK version 7.17.14 支持 ARM&amp;AMD</li><li>代码；在 xfg-dev-tech-elk 测试工程中提供了测试代码和环境安装，绿色按钮点击即可安装【确保你已经本地安装了 Docker】</li></ul><h3 id="_1-环境配置" tabindex="-1"><a class="header-anchor" href="#_1-环境配置" aria-hidden="true">#</a> 1. 环境配置</h3><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-elk-02.png?raw=true" width="600px"></div><ul><li>docker-compose.yml 运行时会加载下面的 kibana、logstash 配置信息。</li><li>kibana.yml 设置了资源的基本信息，包括 ES 的连接，中文汉化。</li><li>logstash.conf 设置了日志的格式，上报到 es:9200 的地址信息。这些都可以保持默认不用修改。</li></ul><h3 id="_2-安装环境" tabindex="-1"><a class="header-anchor" href="#_2-安装环境" aria-hidden="true">#</a> 2. 安装环境</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>version<span class="token operator">:</span> <span class="token char">&#39;3&#39;</span>
# 执行脚本；docker<span class="token operator">-</span>compose <span class="token operator">-</span>f docker<span class="token operator">-</span>compose<span class="token punctuation">.</span>yml up <span class="token operator">-</span>d
# 控制台；<span class="token constant">GET</span> _cat<span class="token operator">/</span>indices <span class="token operator">-</span> 查看 springboot<span class="token operator">-</span>logstash<span class="token operator">-</span> 是否存在，上报后存在，则表示接入成功
services<span class="token operator">:</span>
  elasticsearch<span class="token operator">:</span>
    image<span class="token operator">:</span> elasticsearch<span class="token operator">:</span><span class="token number">7.17</span><span class="token number">.14</span>
    ports<span class="token operator">:</span>
      <span class="token operator">-</span> &#39;<span class="token number">9200</span><span class="token operator">:</span><span class="token number">9200</span>&#39;
      <span class="token operator">-</span> &#39;<span class="token number">9300</span><span class="token operator">:</span><span class="token number">9300</span>&#39;
    container_name<span class="token operator">:</span> elasticsearch
    restart<span class="token operator">:</span> always
    environment<span class="token operator">:</span>
      <span class="token operator">-</span> &#39;cluster<span class="token punctuation">.</span>name<span class="token operator">=</span>elasticsearch&#39; # 设置集群名称为elasticsearch
      <span class="token operator">-</span> &#39;discovery<span class="token punctuation">.</span>type<span class="token operator">=</span>single<span class="token operator">-</span>node&#39; # 以单一节点模式启动
      <span class="token operator">-</span> <span class="token string">&quot;cluster.name=docker-cluster&quot;</span> # 设置名称
      <span class="token operator">-</span> &#39;<span class="token constant">ES_JAVA_OPTS</span><span class="token operator">=</span><span class="token operator">-</span><span class="token class-name">Xms512m</span> <span class="token operator">-</span><span class="token class-name">Xmx512m</span>&#39; # 设置使用jvm内存大小
    networks<span class="token operator">:</span>
      <span class="token operator">-</span> elk

  logstash<span class="token operator">:</span>
    image<span class="token operator">:</span> logstash<span class="token operator">:</span><span class="token number">7.17</span><span class="token number">.14</span>
    container_name<span class="token operator">:</span> logstash
    restart<span class="token operator">:</span> always
    volumes<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token operator">/</span>etc<span class="token operator">/</span>localtime<span class="token operator">:</span><span class="token operator">/</span>etc<span class="token operator">/</span>localtime
      <span class="token operator">-</span> <span class="token punctuation">.</span>/logstash<span class="token operator">/</span>logstash<span class="token punctuation">.</span>conf<span class="token operator">:</span><span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>logstash<span class="token operator">/</span>pipeline<span class="token operator">/</span>logstash<span class="token punctuation">.</span>conf
    ports<span class="token operator">:</span>
      <span class="token operator">-</span> &#39;<span class="token number">4560</span><span class="token operator">:</span><span class="token number">4560</span>&#39;
      <span class="token operator">-</span> &#39;<span class="token number">50000</span><span class="token operator">:</span><span class="token number">50000</span><span class="token operator">/</span>tcp&#39;
      <span class="token operator">-</span> &#39;<span class="token number">50000</span><span class="token operator">:</span><span class="token number">50000</span><span class="token operator">/</span>udp&#39;
      <span class="token operator">-</span> &#39;<span class="token number">9600</span><span class="token operator">:</span><span class="token number">9600</span>&#39;
    environment<span class="token operator">:</span>
      <span class="token constant">LS_JAVA_OPTS</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token class-name">Xms1024m</span> <span class="token operator">-</span><span class="token class-name">Xmx1024m</span>
      <span class="token constant">TZ</span><span class="token operator">:</span> <span class="token class-name">Asia</span><span class="token operator">/</span><span class="token class-name">Shanghai</span>
      <span class="token constant">MONITORING_ENABLED</span><span class="token operator">:</span> <span class="token boolean">false</span>
    links<span class="token operator">:</span>
      <span class="token operator">-</span> elasticsearch<span class="token operator">:</span>es # 可以用es这个域名访问elasticsearch服务
    networks<span class="token operator">:</span>
      <span class="token operator">-</span> elk
    depends_on<span class="token operator">:</span>
      <span class="token operator">-</span> elasticsearch # 依赖elasticsearch启动后在启动logstash

  kibana<span class="token operator">:</span>
    image<span class="token operator">:</span> kibana<span class="token operator">:</span><span class="token number">7.17</span><span class="token number">.14</span>
    container_name<span class="token operator">:</span> kibana
    restart<span class="token operator">:</span> always
    volumes<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token operator">/</span>etc<span class="token operator">/</span>localtime<span class="token operator">:</span><span class="token operator">/</span>etc<span class="token operator">/</span>localtime
      <span class="token operator">-</span> <span class="token punctuation">.</span>/kibana<span class="token operator">/</span>config<span class="token operator">/</span>kibana<span class="token punctuation">.</span>yml<span class="token operator">:</span><span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>kibana<span class="token operator">/</span>config<span class="token operator">/</span>kibana<span class="token punctuation">.</span>yml
    ports<span class="token operator">:</span>
      <span class="token operator">-</span> &#39;<span class="token number">5601</span><span class="token operator">:</span><span class="token number">5601</span>&#39;
    links<span class="token operator">:</span>
      <span class="token operator">-</span> elasticsearch<span class="token operator">:</span>es #可以用es这个域名访问elasticsearch服务
    environment<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token constant">ELASTICSEARCH_URL</span><span class="token operator">=</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>elasticsearch<span class="token operator">:</span><span class="token number">9200</span> #设置访问elasticsearch的地址
      <span class="token operator">-</span> &#39;elasticsearch<span class="token punctuation">.</span>hosts<span class="token operator">=</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>es<span class="token operator">:</span><span class="token number">9200</span>&#39; #设置访问elasticsearch的地址
      <span class="token operator">-</span> <span class="token constant">I18N_LOCALE</span><span class="token operator">=</span>zh<span class="token operator">-</span><span class="token constant">CN</span>
    networks<span class="token operator">:</span>
      <span class="token operator">-</span> elk
    depends_on<span class="token operator">:</span>
      <span class="token operator">-</span> elasticsearch

networks<span class="token operator">:</span>
  elk<span class="token operator">:</span>
    driver<span class="token operator">:</span> bridge #网络
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-elk-03.png?raw=true" width="850px"></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-elk-04.png?raw=true" width="850px"></div><ul><li>这是 docker compose 执行脚本，如果你本地已经安装了 Docker 可以直接执行 安装即可。</li><li>安装完成后，当你看到如上截图，则表示已经运行。注意 Quick Actions 下可以进入日志和控制台。如果启动失败，可以检查日志。</li></ul><h3 id="_3-日志配置" tabindex="-1"><a class="header-anchor" href="#_3-日志配置" aria-hidden="true">#</a> 3. 日志配置</h3><h4 id="_3-1-引入pom-logstash" tabindex="-1"><a class="header-anchor" href="#_3-1-引入pom-logstash" aria-hidden="true">#</a> 3.1 引入POM - logstash</h4><div class="language-pom line-numbers-mode" data-ext="pom"><pre class="language-pom"><code>&lt;dependency&gt;
    &lt;groupId&gt;net.logstash.logback&lt;/groupId&gt;
    &lt;artifactId&gt;logstash-logback-encoder&lt;/artifactId&gt;
    &lt;version&gt;7.3&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个Jar是为了上报应用日志用的。工程的根目录下引入是定义版本，在 xfg-dev-tech-app 模块下引入是具体的引入。</p><h4 id="_3-2-logback-采集" tabindex="-1"><a class="header-anchor" href="#_3-2-logback-采集" aria-hidden="true">#</a> 3.2 logback 采集</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># logstash部署的服务器IP</span>
<span class="token key atrule">logstash</span><span class="token punctuation">:</span>
  <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProperty</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOG_STASH_HOST<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>context<span class="token punctuation">&quot;</span></span> <span class="token attr-name">source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logstash.host<span class="token punctuation">&quot;</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>127.0.0.1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

<span class="token comment">&lt;!--输出到logstash的appender--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOGSTASH<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.appender.LogstashTcpSocketAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--可以访问的logstash日志收集端口--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>destination</span><span class="token punctuation">&gt;</span></span>\${LOG_STASH_HOST}:4560<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>destination</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.encoder.LogstashEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOGSTASH<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>LOG_STASH_HOST 通过占位符可以使用 yml 配置，这样方便后期动态调整。</li></ul><h2 id="四、应用测试" tabindex="-1"><a class="header-anchor" href="#四、应用测试" aria-hidden="true">#</a> 四、应用测试</h2><h3 id="_1-启动应用-检测上报" tabindex="-1"><a class="header-anchor" href="#_1-启动应用-检测上报" aria-hidden="true">#</a> 1. 启动应用&amp;检测上报</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * curl http://localhost:8091/api/ratelimiter/login?fingerprint=uljpplllll01009&amp;uId=1000&amp;token=8790
     */</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;login&quot;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> fingerprint<span class="token punctuation">,</span> <span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟登录 login fingerprint:{}&quot;</span><span class="token punctuation">,</span> fingerprint<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;模拟登录：登录成功 &quot;</span> <span class="token operator">+</span> uId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-elk-05.png?raw=true" width="850px"></div>`,28),x={href:"http://0.0.0.0:5601/app/dev_tools#/console",target:"_blank",rel:"noopener noreferrer"},q=a("li",null,[s("命令："),a("code",null,"GET _cat/indices"),s(" - 通过命令检测日志上报")],-1),w=a("h3",{id:"_2-配置日志",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-配置日志","aria-hidden":"true"},"#"),s(" 2. 配置日志")],-1),y={href:"http://0.0.0.0:5601/app/discover",target:"_blank",rel:"noopener noreferrer"},S=t('<h4 id="_2-1-创建索引" tabindex="-1"><a class="header-anchor" href="#_2-1-创建索引" aria-hidden="true">#</a> 2.1 创建索引</h4><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-elk-06.png?raw=true" width="850px"></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-elk-07.png?raw=true" width="850px"></div><ul><li>当你的应用启动后，会上报数据。这个时候在点击 Discover 会提示你有可用的数据。</li><li>如图创建索引即可。</li></ul><h4 id="_2-2-回到监控" tabindex="-1"><a class="header-anchor" href="#_2-2-回到监控" aria-hidden="true">#</a> 2.2 回到监控</h4>',5),L={href:"http://localhost:8091/api/ratelimiter/login?fingerprint=uljpplllll01009&uId=1000&token=8790",target:"_blank",rel:"noopener noreferrer"},E=a("div",{align:"center"},[a("img",{src:"https://bugstack.cn/images/roadmap/tutorial/road-map-elk-08.png?raw=true",width:"850px"})],-1),A=a("ul",null,[a("li",null,"当你不断的访问接口，就可以看到上报的日志数据信息了。")],-1);function T(I,K){const n=o("ExternalLinkIcon");return l(),c("div",null,[i,a("p",null,[s("作者：小傅哥 "),u,s("博客："),a("a",d,[s("https://bugstack.cn"),e(n)])]),k,m,a("p",null,[s("本文的宗旨在于通过易于上手实操的方式，教会读者完成系统ELK日志采集的对接和使用。那你知道对于一个系统的上线考察，必备的几样东西是什么吗？其实这也是面试中考察求职者，是否真的做过系统开发和上线的必备问题。包括："),a("a",v,[s("服务治理(熔断/限流)"),e(n)]),s("、"),a("a",h,[s("监控"),e(n)]),s("和日志，如果你做的系统里没有这样几个东西，一种是说明系统是玩具项目，另外一种就是压根没做过或者没关心过。前面的已经写完了，所以今天来给大家写ELK日志。")]),b,a("ul",null,[a("li",null,[s("xfg-dev-tech-elk："),a("a",g,[s("https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-elk"),e(n)])]),a("li",null,[s("官网："),a("a",_,[s("https://www.elastic.co/cn/"),e(n)])])]),f,a("ul",null,[a("li",null,[s("地址："),a("a",x,[s("http://0.0.0.0:5601/app/dev_tools#/console"),e(n)])]),q]),w,a("p",null,[s("地址："),a("a",y,[s("http://0.0.0.0:5601/app/discover"),e(n)])]),S,a("p",null,[s("创建索引后，回到 Discover 即可查看监控日志。在这个阶段，你可以访问应用程序接口，查看上报日志信息；"),a("a",L,[s("http://localhost:8091/api/ratelimiter/login?fingerprint=uljpplllll01009&uId=1000&token=8790"),e(n)])]),E,A])}const j=p(r,[["render",T],["__file","elk.html.vue"]]);export{j as default};
