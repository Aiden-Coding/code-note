import{_ as r,r as o,o as n,c as s,a as e,b as t,d as c,e as i}from"./app-3RcBQnkC.js";const p={},d=e("h1",{id:"第-11-章-es-springboot-starter-服务框架",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#第-11-章-es-springboot-starter-服务框架","aria-hidden":"true"},"#"),t(" 第 11 章 ES SpringBoot Starter 服务框架")],-1),h=e("br",null,null,-1),_={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},l=i('<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！</p></blockquote><h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>经历过的场景越多，提出解决方案的速度越快</code></p><p>其实很多时候的很多问题，除了差异也都是具有共性的，经历的场景越多、解决的问题越多，也就会发现这些共性问题的差异并不大，但共性却很相同。</p><p>就想我们去开发一个系统、组件、模块，这些各类的实现代码在不同的业务服务中，可能仅仅是一些渠道、参数、类型的差异，而核心代码部分基本都是可以复用的。</p><p>这也就是我们常提到的，中间件要解决的是提取业务逻辑中，具有共性通用问题的场景做凝练复用，解决所有同类问题产生。</p><h2 id="二、需求背景" tabindex="-1"><a class="header-anchor" href="#二、需求背景" aria-hidden="true">#</a> 二、需求背景</h2><p>在数据库 ORM 框架设计中，我们尝试开发一个自己的 ORM SpringBoot Starter 解决系统中对数据库的使用。</p><p>同样这里我们也是要解决类似的问题，只不过把数据库换成了 Elasticsearch，把 JDBC 替换为 x-pack-sql-jdbc。有了这些基础组件的提供，就可以开发出一个 ES ORM SpringBoot Starter 的组件，让我们可以轻松的在系统中像使用 MyBatis 一样操作 Elasticsearch 服务。</p><p>其实本章节的开发并不复杂，因为我们已经了开发此类 ORM 框架的基础，所以本章节更多的是对 ORM 框架技术的横向复用。</p>',10);function u(S,f){const a=o("ExternalLinkIcon");return n(),s("div",null,[d,e("p",null,[t("作者：小傅哥 "),h,t("博客："),e("a",_,[t("https://bugstack.cn"),c(a)])]),l])}const b=r(p,[["render",u],["__file","di 11 zhang ES SpringBoot Starter fuwukuangjia.html.vue"]]);export{b as default};
