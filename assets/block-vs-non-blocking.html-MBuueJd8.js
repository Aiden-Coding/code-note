import{_ as t,r as s,o as c,c as l,a as o,d as _,w as a,b as e}from"./app-3RcBQnkC.js";const i={},r=o("p",null,"阻塞与非阻塞描述的是调用者的",-1),d=o("p",null,"如A调用B：",-1),h=o("p",null,"如果是阻塞，A在发出调用后，要一直等待，等着B返回结果。",-1),u=o("p",null,"如果是非阻塞，A在发出调用后，不需要等待，可以去做自己的事情。",-1),p=o("h3",{id:"同步-异步-和-阻塞-非阻塞之间的区别",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#同步-异步-和-阻塞-非阻塞之间的区别","aria-hidden":"true"},"#"),e(" 同步，异步 和 阻塞，非阻塞之间的区别")],-1),f=o("p",null,"阻塞，非阻塞，是描述调用方的。",-1),m=o("p",null,"同步不一定阻塞，异步也不一定非阻塞。没有必然关系。",-1),k=o("p",null,"举个简单的例子，老张烧水。 1 老张把水壶放到火上，一直在水壶旁等着水开。（同步阻塞） 2 老张把水壶放到火上，去客厅看电视，时不时去厨房看看水开没有。（同步非阻塞） 3 老张把响水壶放到火上，一直在水壶旁等着水开。（异步阻塞） 4 老张把响水壶放到火上，去客厅看电视，水壶响之前不再去看它了，响了再去拿壶。（异步非阻塞）",-1),b=o("p",null,"1和2的区别是，调用方在得到返回之前所做的事情不一行。 1和3的区别是，被调用方对于烧水的处理不一样。",-1);function v(x,B){const n=s("RouterLink");return c(),l("div",null,[r,d,h,u,p,o("p",null,[_(n,{to:"/basics/java-basic/synchronized-vs-asynchronization.html"},{default:a(()=>[e("同步、异步")]),_:1}),e("，是描述被调用方的。")]),f,m,k,b])}const V=t(i,[["render",v],["__file","block-vs-non-blocking.html.vue"]]);export{V as default};
