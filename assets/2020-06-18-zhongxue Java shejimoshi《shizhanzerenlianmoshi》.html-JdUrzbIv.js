import{_ as e,r as o,o as c,c as u,a as n,b as s,d as t,e as p}from"./app-3RcBQnkC.js";const l={},i=n("h1",{id:"重学-java-设计模式-实战责任链模式「模拟618电商大促期间-项目上线流程多级负责人审批场景」",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#重学-java-设计模式-实战责任链模式「模拟618电商大促期间-项目上线流程多级负责人审批场景」","aria-hidden":"true"},"#"),s(" 重学 Java 设计模式：实战责任链模式「模拟618电商大促期间，项目上线流程多级负责人审批场景」")],-1),k=n("br",null,null,-1),r={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),v=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=553661149&bvid=BV1Rv4y1N75h&cid=589320025&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),m=p('<h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>场地和场景的重要性</code></p><p>射击🏹需要去靶场学习、滑雪🏂需要去雪场体验、开车🚗需要能上路实践，而编程开发除了能完成产品的功能流程，还需要保证系统的可靠性能。就像你能听到的一些系统监控指标；<code>QPS</code>、<code>TPS</code>、<code>TP99</code>、<code>TP999</code>、<code>可用率</code>、<code>响应时长</code>等等，而这些指标的总和评估就是一个系统的健康度。但如果你几乎没有听到这样的技术术语，也没接触过类似高并发场景，那么就很像驾驶证的科目1考了100分，但不能上路。没有这样的技术场景给你训练，让你不断的体会系统的脾气秉性，即便你有再多的想法都没法实现。所以，如果真的想学习一定要去一个有实操的场景，下水试试才能学会狗刨。</p><p><code>你的视觉盲区有多大</code></p><p>同样一本书、同样一条路、同样一座城，你真的以为生活有选择吗？有时候很多选项都是摆设，给你多少次机会你都选的一模一样。这不是你选不选而是你的认知范围决定了你下一秒做的事情，另外的一个下一秒又决定了再下一个下一秒。就像管中窥豹一样，20%的面积在你视觉里都是黑色的，甚至就总是忽略看不到，而这看不到的20%就是生命中的时运！但，人可以学习，可以成长，可以脱胎换骨，可以努力付出，通过一次次的蜕变而看到剩下的20%！</p><p><code>没有设计图纸你敢盖楼吗</code></p><p>编程开发中最好的什么，是设计。运用架构思维、经验心得、<code>才华灵感</code>，构建出最佳的系统。真正的研发会把自己写的代码当做作品来欣赏，你说这是一份工作，但在这样的人眼里这可不是一份工作，而是一份工匠精神。就像可能时而你也会为自己因为一个<code>niubility</code>的设计而豪迈万丈，为能上线一个扛得住每秒200万访问量的系统会精神焕发。这样的自豪感就是一次次垒砖一样垫高脚底，不断的把你的视野提高，让你能看到上层设计也能知晓根基建设。可以把控全局，也可以治理细节。这一份份知识的沉淀，来帮助你绘制出一张系统架构蓝图。</p><h2 id="二、开发环境" tabindex="-1"><a class="header-anchor" href="#二、开发环境" aria-hidden="true">#</a> 二、开发环境</h2>',8),b=n("li",null,"JDK 1.8",-1),g=n("li",null,"Idea + Maven",-1),h=n("strong",null,"公众号",-1),q={href:"https://bugstack.cn/assets/images/qrcode.png",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"bugstack虫洞栈",-1),w=n("code",null,"源码下载",-1),y=p('<table><thead><tr><th>工程</th><th>描述</th></tr></thead><tbody><tr><td>itstack-demo-design-13-00</td><td>场景模拟工程；模拟一个上线流程审批的接口。</td></tr><tr><td>itstack-demo-design-13-01</td><td>使用一坨代码实现业务需求</td></tr><tr><td>itstack-demo-design-13-02</td><td>通过设计模式优化改造代码，产生对比性从而学习</td></tr></tbody></table><h2 id="三、责任链模式介绍" tabindex="-1"><a class="header-anchor" href="#三、责任链模式介绍" aria-hidden="true">#</a> 三、责任链模式介绍</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-13-01.png" alt="责任链模式，图片来自 refactoringguru.cn"></p>',3),A={href:"https://refactoringguru.cn/design-patterns/chain-of-responsibility",target:"_blank",rel:"noopener noreferrer"},I=p(`<p><strong>击鼓传雷</strong>，看上图你是否想起周星驰有一个电影，大家坐在海边围成一个圈，拿着一个点燃的炸弹，互相传递。</p><p>责任链模式的核心是解决一组服务中的先后执行处理关系，就有点像你没钱花了，需要家庭财务支出审批，10块钱以下找闺女审批，100块钱先闺女审批在媳妇审批。你可以理解想象成当你要跳槽的时候被安排的明明白白的被各个领导签字放行。</p><h2 id="四、案例场景模拟" tabindex="-1"><a class="header-anchor" href="#四、案例场景模拟" aria-hidden="true">#</a> 四、案例场景模拟</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-13-02.png" alt="场景模拟；618大促场景上线审批场景"></p><p><strong>在本案例中我们模拟在618大促期间的业务系统上线审批流程场景</strong></p><p>像是这些一线电商类的互联网公司，阿里、京东、拼多多等，在618期间都会做一些运营活动场景以及提供的扩容备战，就像过年期间百度的红包一样。但是所有开发的这些系统都需要陆续的上线，因为临近618有时候也有一些紧急的调整的需要上线，但为了保障线上系统的稳定性是尽可能的减少上线的，也会相应的增强审批力度。就像一级响应、二级响应一样。</p><p>而这审批的过程在随着特定时间点会增加不同级别的负责人加入，每个人就像责任链模式中的每一个核心点。对于研发小伙伴并不需要关心具体的审批流程处理细节，只需要知道这个上线更严格，级别也更高，但对于研发人员来说同样是点击相同的提审按钮，等待审核。</p><p>接下来我们就模拟这样一个业务诉求场景，使用责任链的设计模式来实现此功能。</p><h3 id="_1-场景模拟工程" tabindex="-1"><a class="header-anchor" href="#_1-场景模拟工程" aria-hidden="true">#</a> 1. 场景模拟工程</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">13</span><span class="token operator">-</span><span class="token number">00</span>
└── src
    └── main
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
                └── <span class="token class-name">AuthService</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里的代码结构比较简单，只有一个模拟审核和查询审核结果的服务类。相当于你可以调用这个类去审核工程和获取审核结构，这部分结果信息是模拟的写到缓存实现。</li></ul><h3 id="_2-场景简述" tabindex="-1"><a class="header-anchor" href="#_2-场景简述" aria-hidden="true">#</a> 2. 场景简述</h3><h4 id="_2-1-模拟审核服务" tabindex="-1"><a class="header-anchor" href="#_2-1-模拟审核服务" aria-hidden="true">#</a> 2.1 模拟审核服务</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthService</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Date</span><span class="token punctuation">&gt;</span></span> authMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Date</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Date</span> <span class="token function">queryAuthInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> orderId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> authMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>uId<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> orderId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        authMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>uId<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里面提供了两个接口一个是查询审核结果(<code>queryAuthInfo</code>)、另外一个是处理审核(<code>auth</code>)。</li><li>这部分是把由谁审核的和审核的单子ID作为唯一key值记录到内存Map结构中。</li></ul><h2 id="五、用一坨坨代码实现" tabindex="-1"><a class="header-anchor" href="#五、用一坨坨代码实现" aria-hidden="true">#</a> 五、用一坨坨代码实现</h2><p><code>这里我们先使用最直接的方式来实现功能</code></p><p>按照我们的需求审批流程，平常系统上线只需要三级负责人审批就可以，但是到了618大促时间点，就需要由二级负责以及一级负责人一起加入审批系统上线流程。在这里我们使用非常直接的if判断方式来实现这样的需求。</p><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">13</span><span class="token operator">-</span><span class="token number">01</span>
└── src
    └── main
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
                └── <span class="token class-name">AuthController</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这部分非常简单的只包含了一个审核的控制类，就像有些伙伴开始写代码一样，一个类写所有需求。</li></ul><h3 id="_2-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-代码实现" aria-hidden="true">#</a> 2. 代码实现</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">SimpleDateFormat</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 时间格式化</span>

    <span class="token keyword">public</span> <span class="token class-name">AuthInfo</span> <span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> orderId<span class="token punctuation">,</span> <span class="token class-name">Date</span> authDate<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ParseException</span> <span class="token punctuation">{</span>

        <span class="token comment">// 三级审批</span>
        <span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">queryAuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;1000013&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> date<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：待三级审批负责人 &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;王工&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 二级审批</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>authDate<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-06-01 00:00:00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> authDate<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-06-25 23:59:59&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            date <span class="token operator">=</span> <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">queryAuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;1000012&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> date<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：待二级审批负责人 &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张经理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 一级审批</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>authDate<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-06-11 00:00:00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> authDate<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-06-20 23:59:59&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            date <span class="token operator">=</span> <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">queryAuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;1000011&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> date<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：待一级审批负责人 &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;段总&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：审批完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里从上到下分别判断了在指定时间范围内由不同的人员进行审批，就像618上线的时候需要三个负责人都审批才能让系统进行上线。</li><li>像是这样的功能看起来很简单的，但是实际的业务中会有很多部门，但如果这样实现就很难进行扩展，并且在改动扩展调整也非常麻烦。</li></ul><h3 id="_3-测试验证" tabindex="-1"><a class="header-anchor" href="#_3-测试验证" aria-hidden="true">#</a> 3. 测试验证</h3><h4 id="_3-1-编写测试类" tabindex="-1"><a class="header-anchor" href="#_3-1-编写测试类" aria-hidden="true">#</a> 3.1 编写测试类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_AuthController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ParseException</span> <span class="token punctuation">{</span>
    <span class="token class-name">AuthController</span> authController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AuthController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token comment">// 模拟三级负责人审批</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>authController<span class="token punctuation">.</span><span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;模拟三级负责人审批，王工&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">&quot;1000013&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token comment">// 模拟二级负责人审批                                 </span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>authController<span class="token punctuation">.</span><span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;模拟二级负责人审批，张经理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">&quot;1000012&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    

    <span class="token comment">// 模拟一级负责人审批</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>authController<span class="token punctuation">.</span><span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;模拟一级负责人审批，段总&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">&quot;1000011&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            

    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;审批完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里模拟每次查询是否审批完成，随着审批的不同节点，之后继续由不同的负责人进行审批操作。</li><li><code>authController.doAuth</code>，是查看审批的流程节点、<code>AuthService.auth</code>，是审批方法用于操作节点流程状态。</li></ul><h4 id="_3-2-测试结果" tabindex="-1"><a class="header-anchor" href="#_3-2-测试结果" aria-hidden="true">#</a> 3.2 测试结果</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.363</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;单号：1000998004813441 状态：待三级审批负责人 王工&quot;</span><span class="token punctuation">}</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.366</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：模拟三级负责人审批，王工
<span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.367</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;单号：1000998004813441 状态：待二级审批负责人 张经理&quot;</span><span class="token punctuation">}</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.367</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：模拟二级负责人审批，张经理
<span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.368</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;单号：1000998004813441 状态：待一级审批负责人 段总&quot;</span><span class="token punctuation">}</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.368</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：模拟一级负责人审批，段总
<span class="token number">23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">00.368</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：审批完成

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从测试结果上可以看到一层层的由不同的人员进行审批，审批完成后到下一个人进行处理。单看结果是满足我们的诉求，只不过很难扩展和调整流程，相当于代码写的死死的。</li></ul><h2 id="六、责任链模式重构代码" tabindex="-1"><a class="header-anchor" href="#六、责任链模式重构代码" aria-hidden="true">#</a> 六、责任链模式重构代码</h2><p><code>接下来使用装饰器模式来进行代码优化，也算是一次很小的重构。</code></p><p>责任链模式可以让各个服务模块更加清晰，而每一个模块间可以通过<code>next</code>的方式进行获取。而每一个<code>next</code>是由继承的统一抽象类实现的。最终所有类的职责可以动态的进行编排使用，编排的过程可以做成可配置化。</p><h3 id="_1-工程结构-1" tabindex="-1"><a class="header-anchor" href="#_1-工程结构-1" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">13</span><span class="token operator">-</span><span class="token number">02</span>
└── src
    └── main
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
                ├── impl
                │    ├── <span class="token class-name">Level1AuthLink</span><span class="token punctuation">.</span>java
                │    ├── <span class="token class-name">Level2AuthLink</span><span class="token punctuation">.</span>java
                │    └── <span class="token class-name">Level3AuthLink</span><span class="token punctuation">.</span>java
                ├── <span class="token class-name">AuthInfo</span><span class="token punctuation">.</span>java
                └── <span class="token class-name">AuthLink</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>责任链类图</strong></p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-13-03-01.png" alt="责任链类图"></p><p><strong>责任链模式模型结构</strong></p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-13-03.png" alt="责任链模式模型结构"></p><ul><li>上图是这个业务模型中责任链结构的核心部分，通过三个实现了统一抽象类<code>AuthLink</code>的不同规则，再进行责任编排模拟出一条链路。这个链路就是业务中的责任链。</li><li>一般在使用责任链时候如果是场景比较固定，可以通过写死到代码中进行初始化。但如果业务场景经常变化可以做成xml配置的方式进行处理，也可以落到库里进行初始化操作。</li></ul><h3 id="_2-代码实现-1" tabindex="-1"><a class="header-anchor" href="#_2-代码实现-1" aria-hidden="true">#</a> 2. 代码实现</h3><h4 id="_2-1-责任链中返回对象定义" tabindex="-1"><a class="header-anchor" href="#_2-1-责任链中返回对象定义" aria-hidden="true">#</a> 2.1 责任链中返回对象定义</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthInfo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> info <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>infos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token operator">:</span>infos<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>info<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// ...get/set</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这个类的是包装了责任链处理过程中返回结果的类，方面处理每个责任链的返回信息。</li></ul><h4 id="_2-2-链路抽象类定义" tabindex="-1"><a class="header-anchor" href="#_2-2-链路抽象类定义" aria-hidden="true">#</a> 2.2 链路抽象类定义</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AuthLink</span> <span class="token punctuation">{</span>

    <span class="token keyword">protected</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">AuthLink</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token class-name">SimpleDateFormat</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 时间格式化</span>
    <span class="token keyword">protected</span> <span class="token class-name">String</span> levelUserId<span class="token punctuation">;</span>                           <span class="token comment">// 级别人员ID</span>
    <span class="token keyword">protected</span> <span class="token class-name">String</span> levelUserName<span class="token punctuation">;</span>                         <span class="token comment">// 级别人员姓名</span>
    <span class="token keyword">private</span> <span class="token class-name">AuthLink</span> next<span class="token punctuation">;</span>                                  <span class="token comment">// 责任链</span>

    <span class="token keyword">public</span> <span class="token class-name">AuthLink</span><span class="token punctuation">(</span><span class="token class-name">String</span> levelUserId<span class="token punctuation">,</span> <span class="token class-name">String</span> levelUserName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>levelUserId <span class="token operator">=</span> levelUserId<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>levelUserName <span class="token operator">=</span> levelUserName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">AuthLink</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">AuthLink</span> <span class="token function">appendNext</span><span class="token punctuation">(</span><span class="token class-name">AuthLink</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">AuthInfo</span> <span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> orderId<span class="token punctuation">,</span> <span class="token class-name">Date</span> authDate<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这部分是责任链，<strong>链接起来</strong>的核心部分。<code>AuthLink next</code>，重点在于可以通过<code>next</code>方式获取下一个链路需要处理的节点。</li><li><code>levelUserId</code>、<code>levelUserName</code>，是责任链中的公用信息，标记每一个审核节点的人员信息。</li><li>抽象类中定义了一个抽象方法，<code>abstract AuthInfo doAuth</code>，这是每一个实现者必须实现的类，不同的审核级别处理不同的业务。</li></ul><h4 id="_2-3-三个审核实现类" tabindex="-1"><a class="header-anchor" href="#_2-3-三个审核实现类" aria-hidden="true">#</a> 2.3 三个审核实现类</h4><p><strong>Level1AuthLink</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Level1AuthLink</span> <span class="token keyword">extends</span> <span class="token class-name">AuthLink</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">Level1AuthLink</span><span class="token punctuation">(</span><span class="token class-name">String</span> levelUserId<span class="token punctuation">,</span> <span class="token class-name">String</span> levelUserName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>levelUserId<span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">AuthInfo</span> <span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> orderId<span class="token punctuation">,</span> <span class="token class-name">Date</span> authDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">queryAuthInfo</span><span class="token punctuation">(</span>levelUserId<span class="token punctuation">,</span> orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> date<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：待一级审批负责人 &quot;</span><span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">AuthLink</span> next <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：一级审批完成负责人&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; 时间：&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot; 审批人：&quot;</span><span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> next<span class="token punctuation">.</span><span class="token function">doAuth</span><span class="token punctuation">(</span>uId<span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> authDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Level2AuthLink</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Level2AuthLink</span> <span class="token keyword">extends</span> <span class="token class-name">AuthLink</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Date</span> beginDate <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-06-11 00:00:00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> endDate <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-06-20 23:59:59&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Level2AuthLink</span><span class="token punctuation">(</span><span class="token class-name">String</span> levelUserId<span class="token punctuation">,</span> <span class="token class-name">String</span> levelUserName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ParseException</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>levelUserId<span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">AuthInfo</span> <span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> orderId<span class="token punctuation">,</span> <span class="token class-name">Date</span> authDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">queryAuthInfo</span><span class="token punctuation">(</span>levelUserId<span class="token punctuation">,</span> orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> date<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：待二级审批负责人 &quot;</span><span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">AuthLink</span> next <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：二级审批完成负责人&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; 时间：&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot; 审批人：&quot;</span><span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>authDate<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>beginDate<span class="token punctuation">)</span> <span class="token operator">||</span> authDate<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>endDate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：二级审批完成负责人&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; 时间：&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot; 审批人：&quot;</span><span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> next<span class="token punctuation">.</span><span class="token function">doAuth</span><span class="token punctuation">(</span>uId<span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> authDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Level3AuthLink</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Level3AuthLink</span> <span class="token keyword">extends</span> <span class="token class-name">AuthLink</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Date</span> beginDate <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-06-01 00:00:00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> endDate <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-06-25 23:59:59&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Level3AuthLink</span><span class="token punctuation">(</span><span class="token class-name">String</span> levelUserId<span class="token punctuation">,</span> <span class="token class-name">String</span> levelUserName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ParseException</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>levelUserId<span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">AuthInfo</span> <span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token class-name">String</span> uId<span class="token punctuation">,</span> <span class="token class-name">String</span> orderId<span class="token punctuation">,</span> <span class="token class-name">Date</span> authDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">queryAuthInfo</span><span class="token punctuation">(</span>levelUserId<span class="token punctuation">,</span> orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> date<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：待三级审批负责人 &quot;</span><span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">AuthLink</span> next <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：三级审批负责人完成&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; 时间：&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot; 审批人：&quot;</span><span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>authDate<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>beginDate<span class="token punctuation">)</span> <span class="token operator">||</span> authDate<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>endDate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AuthInfo</span><span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单号：&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> <span class="token string">&quot; 状态：三级审批负责人完成&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; 时间：&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot; 审批人：&quot;</span><span class="token punctuation">,</span> levelUserName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> next<span class="token punctuation">.</span><span class="token function">doAuth</span><span class="token punctuation">(</span>uId<span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> authDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如上三个类；<code>Level1AuthLink</code>、<code>Level2AuthLink</code>、<code>Level3AuthLink</code>，实现了不同的审核级别处理的简单逻辑。</li><li>例如第一个审核类中会先判断是否审核通过，如果没有审核通过则返回结果给调用方，引导去审核。<em>（这里简单模拟审核后有时间信息不为空，作为判断条件）</em></li><li>判断完成后获取下一个审核节点；<code>super.next();</code>，如果不存在下一个节点，则直接返回结果。</li><li>之后是根据不同的业务时间段进行判断是否需要，二级和一级的审核。</li><li>最后返回下一个审核结果；<code>next.doAuth(uId, orderId, authDate);</code>，有点像递归调用。</li></ul><h3 id="_3-测试验证-1" tabindex="-1"><a class="header-anchor" href="#_3-测试验证-1" aria-hidden="true">#</a> 3. 测试验证</h3><h4 id="_3-1-编写测试类-1" tabindex="-1"><a class="header-anchor" href="#_3-1-编写测试类-1" aria-hidden="true">#</a> 3.1 编写测试类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_AuthLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ParseException</span> <span class="token punctuation">{</span>
    <span class="token class-name">AuthLink</span> authLink <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Level3AuthLink</span><span class="token punctuation">(</span><span class="token string">&quot;1000013&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;王工&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">appendNext</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Level2AuthLink</span><span class="token punctuation">(</span><span class="token string">&quot;1000012&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张经理&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">appendNext</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Level1AuthLink</span><span class="token punctuation">(</span><span class="token string">&quot;1000011&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;段总&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>authLink<span class="token punctuation">.</span><span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 模拟三级负责人审批</span>
    <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">&quot;1000013&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;模拟三级负责人审批，王工&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>authLink<span class="token punctuation">.</span><span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 模拟二级负责人审批</span>
    <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">&quot;1000012&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;模拟二级负责人审批，张经理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>authLink<span class="token punctuation">.</span><span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 模拟一级负责人审批</span>
    <span class="token class-name">AuthService</span><span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">&quot;1000011&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;模拟一级负责人审批，段总&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>authLink<span class="token punctuation">.</span><span class="token function">doAuth</span><span class="token punctuation">(</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000998004813441&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里包括最核心的责任链创建，实际的业务中会包装到控制层；<code> AuthLink authLink = new Level3AuthLink(&quot;1000013&quot;, &quot;王工&quot;) .appendNext(new Level2AuthLink(&quot;1000012&quot;, &quot;张经理&quot;) .appendNext(new Level1AuthLink(&quot;1000011&quot;, &quot;段总&quot;)));</code> 通过把不同的责任节点进行组装，构成一条完整业务的责任链。</li><li>接下里不断的执行查看审核链路<code>authLink.doAuth(...)</code>，通过返回结果对数据进行3、2、1级负责人审核，直至最后审核全部完成。</li></ul><h4 id="_3-2-测试结果-1" tabindex="-1"><a class="header-anchor" href="#_3-2-测试结果-1" aria-hidden="true">#</a> 3.2 测试结果</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">23</span><span class="token operator">:</span><span class="token number">49</span><span class="token operator">:</span><span class="token number">46.585</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;单号：1000998004813441 状态：待三级审批负责人 王工&quot;</span><span class="token punctuation">}</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">49</span><span class="token operator">:</span><span class="token number">46.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：模拟三级负责人审批，王工
<span class="token number">23</span><span class="token operator">:</span><span class="token number">49</span><span class="token operator">:</span><span class="token number">46.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;单号：1000998004813441 状态：待二级审批负责人 张经理&quot;</span><span class="token punctuation">}</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">49</span><span class="token operator">:</span><span class="token number">46.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：模拟二级负责人审批，张经理
<span class="token number">23</span><span class="token operator">:</span><span class="token number">49</span><span class="token operator">:</span><span class="token number">46.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;单号：1000998004813441 状态：待一级审批负责人 段总&quot;</span><span class="token punctuation">}</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">49</span><span class="token operator">:</span><span class="token number">46.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：模拟一级负责人审批，段总
<span class="token number">23</span><span class="token operator">:</span><span class="token number">49</span><span class="token operator">:</span><span class="token number">46.590</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：<span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;info&quot;</span><span class="token operator">:</span><span class="token string">&quot;单号：1000998004813441 状态：一级审批完成负责人 时间：2020-06-18 23:49:46 审批人：段总&quot;</span><span class="token punctuation">}</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从上述的结果可以看到我们的责任链已经生效，按照责任链的结构一层层审批，直至最后输出审批结束到一级完成的结果。</li><li>这样责任链的设计方式可以方便的进行扩展和维护，也把if语句干掉了。</li></ul><h2 id="七、总结" tabindex="-1"><a class="header-anchor" href="#七、总结" aria-hidden="true">#</a> 七、总结</h2><ul><li>从上面代码从if语句重构到使用责任链模式开发可以看到，我们的代码结构变得清晰干净了，也解决了大量if语句的使用。并不是if语句不好，只不过if语句并不适合做系统流程设计，但是在做判断和行为逻辑处理中还是非常可以使用的。</li><li>在我们前面学习结构性模式中讲到过组合模式，它像是一颗组合树一样，我们搭建出一个流程决策树。其实这样的模式也是可以和责任链模型进行组合扩展使用，而这部分的重点在于如何关联<strong>链路的关联</strong>，最终的执行都是在执行在中间的关系链。</li><li>责任链模式很好的处理单一职责和开闭原则，简单了耦合也使对象关系更加清晰，而且外部的调用方并不需要关心责任链是如何进行处理的*(以上程序中可以把责任链的组合进行包装，在提供给外部使用)*。但除了这些优点外也需要是适当的场景才进行使用，避免造成性能以及编排混乱调试测试疏漏问题。</li></ul>`,65);function x(_,S){const a=o("ExternalLinkIcon");return c(),u("div",null,[i,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",r,[s("https://bugstack.cn"),t(a)])]),d,v,m,n("ol",null,[b,g,n("li",null,[s("涉及工程三个，可以通过关注"),h,s("："),n("a",q,[f,t(a)]),s("，回复"),w,s("获取(打开获取的链接，找到序号18)")])]),y,n("ul",null,[n("li",null,[s("图片来自："),n("a",A,[s("https://refactoringguru.cn/design-patterns/chain-of-responsibility"),t(a)])])]),I])}const N=e(l,[["render",x],["__file","2020-06-18-zhongxue Java shejimoshi《shizhanzerenlianmoshi》.html.vue"]]);export{N as default};
