import{_ as t,o as a,c as o,a as e,b as s}from"./app-3RcBQnkC.js";const _={},c=e("h1",{id:"_10-1-介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_10-1-介绍","aria-hidden":"true"},"#"),s(" 10.1 介绍")],-1),n=e("p",null,"与核心 API 的情景一样，在 ASM 4.0 的树 API 中已经引入了一种新机制，用于确保未来ASM 版本的后向兼容性。但要再次强调，仅靠 ASM 自身不能保证这一性质。它要求用户在编写代码时遵循一些简单的规则。本章的目标就是介绍这些规则，并大致介绍 ASM 树 API 中用于确保后向兼容的内部机制。",-1),r=[c,n];function d(i,h){return a(),o("div",null,r)}const f=t(_,[["render",d],["__file","10.1jieshao.html.vue"]]);export{f as default};
