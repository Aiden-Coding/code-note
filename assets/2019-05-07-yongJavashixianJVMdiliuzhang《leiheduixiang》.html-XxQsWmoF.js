import{_ as p,r as t,o,c as e,a as n,b as s,d as c,e as l}from"./app-3RcBQnkC.js";const u={},i=n("h1",{id:"用java实现jvm第六章《类和对象》",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#用java实现jvm第六章《类和对象》","aria-hidden":"true"},"#"),s(" 用Java实现JVM第六章《类和对象》")],-1),k=n("br",null,null,-1),r={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=l(`<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="案例介绍" tabindex="-1"><a class="header-anchor" href="#案例介绍" aria-hidden="true">#</a> 案例介绍</h2><p>本案例通过java代码实现jvm规范中指令集和解释器，完成后就可以开始执行1到100的加和计算。</p><blockquote><p>Java虚拟机顾名思义，就是一台虚拟的机器，而字节码（bytecode）就是运行在这台虚拟机器上的机器码。我们已经知道，每一个类或者接口都会被Java编译器编译成一个class文件，类或接口的方法信息就放在class文件的method_info结构中。如果方法不是抽象的，也不是本地方法，方法的Java代码就会被编译器编译成字节码（即使方法是空的，编译器也会生成一条return语句），存在method_info结构的Code属性中。</p></blockquote><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h2><ol><li>jdk 1.8.0</li><li>IntelliJ IDEA Community Edition 2018.3.1 x64</li></ol><h2 id="配置信息" tabindex="-1"><a class="header-anchor" href="#配置信息" aria-hidden="true">#</a> 配置信息</h2><ol><li>调试配置 <ol><li>配置位置：Run/Debug Configurations -&gt; program arguments</li><li>配置内容：-Xjre &quot;C:\\Program Files\\Java\\jdk1.8.0_161\\jre&quot; E:\\itstack\\git\\istack-demo\\itstack-demo-jvm\\itstack-demo-jvm-06\\target\\test-classes\\org\\itstack\\demo\\test\\HelloWorld</li></ol></li></ol><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>jvm<span class="token operator">-</span><span class="token number">06</span>
├── pom<span class="token punctuation">.</span>xml
└── src
    └── main
    │    └── java
    │        └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm
	│             ├── classfile
    │             │   ├── attributes   <span class="token punctuation">{</span><span class="token class-name">BootstrapMethods</span><span class="token operator">/</span><span class="token class-name">Code</span><span class="token operator">/</span><span class="token class-name">ConstantValue</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
    │             │   ├── constantpool <span class="token punctuation">{</span><span class="token constant">CONSTANT_TAG_CLASS</span><span class="token operator">/</span><span class="token constant">CONSTANT_TAG_FIELDREF</span><span class="token operator">/</span><span class="token constant">CONSTANT_TAG_METHODREF</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
    │             │   ├── <span class="token class-name">ClassFile</span><span class="token punctuation">.</span>java
    │             │   ├── <span class="token class-name">ClassReader</span><span class="token punctuation">.</span>java
    │             │   └── <span class="token class-name">MemberInfo</span><span class="token punctuation">.</span>java	
    │             ├── classpath
    │             │   ├── impl
    │             │   │   ├── <span class="token class-name">CompositeEntry</span><span class="token punctuation">.</span>java
    │             │   │   ├── <span class="token class-name">DirEntry</span><span class="token punctuation">.</span>java 
    │             │   │   ├── <span class="token class-name">WildcardEntry</span><span class="token punctuation">.</span>java 
    │             │   │   └── <span class="token class-name">ZipEntry</span><span class="token punctuation">.</span>java    
    │             │   ├── <span class="token class-name">Classpath</span><span class="token punctuation">.</span>java
    │             │   └── <span class="token class-name">Entry</span><span class="token punctuation">.</span>java   
    │             ├── classpath
    │             │   ├── base
    │             │   ├── comparisons
    │             │   ├── constants
    │             │   ├── control
    │             │   ├── conversions
    │             │   ├── extended
    │             │   ├── loads
    │             │   ├── math
    │             │   │   ├── add
    │             │   │   ├── and
    │             │   │   ├── div
    │             │   │   ├── iinc
    │             │   │   ├── mul
    │             │   │   ├── neg
    │             │   │   ├── or
    │             │   │   ├── rem
    │             │   │   ├── sh
    │             │   │   ├── sub
    │             │   │   └── xor
    │             │   ├── stack
    │             │   ├── store
    │             │   └── <span class="token class-name">Factory</span>	
    │             ├── rtda
    │             │   ├── heap
    │             │   │   ├── constantpool
    │             │   │   ├── methodarea
    │             │   │   │   ├── <span class="token class-name">Class</span><span class="token punctuation">.</span>java 	
    │             │   │   │   ├── <span class="token class-name">ClassMember</span><span class="token punctuation">.</span>java	
    │             │   │   │   ├── <span class="token class-name">Field</span><span class="token punctuation">.</span>java	
    │             │   │   │   ├── <span class="token class-name">Method</span><span class="token punctuation">.</span>java	
    │             │   │   │   ├── <span class="token class-name">Object</span><span class="token punctuation">.</span>java	
    │             │   │   │   └── <span class="token class-name">Slots</span><span class="token punctuation">.</span>java		
    │             │   │   └── <span class="token class-name">ClassLoader</span><span class="token punctuation">.</span>java	
    │             │   ├── <span class="token class-name">Frame</span><span class="token punctuation">.</span>java
    │             │   ├── <span class="token class-name">JvmStack</span><span class="token punctuation">.</span>java
    │             │   ├── <span class="token class-name">LocalVars</span><span class="token punctuation">.</span>java
    │             │   ├── <span class="token class-name">OperandStack</span><span class="token punctuation">.</span>java
    │             │   ├── <span class="token class-name">Slot</span><span class="token punctuation">.</span>java	
    │             │   └── <span class="token class-name">Thread</span><span class="token punctuation">.</span>java
    │             ├── <span class="token class-name">Cmd</span><span class="token punctuation">.</span>java
    │             ├── <span class="token class-name">Interpret</span><span class="token punctuation">.</span>java	
    │             └── <span class="token class-name">Main</span><span class="token punctuation">.</span>java
    └── test
         └── java
             └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test
                 └── <span class="token class-name">HelloWorld</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Class.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Class</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> accessFlags<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> superClassName<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaceNames<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">RunTimeConstantPool</span> runTimeConstantPool<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">ClassLoader</span> loader<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Class</span> superClass<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> instanceSlotCount<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> staticSlotCount<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Slots</span> staticVars<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token punctuation">(</span><span class="token class-name">ClassFile</span> classFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">=</span> classFile<span class="token punctuation">.</span><span class="token function">accessFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> classFile<span class="token punctuation">.</span><span class="token function">className</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>superClassName <span class="token operator">=</span> classFile<span class="token punctuation">.</span><span class="token function">superClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>interfaceNames <span class="token operator">=</span> classFile<span class="token punctuation">.</span><span class="token function">interfaceNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>runTimeConstantPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RunTimeConstantPool</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> classFile<span class="token punctuation">.</span><span class="token function">constantPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fields <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Field</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newFields</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> classFile<span class="token punctuation">.</span><span class="token function">fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>methods <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newMethods</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> classFile<span class="token punctuation">.</span><span class="token function">methods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_PUBLIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isFinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_FINAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSuper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_SUPER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_INTERFACE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAbstract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_ABSTRACT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSynthetic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_SYNTHETIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_ANNOTATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_ENUM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">RunTimeConstantPool</span> <span class="token function">constantPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>runTimeConstantPool<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Slots</span> <span class="token function">staticVars</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>staticVars<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAccessibleTo</span><span class="token punctuation">(</span><span class="token class-name">Class</span> other<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Method</span> <span class="token function">getMainMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStaticMethod</span><span class="token punctuation">(</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;([Ljava/lang/String;)V&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Method</span> <span class="token function">getStaticMethod</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> descriptor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> method <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>methods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> method<span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> method<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">newObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAssignableFrom</span><span class="token punctuation">(</span><span class="token class-name">Class</span> other<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> other<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>other<span class="token punctuation">.</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSubClassOf</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isImplements</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSubClassOf</span><span class="token punctuation">(</span><span class="token class-name">Class</span> other<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span> c <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>superClass<span class="token punctuation">;</span> c <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> c <span class="token operator">=</span> c<span class="token punctuation">.</span>superClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> other<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isImplements</span><span class="token punctuation">(</span><span class="token class-name">Class</span> other<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span> c <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> c <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> c <span class="token operator">=</span> c<span class="token punctuation">.</span>superClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span> clazz <span class="token operator">:</span> c<span class="token punctuation">.</span>interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">==</span> other <span class="token operator">||</span> clazz<span class="token punctuation">.</span><span class="token function">isSubInterfaceOf</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSubInterfaceOf</span><span class="token punctuation">(</span><span class="token class-name">Class</span> iface<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span> superInterface <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>superInterface <span class="token operator">==</span> iface <span class="token operator">||</span> superInterface<span class="token punctuation">.</span><span class="token function">isSubInterfaceOf</span><span class="token punctuation">(</span>iface<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>ClassMember.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClassMember</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> accessFlags<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> descriptor<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Class</span> clazz<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">copyMemberInfo</span><span class="token punctuation">(</span><span class="token class-name">MemberInfo</span> memberInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">=</span> memberInfo<span class="token punctuation">.</span><span class="token function">accessFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> memberInfo<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>descriptor <span class="token operator">=</span> memberInfo<span class="token punctuation">.</span><span class="token function">descriptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_PUBLIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_PRIVATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isProtected</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_PROTECTED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_STATIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isFinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_FINAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSynthetic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_SYNTHETIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">descriptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>descriptor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Class</span> <span class="token function">clazz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clazz<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAccessibleTo</span><span class="token punctuation">(</span><span class="token class-name">Class</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Class</span> c <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clazz<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isProtected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> d <span class="token operator">==</span> c <span class="token operator">||</span> c<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> d <span class="token operator">==</span> c<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Field.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>rtda<span class="token punctuation">.</span>heap<span class="token punctuation">.</span>methodarea</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span></span><span class="token class-name">MemberInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ConstantValueAttribute</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>rtda<span class="token punctuation">.</span>heap<span class="token punctuation">.</span>constantpool<span class="token punctuation">.</span></span><span class="token class-name">AccessFlags</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Field</span> <span class="token keyword">extends</span> <span class="token class-name">ClassMember</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> constValueIndex<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> slotId<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">newFields</span><span class="token punctuation">(</span><span class="token class-name">Class</span> clazz<span class="token punctuation">,</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cfFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Field</span><span class="token punctuation">[</span>cfFields<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cfFields<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fields<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Field</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            fields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>clazz <span class="token operator">=</span> clazz<span class="token punctuation">;</span>
            fields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">copyMemberInfo</span><span class="token punctuation">(</span>cfFields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            fields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">copyAttributes</span><span class="token punctuation">(</span>cfFields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> fields<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">copyAttributes</span><span class="token punctuation">(</span><span class="token class-name">MemberInfo</span> cfField<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ConstantValueAttribute</span> valAttr <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">cfField<span class="token punctuation">.</span></span>ConstantValueAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> valAttr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>constValueIndex <span class="token operator">=</span> valAttr<span class="token punctuation">.</span><span class="token function">constantValueIdx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isVolatile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_VOLATILE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isTransient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_TRANSIENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_ENUM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">constValueIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constValueIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">slotId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>slotId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isLongOrDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;J&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Method.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>rtda<span class="token punctuation">.</span>heap<span class="token punctuation">.</span>methodarea</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span></span><span class="token class-name">MemberInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classfile<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">CodeAttribute</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>rtda<span class="token punctuation">.</span>heap<span class="token punctuation">.</span>constantpool<span class="token punctuation">.</span></span><span class="token class-name">AccessFlags</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Method</span> <span class="token keyword">extends</span> <span class="token class-name">ClassMember</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> maxStack<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> maxLocals<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> code<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">newMethods</span><span class="token punctuation">(</span><span class="token class-name">Class</span> clazz<span class="token punctuation">,</span> <span class="token class-name">MemberInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cfMethods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Method</span><span class="token punctuation">[</span>cfMethods<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cfMethods<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            methods<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            methods<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>clazz <span class="token operator">=</span> clazz<span class="token punctuation">;</span>
            methods<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">copyMemberInfo</span><span class="token punctuation">(</span>cfMethods<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            methods<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">copyAttributes</span><span class="token punctuation">(</span>cfMethods<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> methods<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">copyAttributes</span><span class="token punctuation">(</span><span class="token class-name">MemberInfo</span> cfMethod<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CodeAttribute</span> codeAttr <span class="token operator">=</span> cfMethod<span class="token punctuation">.</span><span class="token function">codeAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> codeAttr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>maxStack <span class="token operator">=</span> codeAttr<span class="token punctuation">.</span><span class="token function">maxStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>maxLocals <span class="token operator">=</span> codeAttr<span class="token punctuation">.</span><span class="token function">maxLocals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> codeAttr<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSynchronized</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_SYNCHRONIZED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_BRIDGE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isVarargs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_VARARGS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isNative</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_NATIVE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAbstract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_ABSTRACT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isStrict</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>accessFlags <span class="token operator">&amp;</span> <span class="token class-name">AccessFlags</span><span class="token punctuation">.</span><span class="token constant">ACC_STRICT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxStack<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxLocals</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxLocals<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>code<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Object.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>rtda<span class="token punctuation">.</span>heap<span class="token punctuation">.</span>methodarea</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Object</span> <span class="token punctuation">{</span>

    <span class="token class-name">Class</span> clazz<span class="token punctuation">;</span>
    <span class="token class-name">Slots</span> fields<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token class-name">Class</span> clazz<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>clazz <span class="token operator">=</span> clazz<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fields <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Slots</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span>instanceSlotCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Class</span> <span class="token function">clazz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clazz<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Slots</span> <span class="token function">fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fields<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isInstanceOf</span><span class="token punctuation">(</span><span class="token class-name">Class</span> clazz<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> clazz<span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Slots.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>rtda<span class="token punctuation">.</span>heap<span class="token punctuation">.</span>methodarea</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>rtda<span class="token punctuation">.</span></span><span class="token class-name">Slot</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Slots</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Slot</span><span class="token punctuation">[</span><span class="token punctuation">]</span> slots<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Slots</span><span class="token punctuation">(</span><span class="token keyword">int</span> slotCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>slotCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            slots <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Slot</span><span class="token punctuation">[</span>slotCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> slotCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                slots<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Slot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setInt</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>slots<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>num <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getInt</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>slots<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFloat</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">,</span> <span class="token keyword">float</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>slots<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">float</span> <span class="token function">getFloat</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>slots<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLong</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">,</span> <span class="token keyword">long</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>slots<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> val<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>slots<span class="token punctuation">[</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>val <span class="token operator">&gt;&gt;</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">getLong</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> low <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>slots<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token punctuation">;</span>
        <span class="token keyword">int</span> high <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>slots<span class="token punctuation">[</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> high <span class="token operator">&lt;&lt;</span> <span class="token number">32</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> low<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDouble</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">,</span> <span class="token keyword">double</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setLong</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRef</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">,</span> <span class="token class-name">Object</span> ref<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>slots<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>ref <span class="token operator">=</span> ref<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getRef</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>slots<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>ref<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试结果-可以看到已经输出-5050" tabindex="-1"><a class="header-anchor" href="#测试结果-可以看到已经输出-5050" aria-hidden="true">#</a> 测试结果 {可以看到已经输出；5050}</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token string">&quot;C:\\Program Files\\Java\\jdk1.8.0_161\\bin\\java.exe&quot;</span> <span class="token string">&quot;-javaagent:D:\\Program Files\\JetBrains\\IntelliJ IDEA Community Edition 2018.3.1\\lib\\idea_rt.jar=61887:D:\\Program Files\\JetBrains\\IntelliJ IDEA Community Edition 2018.3.1\\bin&quot;</span> <span class="token operator">-</span><span class="token class-name">Dfile</span><span class="token punctuation">.</span>encoding<span class="token operator">=</span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span>classpath <span class="token string">&quot;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_161\\jre\\lib\\rt.jar;E:\\itstack\\git\\istack-demo\\itstack-demo-jvm\\itstack-demo-jvm-05\\target\\classes;D:\\Program Files (x86)\\apache-maven-2.2.1\\repository\\com\\beust\\jcommander\\1.72\\jcommander-1.72.jar;D:\\Program Files (x86)\\apache-maven-2.2.1\\repository\\org\\projectlombok\\lombok\\1.18.0\\lombok-1.18.0.jar;D:\\Program Files (x86)\\apache-maven-2.2.1\\repository\\com\\alibaba\\fastjson\\1.2.40\\fastjson-1.2.40.jar&quot;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span></span>Main</span> <span class="token operator">-</span><span class="token class-name">Xjre</span> <span class="token string">&quot;C:\\Program Files\\Java\\jdk1.8.0_161\\jre&quot;</span> <span class="token class-name">E</span><span class="token operator">:</span>\\itstack\\git\\istack<span class="token operator">-</span>demo\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>jvm\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>jvm<span class="token operator">-</span><span class="token number">05</span>\\target\\test<span class="token operator">-</span>classes\\org\\itstack\\demo\\test\\<span class="token class-name">HelloWorld</span>
classpath<span class="token operator">:</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classpath<span class="token punctuation">.</span></span>Classpath</span><span class="token annotation punctuation">@4bf558aa</span> <span class="token keyword">class</span><span class="token operator">:</span><span class="token class-name">E</span><span class="token operator">:</span>\\itstack\\git\\istack<span class="token operator">-</span>demo\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>jvm\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>jvm<span class="token operator">-</span><span class="token number">05</span>\\target\\test<span class="token operator">-</span>classes\\org\\itstack\\demo\\test\\<span class="token class-name">HelloWorld</span> args<span class="token operator">:</span><span class="token keyword">null</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x03</span> <span class="token operator">-&gt;</span> <span class="token constant">ICONST_0</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x3c</span> <span class="token operator">-&gt;</span> <span class="token constant">ISTORE_1</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x04</span> <span class="token operator">-&gt;</span> <span class="token constant">ICONST_1</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x3d</span> <span class="token operator">-&gt;</span> <span class="token constant">ISTORE_2</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x1c</span> <span class="token operator">-&gt;</span> <span class="token constant">ILOAD_2</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x10</span> <span class="token operator">-&gt;</span> <span class="token constant">BIPUSH</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0xa3</span> <span class="token operator">-&gt;</span> <span class="token constant">IF_ICMPGT</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x1b</span> <span class="token operator">-&gt;</span> <span class="token constant">ILOAD_1</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x1c</span> <span class="token operator">-&gt;</span> <span class="token constant">ILOAD_2</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x60</span> <span class="token operator">-&gt;</span> <span class="token constant">IADD</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">4950</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">4950</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x3c</span> <span class="token operator">-&gt;</span> <span class="token constant">ISTORE_1</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">5050</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">5050</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x84</span> <span class="token operator">-&gt;</span> <span class="token constant">IINC</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">5050</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">5050</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0xa7</span> <span class="token operator">-&gt;</span> <span class="token constant">GOTO</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">5050</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">5050</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x1c</span> <span class="token operator">-&gt;</span> <span class="token constant">ILOAD_2</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">5050</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">5050</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0x10</span> <span class="token operator">-&gt;</span> <span class="token constant">BIPUSH</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0xa3</span> <span class="token operator">-&gt;</span> <span class="token constant">IF_ICMPGT</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token number">5050</span>
寄存器<span class="token punctuation">(</span>指令<span class="token punctuation">)</span>：<span class="token number">0xb1</span> <span class="token operator">-&gt;</span> <span class="token constant">RETURN</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 局部变量表：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">5050</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 操作数栈：<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token operator">:</span><span class="token number">5050</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token class-name">Exception</span> in thread <span class="token string">&quot;main&quot;</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>RuntimeException</span><span class="token operator">:</span> jvm stack is empty<span class="token operator">!</span>
	at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>rtda<span class="token punctuation">.</span></span>JvmStack</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token class-name">JvmStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">33</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>微信搜索「<strong>bugstack虫洞栈</strong>」公众号，关注后回复「<strong>用Java实现jvm源码</strong>」获取本文源码&amp;更多原创专题案例！</p>`,25);function v(m,b){const a=t("ExternalLinkIcon");return o(),e("div",null,[i,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",r,[s("https://bugstack.cn"),c(a)])]),d])}const w=p(u,[["render",v],["__file","2019-05-07-yongJavashixianJVMdiliuzhang《leiheduixiang》.html.vue"]]);export{w as default};
