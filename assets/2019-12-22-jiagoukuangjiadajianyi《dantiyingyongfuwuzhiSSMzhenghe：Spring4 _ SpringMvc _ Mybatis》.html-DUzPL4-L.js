import{_ as t,r as p,o as e,c as o,a as s,b as n,d as c,e as l}from"./app-3RcBQnkC.js";const r={},i=s("h1",{id:"架构框架搭建-一-《单体应用服务之ssm整合-spring4-springmvc-mybatis》",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#架构框架搭建-一-《单体应用服务之ssm整合-spring4-springmvc-mybatis》","aria-hidden":"true"},"#"),n(" 架构框架搭建(一)《单体应用服务之SSM整合：Spring4 + SpringMvc + Mybatis》")],-1),u=s("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=l(`<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="前言介绍" tabindex="-1"><a class="header-anchor" href="#前言介绍" aria-hidden="true">#</a> 前言介绍</h2><p>在实际的业务开发中按照不同的场景需要，会有不同的业务架构也就同时会有不同的技术框架来支撑。那么这个专题想把一些常用的框架整理下，方便平时使用的同时也做一些技术沉淀。那么本章节会先搭建一个比较适合个人项目或者一些小公司开发项目的单体架构模型。服务功能展示页面如下；</p><p><img src="https://bugstack.cn/assets/images/pic-content/2019/11/itstack-demo-frame-ssm-01.png" alt="微信公众号：bugstack虫洞栈 &amp; 展示页面"></p><h2 id="工程环境" tabindex="-1"><a class="header-anchor" href="#工程环境" aria-hidden="true">#</a> 工程环境</h2><ol><li>JDK1.8</li><li>Maven 3.2.3</li><li>Spring 4.3.24.RELEASE + SpringMvc + Mybatis 3.3.0</li><li>Mysql 5.6 + dbcp2</li><li>layui 2.5.4</li></ol><h2 id="工程模型" tabindex="-1"><a class="header-anchor" href="#工程模型" aria-hidden="true">#</a> 工程模型</h2><p>整体的工程模型采用DDD四层架构，相对于MVC模式来讲。嗯！相当于家里三居换四居了！</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>frame<span class="token operator">-</span>ssm
└── src
    ├── main
    │   ├── java
    │   │   └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo
    │   │       ├── application	
    │   │       │	└── <span class="token class-name">UserService</span><span class="token punctuation">.</span>java	
    │   │       ├── domain
    │   │       │	├── model
    │   │       │	│   ├── aggregates
    │   │       │	│   │   └── <span class="token class-name">UserInfoCollect</span><span class="token punctuation">.</span>java
    │   │       │	│   ├── req
    │   │       │	│   │   └── <span class="token class-name">UserReq</span><span class="token punctuation">.</span>java		
    │   │       │	│   └── vo
    │   │       │	│       └── <span class="token class-name">UserInfo</span><span class="token punctuation">.</span>java	
    │   │       │	├── repository
    │   │       │	│   └── <span class="token class-name">IUserRepository</span><span class="token punctuation">.</span>java	
    │   │       │	└── service	
    │   │       │	    └── <span class="token class-name">UserServiceImpl</span><span class="token punctuation">.</span>java	
    │   │       ├── infrastructure
    │   │       │	├── common
    │   │       │	│   ├── <span class="token class-name">EasyResult</span><span class="token punctuation">.</span>java
    │   │       │	│   └── <span class="token class-name">PageRequest</span><span class="token punctuation">.</span>java
    │   │       │	├── dao
    │   │       │	│   └── <span class="token class-name">IUserDao</span><span class="token punctuation">.</span>java	
    │   │       │	├── po
    │   │       │	│   └── <span class="token class-name">User</span><span class="token punctuation">.</span>java		
    │   │       │	└── repository
    │   │       │	    └── <span class="token class-name">UserRepository</span><span class="token punctuation">.</span>java	
    │   │       └── interfaces
    │   │        	└── <span class="token class-name">UserController</span><span class="token punctuation">.</span>java
    │   ├── resources	
    │   │   ├── mapper
    │   │   ├── props	
    │   │   ├── spring
    │   │   ├── logback<span class="token punctuation">.</span>xml
    │   │   ├── mybatis<span class="token operator">-</span>config<span class="token punctuation">.</span>xml
    │   │   └── spring<span class="token operator">-</span>config<span class="token punctuation">.</span>xml
    │   └── webapp
    │       ├── page
    │       ├── res
    │       ├── <span class="token constant">WEB</span><span class="token operator">-</span><span class="token constant">INF</span>
    │       ├── index<span class="token punctuation">.</span>html
    │       └── res_layui<span class="token punctuation">.</span>html
    └── test
         └── java
             └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test
                 └── <span class="token class-name">ApiTest</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>以下对工程模块进行介绍，整体源码获取，可以关注公众号：bugstack虫洞栈，回复：框架搭建</strong></p><h3 id="application应用层" tabindex="-1"><a class="header-anchor" href="#application应用层" aria-hidden="true">#</a> application应用层</h3><p>应用层是比较薄的一层，不做具体逻辑开发。本工程里只包括服务的定义，具体逻辑有领域层实现。如果需要扩展可以做一些应用服务编排。</p><blockquote><p>application/UserService.java &amp; 定义接口</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 微信公众号：bugstack虫洞栈 | 欢迎关注学习专题案例
 * 论坛：http://bugstack.cn
 * Create by 付政委 on @2019
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>

    <span class="token class-name">UserInfoCollect</span> <span class="token function">queryUserInfoList</span><span class="token punctuation">(</span><span class="token class-name">UserReq</span> req<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="domain领域层" tabindex="-1"><a class="header-anchor" href="#domain领域层" aria-hidden="true">#</a> domain领域层</h3><p>领域层是整个工程的核心服务层，这里负责处理具体的核心功能，完成领域服务。domain下可以有多个领域，每个领域里包括；聚合、请求对象、业务对象、仓储、服务。</p><blockquote><p>domain/model/aggregates/UserInfoCollect.java &amp; 定义聚合查询结果</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 微信公众号：bugstack虫洞栈 | 欢迎关注学习专题案例
 * 论坛：http://bugstack.cn
 * Create by 付政委 on @2019
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoCollect</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Long</span> count<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> userInfoList<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">UserInfoCollect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">UserInfoCollect</span><span class="token punctuation">(</span><span class="token class-name">Long</span> count<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> userInfoList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> count<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>userInfoList <span class="token operator">=</span> userInfoList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token class-name">Long</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserInfoList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userInfoList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserInfoList</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> userInfoList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>userInfoList <span class="token operator">=</span> userInfoList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>domain/repository/IUserRepository.java &amp; 定义仓储服务</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 微信公众号：bugstack虫洞栈 | 欢迎关注学习专题案例
 * 论坛：http://bugstack.cn
 * Create by 付政委 on @2019
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IUserRepository</span> <span class="token punctuation">{</span>

    <span class="token class-name">UserInfoCollect</span> <span class="token function">queryUserInfoList</span><span class="token punctuation">(</span><span class="token class-name">UserReq</span> req<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>domain/service/UserServiceImpl.java &amp; 对业务层功能进行实现</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 微信公众号：bugstack虫洞栈 | 欢迎关注学习专题案例
 * 论坛：http://bugstack.cn
 * Create by 付政委 on @2019
 */</span>
<span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">&quot;userService&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;userRepository&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">IUserRepository</span> userRepository<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">UserInfoCollect</span> <span class="token function">queryUserInfoList</span><span class="token punctuation">(</span><span class="token class-name">UserReq</span> req<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userRepository<span class="token punctuation">.</span><span class="token function">queryUserInfoList</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="infrastructure基础层" tabindex="-1"><a class="header-anchor" href="#infrastructure基础层" aria-hidden="true">#</a> infrastructure基础层</h3><ol><li>实现领域层仓储定义</li><li>数据库操作为非业务属性的功能操作</li><li>在仓储实现层进行组合装配DAO&amp;Redis&amp;Cache等</li></ol><blockquote><p>infrastructure/dao/IUserDao.java &amp; 数据库操作</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 微信公众号：bugstack虫洞栈 | 欢迎关注学习专题案例
 * 论坛：http://bugstack.cn
 * Create by 付政委 on @2019
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IUserDao</span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryUserInfoList</span><span class="token punctuation">(</span><span class="token class-name">UserReq</span> req<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Long</span> <span class="token function">queryUserInfoCount</span><span class="token punctuation">(</span><span class="token class-name">UserReq</span> req<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>infrastructure/repository/UserRepository.java &amp; 仓储功能实现如果有redis可以进行包装使用</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 微信公众号：bugstack虫洞栈 | 欢迎关注学习专题案例
 * 论坛：http://bugstack.cn
 * Create by 付政委 on @2019
 */</span>
<span class="token annotation punctuation">@Repository</span><span class="token punctuation">(</span><span class="token string">&quot;userRepository&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserRepository</span> <span class="token keyword">implements</span> <span class="token class-name">IUserRepository</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">IUserDao</span> userDao<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">UserInfoCollect</span> <span class="token function">queryUserInfoList</span><span class="token punctuation">(</span><span class="token class-name">UserReq</span> req<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Long</span> count <span class="token operator">=</span> userDao<span class="token punctuation">.</span><span class="token function">queryUserInfoCount</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userList <span class="token operator">=</span> userDao<span class="token punctuation">.</span><span class="token function">queryUserInfoList</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> userInfoList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>user <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">UserInfo</span> userInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            userInfo<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            userInfo<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            userInfo<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            userInfo<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            userInfo<span class="token punctuation">.</span><span class="token function">setEntryTime</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getEntryTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            userInfo<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            userInfoList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserInfoCollect</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> userInfoList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="interfaces接口层" tabindex="-1"><a class="header-anchor" href="#interfaces接口层" aria-hidden="true">#</a> interfaces接口层</h3><ol><li>包装应用接口对外提供api，目前这一层比较简单只需要进行接口使用即可</li><li>如果是对外部提供服务接口，那么可以使用DTO方式进行转换，避免污染到业务类</li></ol><blockquote><p>interfaces/UserController.java &amp; 提供接口服务</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/api/user/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">UserController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;queryUserInfoList&quot;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token keyword">public</span> <span class="token class-name">EasyResult</span> <span class="token function">queryUserInfoList</span><span class="token punctuation">(</span><span class="token class-name">String</span> json<span class="token punctuation">,</span> <span class="token class-name">String</span> page<span class="token punctuation">,</span> <span class="token class-name">String</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;查询用户信息列表开始。json：{}&quot;</span><span class="token punctuation">,</span> json<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">UserReq</span> req <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">UserReq</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> req<span class="token punctuation">)</span> req <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserReq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            req<span class="token punctuation">.</span><span class="token function">setPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">UserInfoCollect</span> userInfoCollect <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">queryUserInfoList</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;查询用户信息列表完成。userInfoCollect：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>userInfoCollect<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">EasyResult</span><span class="token punctuation">.</span><span class="token function">buildEasyResultSuccess</span><span class="token punctuation">(</span>userInfoCollect<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> userInfoCollect<span class="token punctuation">.</span><span class="token function">getUserInfoList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;查询用户信息列表失败。json：{}&quot;</span><span class="token punctuation">,</span> json<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">EasyResult</span><span class="token punctuation">.</span><span class="token function">buildEasyResultError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="resource配置" tabindex="-1"><a class="header-anchor" href="#resource配置" aria-hidden="true">#</a> resource配置</h3><p>这里包括了Spring、SpringMvc、mybatis、以及日志信息的配置；</p><blockquote><p>mapper/User_Mapper.xml</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">?</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> mapper
        <span class="token constant">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>
        <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>mapper namespace<span class="token operator">=</span><span class="token string">&quot;org.itstack.demo.infrastructure.dao.IUserDao&quot;</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">&quot;queryUserInfoCount&quot;</span> resultType<span class="token operator">=</span><span class="token string">&quot;java.lang.Long&quot;</span><span class="token operator">&gt;</span>
        select <span class="token function">count</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
        from user
        <span class="token generics"><span class="token punctuation">&lt;</span>where<span class="token punctuation">&gt;</span></span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;name != null&quot;</span><span class="token operator">&gt;</span>
                and name <span class="token operator">=</span> #<span class="token punctuation">{</span>name<span class="token punctuation">}</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;status != null&quot;</span><span class="token operator">&gt;</span>
                and status <span class="token operator">=</span> #<span class="token punctuation">{</span>status<span class="token punctuation">}</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>where<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">&quot;queryUserInfoList&quot;</span> resultType<span class="token operator">=</span><span class="token string">&quot;org.itstack.demo.infrastructure.po.User&quot;</span><span class="token operator">&gt;</span>
      <span class="token class-name">SELECT</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> address<span class="token punctuation">,</span> entryTime<span class="token punctuation">,</span> status<span class="token punctuation">,</span> remark<span class="token punctuation">,</span> createTime<span class="token punctuation">,</span> updateTime
      <span class="token constant">FROM</span> user
      <span class="token generics"><span class="token punctuation">&lt;</span>where<span class="token punctuation">&gt;</span></span>
          <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;name != null&quot;</span><span class="token operator">&gt;</span>
              and name <span class="token operator">=</span> #<span class="token punctuation">{</span>name<span class="token punctuation">}</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;status != null&quot;</span><span class="token operator">&gt;</span>
              and status <span class="token operator">=</span> #<span class="token punctuation">{</span>status<span class="token punctuation">}</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>where<span class="token operator">&gt;</span>
      limit #<span class="token punctuation">{</span>pageStart<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>pageEnd<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">/</span>mapper<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>props/jdbc.properties &amp; 数据库链接信息</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>db<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>driverClassName<span class="token operator">=</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span>
db<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>url<span class="token operator">=</span>jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>itstack<span class="token operator">?</span>createDatabaseIfNotExist<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>amp<span class="token punctuation">;</span>characterEncoding<span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&amp;</span>amp<span class="token punctuation">;</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span>
db<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>username<span class="token operator">=</span>root
db<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>password<span class="token operator">=</span><span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>spring/spring-config-datasource.xml &amp; dbcp2数据源配置以及扫描Mapper等</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">?</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>beans xmlns<span class="token operator">=</span><span class="token string">&quot;http://www.springframework.org/schema/beans&quot;</span>
       xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
       xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span>&quot;http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans
	http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans<span class="token operator">/</span>spring<span class="token operator">-</span>beans<span class="token punctuation">.</span>xsd&quot;<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">1.</span>数据库连接池 <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">&quot;dataSource&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;org.apache.commons.dbcp2.BasicDataSource&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;driverClassName&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;\${db.jdbc.driverClassName}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;url&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;\${db.jdbc.url}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;username&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;\${db.jdbc.username}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;password&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;\${db.jdbc.password}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;maxTotal&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;20&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;maxIdle&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;maxWaitMillis&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;15000&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;timeBetweenEvictionRunsMillis&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;60000&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;minEvictableIdleTimeMillis&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;180000&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">2.</span>配置<span class="token class-name">SqlSessionFactory</span>对象 <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">&quot;sqlSessionFactory&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 注入数据库连接池 <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;dataSource&quot;</span> ref<span class="token operator">=</span><span class="token string">&quot;dataSource&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置<span class="token class-name">MyBaties</span>全局配置文件<span class="token operator">:</span>mybatis<span class="token operator">-</span>config<span class="token punctuation">.</span>xml <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;configLocation&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;classpath:mybatis-config.xml&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 扫描entity包 使用别名 <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;typeAliasesPackage&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;com.soecode.lyf.entity&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 扫描sql配置文件<span class="token operator">:</span>mapper需要的xml文件 <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;mapperLocations&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;classpath:mapper/*.xml&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">3.</span>配置扫描<span class="token class-name">Dao</span>接口包，动态实现<span class="token class-name">Dao</span>接口，注入到spring容器中 <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>bean <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 注入sqlSessionFactory <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;sqlSessionFactoryBeanName&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;sqlSessionFactory&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 给出需要扫描<span class="token class-name">Dao</span>接口包 <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;basePackage&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;org.itstack.demo.infrastructure.dao&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">/</span>beans<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>resources/mybatis-config.xml</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span> <span class="token operator">?</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> configuration
  <span class="token constant">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span>
  <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span><span class="token operator">&gt;</span>
<span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span>
	<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置全局属性 <span class="token operator">--</span><span class="token operator">&gt;</span>
	<span class="token generics"><span class="token punctuation">&lt;</span>settings<span class="token punctuation">&gt;</span></span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 使用jdbc的getGeneratedKeys获取数据库自增主键值 <span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>setting name<span class="token operator">=</span><span class="token string">&quot;useGeneratedKeys&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 使用列别名替换列名 默认<span class="token operator">:</span><span class="token boolean">true</span> <span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>setting name<span class="token operator">=</span><span class="token string">&quot;useColumnLabel&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 开启驼峰命名转换<span class="token operator">:</span><span class="token class-name">Table</span><span class="token punctuation">{</span>create_time<span class="token punctuation">}</span> <span class="token operator">-&gt;</span> <span class="token class-name">Entity</span><span class="token punctuation">{</span>createTime<span class="token punctuation">}</span> <span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>setting name<span class="token operator">=</span><span class="token string">&quot;mapUnderscoreToCamelCase&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>settings<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>resources/spring-config.xml</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">?</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>beans xmlns<span class="token operator">=</span><span class="token string">&quot;http://www.springframework.org/schema/beans&quot;</span>
       xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
       xmlns<span class="token operator">:</span>context<span class="token operator">=</span><span class="token string">&quot;http://www.springframework.org/schema/context&quot;</span>
       xmlns<span class="token operator">:</span>aop<span class="token operator">=</span><span class="token string">&quot;http://www.springframework.org/schema/aop&quot;</span>
       xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span><span class="token string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd&quot;</span>
       <span class="token keyword">default</span><span class="token operator">-</span>autowire<span class="token operator">=</span><span class="token string">&quot;byName&quot;</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span>context<span class="token operator">:</span>component<span class="token operator">-</span>scan base<span class="token operator">-</span><span class="token keyword">package</span><span class="token operator">=</span><span class="token string">&quot;org.itstack&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>aop<span class="token operator">:</span>aspectj<span class="token operator">-</span>autoproxy<span class="token operator">/</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 属性文件读入 <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>bean <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;locations&quot;</span><span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>list<span class="token punctuation">&gt;</span></span>
                <span class="token generics"><span class="token punctuation">&lt;</span>value<span class="token punctuation">&gt;</span></span>classpath<span class="token operator">:</span>props<span class="token comment">/*.properties&lt;/value&gt;
            &lt;/list&gt;
        &lt;/property&gt;
    &lt;/bean&gt;

    &lt;import resource=&quot;classpath:spring/spring-*.xml&quot;/&gt;

&lt;/beans&gt;
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="itstack-sql" tabindex="-1"><a class="header-anchor" href="#itstack-sql" aria-hidden="true">#</a> itstack.sql</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">DROP</span> <span class="token class-name">TABLE</span> user<span class="token punctuation">;</span>
<span class="token constant">CREATE</span> <span class="token class-name">TABLE</span> user <span class="token punctuation">(</span> id <span class="token function">bigint</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token class-name">NULL</span> <span class="token constant">AUTO_INCREMENT</span><span class="token punctuation">,</span> name <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span> age <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> address <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span> entryTime datetime<span class="token punctuation">,</span> remark <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span> createTime datetime<span class="token punctuation">,</span> updateTime datetime<span class="token punctuation">,</span> status <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token constant">DEFAULT</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token class-name">PRIMARY</span> <span class="token constant">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">INDEX</span> idx_name <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token constant">ENGINE</span><span class="token operator">=</span><span class="token class-name">InnoDB</span> <span class="token class-name">DEFAULT</span> <span class="token constant">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>
insert into user <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> address<span class="token punctuation">,</span> entryTime<span class="token punctuation">,</span> remark<span class="token punctuation">,</span> createTime<span class="token punctuation">,</span> updateTime<span class="token punctuation">,</span> status<span class="token punctuation">)</span> values <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token char">&#39;水水&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> &#39;吉林省榆树市黑林镇尹家村<span class="token number">5</span>组<span class="token char">&#39;, &#39;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token char">&#39;, &#39;</span>无<span class="token char">&#39;, &#39;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token char">&#39;, &#39;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>&#39;<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
insert into user <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> address<span class="token punctuation">,</span> entryTime<span class="token punctuation">,</span> remark<span class="token punctuation">,</span> createTime<span class="token punctuation">,</span> updateTime<span class="token punctuation">,</span> status<span class="token punctuation">)</span> values <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token char">&#39;豆豆&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> &#39;辽宁省大连市清河湾司马道<span class="token number">407</span>路<span class="token char">&#39;, &#39;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token char">&#39;, &#39;</span>无<span class="token char">&#39;, &#39;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token char">&#39;, &#39;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>&#39;<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
insert into user <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> address<span class="token punctuation">,</span> entryTime<span class="token punctuation">,</span> remark<span class="token punctuation">,</span> createTime<span class="token punctuation">,</span> updateTime<span class="token punctuation">,</span> status<span class="token punctuation">)</span> values <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token char">&#39;花花&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> &#39;辽宁省大连市清河湾司马道<span class="token number">407</span>路<span class="token char">&#39;, &#39;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token char">&#39;, &#39;</span>无<span class="token char">&#39;, &#39;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token char">&#39;, &#39;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>&#39;<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="综上总结" tabindex="-1"><a class="header-anchor" href="#综上总结" aria-hidden="true">#</a> 综上总结</h2><ul><li>此工程模型基于SSM比较适合开发ERP服务，ERP使用layui页面清新，功能完善</li><li>工程框架采用了DDD架构模式，在此架构模式下可以更容易的开发系统，适应后比MVC更加方便</li><li>后续将继续拓展架构服务搭建，包括一些Dubbo、Redis、mq等使用，方便自己也方便他人</li></ul>`,48);function v(m,b){const a=p("ExternalLinkIcon");return e(),o("div",null,[i,s("p",null,[n("作者：小傅哥 "),u,n("博客："),s("a",k,[n("https://bugstack.cn"),c(a)])]),d])}const q=t(r,[["render",v],["__file","2019-12-22-jiagoukuangjiadajianyi《dantiyingyongfuwuzhiSSMzhenghe：Spring4 _ SpringMvc _ Mybatis》.html.vue"]]);export{q as default};
