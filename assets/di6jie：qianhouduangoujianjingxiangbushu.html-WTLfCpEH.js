import{_ as o,r as s,o as c,c as r,a as e,b as t,d as a,e as l}from"./app-3RcBQnkC.js";const i={},h=e("h1",{id:"《chatgpt-微服务应用体系构建》-dev-ops-第6节-前后端构建镜像部署",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#《chatgpt-微服务应用体系构建》-dev-ops-第6节-前后端构建镜像部署","aria-hidden":"true"},"#"),t(" 《ChatGPT 微服务应用体系构建》 - dev-ops 第6节：前后端构建镜像部署")],-1),d=e("br",null,null,-1),u={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},p=e("blockquote",null,[e("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),_=e("li",null,[e("strong",null,"本章难度"),t("：★★★☆☆")],-1),g=e("li",null,[e("strong",null,"本章重点"),t("：打包镜像，构建前后端应用，部署服务。同时希望你能把镜像推送到 DockerHub 完成云服务的部署。")],-1),f=e("strong",null,"课程视频",-1),b={href:"https://t.zsxq.com/11ZKvBknf",target:"_blank",rel:"noopener noreferrer"},k=l('<h2 id="一、本章诉求" tabindex="-1"><a class="header-anchor" href="#一、本章诉求" aria-hidden="true">#</a> 一、本章诉求</h2><p>到本章节，chatgpt-sdk-java 第一版开发完了、chatgpt-web 页面第一版开发完了、chatgpt-api 工程重构了DDD，也开完了。接下来干啥，当然要部署上线了。</p><p>一个工程项目的学习，除了学习开发还要懂得怎么部署到线上，这样你才能观察到调用量、优化点、日志的检查等各方面内容。所以本章节我们就来打包部署。</p><h2 id="二、部署流程" tabindex="-1"><a class="header-anchor" href="#二、部署流程" aria-hidden="true">#</a> 二、部署流程</h2><p>整个流程为；将前后端分别配置 dockerfile 进行镜像打包，之后编写 compose.yml 进行部署。部署后配置公众号验签地址。—— 前面我们已经讲过公众号的配置，大家也可以跳过去参考。</p><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-dev-ops-06-01.png" width="750px"></div><ul><li>镜像打包的时候，如果有 Mac M1 ARM 架构的，需要注意兼容问题。</li></ul>',7);function m(x,v){const n=s("ExternalLinkIcon");return c(),r("div",null,[h,e("p",null,[t("作者：小傅哥 "),d,t("博客："),e("a",u,[t("https://bugstack.cn"),a(n)])]),p,e("ul",null,[_,g,e("li",null,[f,t("："),e("a",b,[t("https://t.zsxq.com/11ZKvBknf"),a(n)])])]),k])}const q=o(i,[["render",m],["__file","di6jie：qianhouduangoujianjingxiangbushu.html.vue"]]);export{q as default};
