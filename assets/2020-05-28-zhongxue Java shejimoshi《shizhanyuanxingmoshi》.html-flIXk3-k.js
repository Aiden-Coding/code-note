import{_ as e,r as o,o as c,c as l,a as n,b as s,d as p,e as t}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"重学-java-设计模式-实战原型模式「上机考试多套试-每人题目和答案乱序排列场景」",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#重学-java-设计模式-实战原型模式「上机考试多套试-每人题目和答案乱序排列场景」","aria-hidden":"true"},"#"),s(" 重学 Java 设计模式：实战原型模式「上机考试多套试，每人题目和答案乱序排列场景」")],-1),k=n("br",null,null,-1),r={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),v=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=510089738&bvid=BV1Ru411q7ui&cid=556382068&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),m=t('<h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>老板你加钱我的代码能飞</code></p><p>程序员这份工作里有两种人；一类是热爱喜欢的、一类是仅当成工作的。而喜欢代码编程的这部分人会极其主动学习去丰富自己的羽翼，也非常喜欢对技术探索力求将学到的知识赋能到平时的业务需求开发中。对于这部分小伙伴来说上班写代码还能赚钱真的是幸福！</p><p><code>怎么成为喜欢编码都那部分人</code></p><p>无论做哪行那业你都喜欢，往往来自从中持续不断都获取成就感。就开发编程而言因为你的一行代码影响到了千千万万的人、因为你的一行代码整个系统更加稳定、因为你的一行代码扛过了所有秒杀等等，这样一行行的代码都是你日积月累学习到的经验。那如果你也想成为这样有成就感的程序员就需要不断的学习，不断的用更多的技能知识把自己编写的代码运用到更核心的系统。</p><p><code>方向不对努力白费</code></p><p>平常你也付出了很多的时间，但就是没有得到多少收益。就像有时候很多小伙伴问我，我是该怎么学一个我没接触过的内容。我的个人经验非常建议，先不要学太多理论性的内容，而是尝试实际操作下，把要学的内容做一些Demo案例出来。这有点像你买了个自行车是先拆了学学怎么个原理，还是先骑几圈呢？哪怕摔了跟头，但那都是必须经历后留下的经验。</p><p><strong>同样我也知道很多人看了设计模式收获不大，这主要新人对没有案例或者案例不贴近实际场景没有学习方向导致。太空、太虚、太玄，让人没有抓手！</strong></p><p>所以我开始编写以实际案例为着手的方式，讲解设计模式的文章，帮助大家成长的同时也让我自己有所沉淀！</p><h2 id="二、开发环境" tabindex="-1"><a class="header-anchor" href="#二、开发环境" aria-hidden="true">#</a> 二、开发环境</h2>',10),b=n("li",null,"JDK 1.8",-1),g=n("li",null,"Idea + Maven",-1),q=n("strong",null,"公众号",-1),h={href:"https://bugstack.cn/assets/images/qrcode.png",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"bugstack虫洞栈",-1),f=n("code",null,"源码下载",-1),w=t('<table><thead><tr><th>工程</th><th>描述</th></tr></thead><tbody><tr><td>itstack-demo-design-4-00</td><td>场景模拟工程，模拟在线考试题库抽提打乱顺序</td></tr><tr><td>itstack-demo-design-4-01</td><td>使用一坨代码实现业务需求，也是对ifelse的使用</td></tr><tr><td>itstack-demo-design-4-02</td><td>通过设计模式优化改造代码，产生对比性从而学习</td></tr></tbody></table><h2 id="三、原型模式介绍" tabindex="-1"><a class="header-anchor" href="#三、原型模式介绍" aria-hidden="true">#</a> 三、原型模式介绍</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-4-01.png" alt="原型模式，图片来自 refactoringguru.cn"></p>',3),y={href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"},C=t(`<p>原型模式主要解决的问题就是创建重复对象，而这部分<code>对象</code>内容本身比较复杂，生成过程可能从库或者RPC接口中获取数据的耗时较长，因此采用克隆的方式节省时间。</p><p>其实这种场景经常出现在我们的身边，只不过很少用到自己的开发中，就像；</p><ol><li>你经常<code>Ctrl+C</code>、<code>Ctrl+V</code>，复制粘贴代码。</li><li>Java多数类中提供的API方法；<code>Object clone()</code>。</li><li>细胞的有丝分裂。</li></ol><p>类似以上的场景并不少，但如果让你去思考平时的代码开发中，有用到这样的设计模式吗？确实不那么容易找到，甚至有时候是忽略了这个设计模式的方式。在没有阅读下文之前，也可以思考下哪些场景可以用到。</p><h2 id="四、案例场景模拟" tabindex="-1"><a class="header-anchor" href="#四、案例场景模拟" aria-hidden="true">#</a> 四、案例场景模拟</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-4-02.png" alt="场景模拟；考试试卷"></p><p>每个人都经历过考试，从纸制版到上机答题，大大小小也有几百场。而以前坐在教室里答题身边的人都是一套试卷，考试的时候还能偷摸或者别人给发信息抄一抄答案。</p><p>但从一部分可以上机考试的内容开始，在保证大家的公平性一样的题目下，开始出现试题混排更有做的好的答案选项也混排。这样大大的增加了抄的成本，也更好的做到了考试的公平性。</p><p><strong>但如果这个公平性的考试需求交给你来完成，你会怎么做？</strong></p><p>因为需要实现一个上机考试抽题的服务，因此在这里建造一个题库题目的场景类信息，用于创建；<code>选择题</code>、<code>问答题</code>。</p><h3 id="_1-场景模拟工程" tabindex="-1"><a class="header-anchor" href="#_1-场景模拟工程" aria-hidden="true">#</a> 1. 场景模拟工程</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">4</span><span class="token operator">-</span><span class="token number">00</span>
└── src
    └── main
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
                ├── <span class="token class-name">AnswerQuestion</span><span class="token punctuation">.</span>java
                └── <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在这里模拟了两个试卷题目的类；<code>ChoiceQuestion</code>(<em>选择题</em>)、<code>AnswerQuestion</code>(<em>问答题</em>)。如果是实际的业务场景开发中，会有更多的题目类型，可以回忆一下你的高考试卷。</li></ul><h3 id="_2-场景简述" tabindex="-1"><a class="header-anchor" href="#_2-场景简述" aria-hidden="true">#</a> 2. 场景简述</h3><h4 id="_2-1-选择题" tabindex="-1"><a class="header-anchor" href="#_2-1-选择题" aria-hidden="true">#</a> 2.1 选择题</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChoiceQuestion</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>                 <span class="token comment">// 题目</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> option<span class="token punctuation">;</span>  <span class="token comment">// 选项；A、B、C、D</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> key<span class="token punctuation">;</span>                  <span class="token comment">// 答案；B</span>

    <span class="token keyword">public</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> option<span class="token punctuation">,</span> <span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>option <span class="token operator">=</span> option<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ...get/set</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-问答题" tabindex="-1"><a class="header-anchor" href="#_2-2-问答题" aria-hidden="true">#</a> 2.2 问答题</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnswerQuestion</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>  <span class="token comment">// 问题</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> key<span class="token punctuation">;</span>   <span class="token comment">// 答案</span>

    <span class="token keyword">public</span> <span class="token class-name">AnswerQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">AnswerQuestion</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ...get/set</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以上两个类就是我们场景中需要的物料内容，相对来说比较简单。如果你在测试的时候想扩充学习，可以继续添加一些其他物料(<em>题目类型</em>)。</li></ul><h2 id="五、用一坨坨代码实现" tabindex="-1"><a class="header-anchor" href="#五、用一坨坨代码实现" aria-hidden="true">#</a> 五、用一坨坨代码实现</h2><p><code>今天的实现方式没有ifelse了，但是没有一个类解决不了的业务，只要你胆大！</code></p><p>在以下的例子中我们会按照每一个用户创建试卷的题目，并返回给调用方。</p><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">4</span><span class="token operator">-</span><span class="token number">01</span>
└── src
    └── main
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
                └── <span class="token class-name">QuestionBankController</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>一个类几千行的代码你是否见过，嚯？那今天就再让你见识一下有这样潜质的类！</li></ul><h3 id="_2-一把梭实现需求" tabindex="-1"><a class="header-anchor" href="#_2-一把梭实现需求" aria-hidden="true">#</a> 2. 一把梭实现需求</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionBankController</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createPaper</span><span class="token punctuation">(</span><span class="token class-name">String</span> candidate<span class="token punctuation">,</span> <span class="token class-name">String</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ChoiceQuestion</span><span class="token punctuation">&gt;</span></span> choiceQuestionList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ChoiceQuestion</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnswerQuestion</span><span class="token punctuation">&gt;</span></span> answerQuestionList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnswerQuestion</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map01 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map01<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA2 EE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map01<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA2 Card&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map01<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA2 ME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map01<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA2 HE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map01<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;E&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA2 SE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map02 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map02<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA程序的main方法必须写在类里面&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map02<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA程序中可以有多个main方法&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map02<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA程序中类名必须与文件名一样&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map02<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA程序的main方法中如果只有一条语句，可以不用{}(大括号)括起来&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map03 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map03<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;变量由字母、下划线、数字、$符号随意组成；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map03<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;变量不能以数字作为开头；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map03<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A和a在java中是同一个变量；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map03<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;不同类型的变量，可以起相同的名字；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map04 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map04<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;STRING&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map04<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;x3x;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map04<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;void&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map04<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;de$f&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map05 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map05<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;31&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map05<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map05<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map05<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        choiceQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;JAVA所定义的版本中不包括&quot;</span><span class="token punctuation">,</span> map01<span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        choiceQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;下列说法正确的是&quot;</span><span class="token punctuation">,</span> map02<span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        choiceQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;变量命名规范说法正确的是&quot;</span><span class="token punctuation">,</span> map03<span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        choiceQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;以下()不是合法的标识符&quot;</span><span class="token punctuation">,</span> map04<span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        choiceQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;表达式(11+3*8)/4%3的值是&quot;</span><span class="token punctuation">,</span> map05<span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        answerQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnswerQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;小红马和小黑马生的小马几条腿&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;4条腿&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        answerQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnswerQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;铁棒打头疼还是木棒打头疼&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;头最疼&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        answerQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnswerQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;什么床不能睡觉&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;牙床&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        answerQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnswerQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;为什么好马不吃回头草&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;后面的草没了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 输出结果</span>
        <span class="token class-name">StringBuilder</span> detail <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token string">&quot;考生：&quot;</span> <span class="token operator">+</span> candidate <span class="token operator">+</span> <span class="token string">&quot;\\r\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;考号：&quot;</span> <span class="token operator">+</span> number <span class="token operator">+</span> <span class="token string">&quot;\\r\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;--------------------------------------------\\r\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;一、选择题&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;\\r\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> choiceQuestionList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;第&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;题：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>choiceQuestionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> option <span class="token operator">=</span> choiceQuestionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> key <span class="token operator">:</span> option<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;答案：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>choiceQuestionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;二、问答题&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;\\r\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> answerQuestionList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;第&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;题：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>answerQuestionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;答案：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>answerQuestionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> detail<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这样的代码往往都非常易于理解，要什么程序就给什么代码，不面向对象，只面向过程。不考虑扩展性，能用就行。</li><li>以上的代码主要就三部分内容；首先创建选择题和问答题到集合中、定义详情字符串包装结果、返回结果内容。</li><li>但以上的代码有一个没有实现的地方就是不能乱序，所有人的试卷顺序都是一样的。如果需要加乱序也是可以的，但复杂度又会增加。<em>这里不展示具体过多实现，只为后文对比重构</em>。</li></ul><h3 id="_3-测试验证" tabindex="-1"><a class="header-anchor" href="#_3-测试验证" aria-hidden="true">#</a> 3. 测试验证</h3><p>接下来我们通过junit单元测试的方式验证接口服务，强调日常编写好单测可以更好的提高系统的健壮度。</p><p><strong>编写测试类：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_QuestionBankController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">QuestionBankController</span> questionBankController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QuestionBankController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>questionBankController<span class="token punctuation">.</span><span class="token function">createPaper</span><span class="token punctuation">(</span><span class="token string">&quot;花花&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000001921032&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>questionBankController<span class="token punctuation">.</span><span class="token function">createPaper</span><span class="token punctuation">(</span><span class="token string">&quot;豆豆&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000001921051&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>questionBankController<span class="token punctuation">.</span><span class="token function">createPaper</span><span class="token punctuation">(</span><span class="token string">&quot;大宝&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000001921987&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结果：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>考生：花花
考号：<span class="token number">1000001921032</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
一、选择题

第<span class="token number">1</span>题：<span class="token constant">JAVA</span>所定义的版本中不包括
<span class="token class-name">A</span>：<span class="token constant">JAVA2</span> <span class="token constant">EE</span>
<span class="token class-name">B</span>：<span class="token constant">JAVA2</span> <span class="token class-name">Card</span>
<span class="token class-name">C</span>：<span class="token constant">JAVA2</span> <span class="token constant">ME</span>
<span class="token class-name">D</span>：<span class="token constant">JAVA2</span> <span class="token constant">HE</span>
<span class="token class-name">E</span>：<span class="token constant">JAVA2</span> <span class="token constant">SE</span>
答案：<span class="token class-name">D</span>

第<span class="token number">2</span>题：下列说法正确的是
<span class="token class-name">A</span>：<span class="token constant">JAVA</span>程序的main方法必须写在类里面
<span class="token class-name">B</span>：<span class="token constant">JAVA</span>程序中可以有多个main方法
<span class="token class-name">C</span>：<span class="token constant">JAVA</span>程序中类名必须与文件名一样
<span class="token class-name">D</span>：<span class="token constant">JAVA</span>程序的main方法中如果只有一条语句，可以不用<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">(</span>大括号<span class="token punctuation">)</span>括起来
答案：<span class="token class-name">A</span>

第<span class="token number">3</span>题：变量命名规范说法正确的是
<span class="token class-name">A</span>：变量由字母、下划线、数字、$符号随意组成；
<span class="token class-name">B</span>：变量不能以数字作为开头；
<span class="token class-name">C</span>：<span class="token class-name">A</span>和a在java中是同一个变量；
<span class="token class-name">D</span>：不同类型的变量，可以起相同的名字；
答案：<span class="token class-name">B</span>

第<span class="token number">4</span>题：以下<span class="token punctuation">(</span><span class="token punctuation">)</span>不是合法的标识符
<span class="token class-name">A</span>：<span class="token constant">STRING</span>
<span class="token class-name">B</span>：x3x<span class="token punctuation">;</span>
<span class="token class-name">C</span>：<span class="token keyword">void</span>
<span class="token class-name">D</span>：de$f
答案：<span class="token class-name">C</span>

第<span class="token number">5</span>题：表达式<span class="token punctuation">(</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token operator">%</span><span class="token number">3</span>的值是
<span class="token class-name">A</span>：<span class="token number">31</span>
<span class="token class-name">B</span>：<span class="token number">0</span>
<span class="token class-name">C</span>：<span class="token number">1</span>
<span class="token class-name">D</span>：<span class="token number">2</span>
答案：<span class="token class-name">D</span>

二、问答题

第<span class="token number">1</span>题：小红马和小黑马生的小马几条腿
答案：<span class="token number">4</span>条腿

第<span class="token number">2</span>题：铁棒打头疼还是木棒打头疼
答案：头最疼

第<span class="token number">3</span>题：什么床不能睡觉
答案：牙床

第<span class="token number">4</span>题：为什么好马不吃回头草
答案：后面的草没了


考生：豆豆
考号：<span class="token number">1000001921051</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
一、选择题

第<span class="token number">1</span>题：<span class="token constant">JAVA</span>所定义的版本中不包括
<span class="token class-name">A</span>：<span class="token constant">JAVA2</span> <span class="token constant">EE</span>
<span class="token class-name">B</span>：<span class="token constant">JAVA2</span> <span class="token class-name">Card</span>
<span class="token class-name">C</span>：<span class="token constant">JAVA2</span> <span class="token constant">ME</span>
<span class="token class-name">D</span>：<span class="token constant">JAVA2</span> <span class="token constant">HE</span>
<span class="token class-name">E</span>：<span class="token constant">JAVA2</span> <span class="token constant">SE</span>
答案：<span class="token class-name">D</span>

第<span class="token number">2</span>题：下列说法正确的是
<span class="token class-name">A</span>：<span class="token constant">JAVA</span>程序的main方法必须写在类里面
<span class="token class-name">B</span>：<span class="token constant">JAVA</span>程序中可以有多个main方法
<span class="token class-name">C</span>：<span class="token constant">JAVA</span>程序中类名必须与文件名一样
<span class="token class-name">D</span>：<span class="token constant">JAVA</span>程序的main方法中如果只有一条语句，可以不用<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">(</span>大括号<span class="token punctuation">)</span>括起来
答案：<span class="token class-name">A</span>

第<span class="token number">3</span>题：变量命名规范说法正确的是
<span class="token class-name">A</span>：变量由字母、下划线、数字、$符号随意组成；
<span class="token class-name">B</span>：变量不能以数字作为开头；
<span class="token class-name">C</span>：<span class="token class-name">A</span>和a在java中是同一个变量；
<span class="token class-name">D</span>：不同类型的变量，可以起相同的名字；
答案：<span class="token class-name">B</span>

第<span class="token number">4</span>题：以下<span class="token punctuation">(</span><span class="token punctuation">)</span>不是合法的标识符
<span class="token class-name">A</span>：<span class="token constant">STRING</span>
<span class="token class-name">B</span>：x3x<span class="token punctuation">;</span>
<span class="token class-name">C</span>：<span class="token keyword">void</span>
<span class="token class-name">D</span>：de$f
答案：<span class="token class-name">C</span>

第<span class="token number">5</span>题：表达式<span class="token punctuation">(</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token operator">%</span><span class="token number">3</span>的值是
<span class="token class-name">A</span>：<span class="token number">31</span>
<span class="token class-name">B</span>：<span class="token number">0</span>
<span class="token class-name">C</span>：<span class="token number">1</span>
<span class="token class-name">D</span>：<span class="token number">2</span>
答案：<span class="token class-name">D</span>

二、问答题

第<span class="token number">1</span>题：小红马和小黑马生的小马几条腿
答案：<span class="token number">4</span>条腿

第<span class="token number">2</span>题：铁棒打头疼还是木棒打头疼
答案：头最疼

第<span class="token number">3</span>题：什么床不能睡觉
答案：牙床

第<span class="token number">4</span>题：为什么好马不吃回头草
答案：后面的草没了


考生：大宝
考号：<span class="token number">1000001921987</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
一、选择题

第<span class="token number">1</span>题：<span class="token constant">JAVA</span>所定义的版本中不包括
<span class="token class-name">A</span>：<span class="token constant">JAVA2</span> <span class="token constant">EE</span>
<span class="token class-name">B</span>：<span class="token constant">JAVA2</span> <span class="token class-name">Card</span>
<span class="token class-name">C</span>：<span class="token constant">JAVA2</span> <span class="token constant">ME</span>
<span class="token class-name">D</span>：<span class="token constant">JAVA2</span> <span class="token constant">HE</span>
<span class="token class-name">E</span>：<span class="token constant">JAVA2</span> <span class="token constant">SE</span>
答案：<span class="token class-name">D</span>

第<span class="token number">2</span>题：下列说法正确的是
<span class="token class-name">A</span>：<span class="token constant">JAVA</span>程序的main方法必须写在类里面
<span class="token class-name">B</span>：<span class="token constant">JAVA</span>程序中可以有多个main方法
<span class="token class-name">C</span>：<span class="token constant">JAVA</span>程序中类名必须与文件名一样
<span class="token class-name">D</span>：<span class="token constant">JAVA</span>程序的main方法中如果只有一条语句，可以不用<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">(</span>大括号<span class="token punctuation">)</span>括起来
答案：<span class="token class-name">A</span>

第<span class="token number">3</span>题：变量命名规范说法正确的是
<span class="token class-name">A</span>：变量由字母、下划线、数字、$符号随意组成；
<span class="token class-name">B</span>：变量不能以数字作为开头；
<span class="token class-name">C</span>：<span class="token class-name">A</span>和a在java中是同一个变量；
<span class="token class-name">D</span>：不同类型的变量，可以起相同的名字；
答案：<span class="token class-name">B</span>

第<span class="token number">4</span>题：以下<span class="token punctuation">(</span><span class="token punctuation">)</span>不是合法的标识符
<span class="token class-name">A</span>：<span class="token constant">STRING</span>
<span class="token class-name">B</span>：x3x<span class="token punctuation">;</span>
<span class="token class-name">C</span>：<span class="token keyword">void</span>
<span class="token class-name">D</span>：de$f
答案：<span class="token class-name">C</span>

第<span class="token number">5</span>题：表达式<span class="token punctuation">(</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token operator">%</span><span class="token number">3</span>的值是
<span class="token class-name">A</span>：<span class="token number">31</span>
<span class="token class-name">B</span>：<span class="token number">0</span>
<span class="token class-name">C</span>：<span class="token number">1</span>
<span class="token class-name">D</span>：<span class="token number">2</span>
答案：<span class="token class-name">D</span>

二、问答题

第<span class="token number">1</span>题：小红马和小黑马生的小马几条腿
答案：<span class="token number">4</span>条腿

第<span class="token number">2</span>题：铁棒打头疼还是木棒打头疼
答案：头最疼

第<span class="token number">3</span>题：什么床不能睡觉
答案：牙床

第<span class="token number">4</span>题：为什么好马不吃回头草
答案：后面的草没了

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以上呢就是三位考试的试卷；<code>花花</code>、<code>豆豆</code>、<code>大宝</code>，每个人的试卷内容是一样的这没问题，但是三个人的题目以及选项顺序都是一样，就没有达到我们说希望的乱序要求。</li><li>而且以上这样的代码非常难扩展，随着题目的不断的增加以及乱序功能的补充，都会让这段代码变得越来越混乱。</li></ul><h2 id="六、原型模式重构代码" tabindex="-1"><a class="header-anchor" href="#六、原型模式重构代码" aria-hidden="true">#</a> 六、原型模式重构代码</h2><p><code>接下来使用原型模式来进行代码优化，也算是一次很小的重构。</code></p><p>原型模式主要解决的问题就是创建大量重复的类，而我们模拟的场景就需要给不同的用户都创建相同的试卷，但这些试卷的题目不便于每次都从库中获取，甚至有时候需要从远程的RPC中获取。这样都是非常耗时的，而且随着创建对象的增多将严重影响效率。</p><p>在原型模式中所需要的非常重要的手段就是克隆，在需要用到克隆的类中都需要实现 <code>implements Cloneable</code> 接口。</p><h3 id="_1-工程结构-1" tabindex="-1"><a class="header-anchor" href="#_1-工程结构-1" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">4</span><span class="token operator">-</span><span class="token number">02</span>
└── src
    ├── main
    │   └── java
    │       └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
    │           ├── util
    │           │   ├── <span class="token class-name">Topic</span><span class="token punctuation">.</span>java
    │           │   └── <span class="token class-name">TopicRandomUtil</span><span class="token punctuation">.</span>java
    │           ├── <span class="token class-name">QuestionBank</span><span class="token punctuation">.</span>java
    │           └── <span class="token class-name">QuestionBankController</span><span class="token punctuation">.</span>java 
    └── test
         └── java
             └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test
                 └── <span class="token class-name">ApiTest</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>原型模式模型结构</strong></p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-4-03.png" alt="原型模式模型结构"></p><ul><li>工程中包括了核心的题库类<code>QuestionBank</code>，题库中主要负责将各个的题目进行组装最终输出试卷。</li><li>针对每一个试卷都会使用克隆的方式进行复制，复制完成后将试卷中题目以及每个题目的答案进行乱序处理。这里提供了工具包；<em>TopicRandomUtil</em></li></ul><h3 id="_2-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-代码实现" aria-hidden="true">#</a> 2. 代码实现</h3><h4 id="_2-1-题目选项乱序操作工具包" tabindex="-1"><a class="header-anchor" href="#_2-1-题目选项乱序操作工具包" aria-hidden="true">#</a> 2.1 题目选项乱序操作工具包</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 乱序Map元素，记录对应答案key
 * <span class="token keyword">@param</span> <span class="token parameter">option</span> 题目
 * <span class="token keyword">@param</span> <span class="token parameter">key</span>    答案
 * <span class="token keyword">@return</span> Topic 乱序后 <span class="token punctuation">{</span>A=c., B=d., C=a., D=b.<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token class-name">Topic</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> option<span class="token punctuation">,</span> <span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keySet <span class="token operator">=</span> option<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keyList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>keySet<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">shuffle</span><span class="token punctuation">(</span>keyList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optionNew <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> keyNew <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> next <span class="token operator">:</span> keySet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> randomKey <span class="token operator">=</span> keyList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            keyNew <span class="token operator">=</span> randomKey<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        optionNew<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>randomKey<span class="token punctuation">,</span> option<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Topic</span><span class="token punctuation">(</span>optionNew<span class="token punctuation">,</span> keyNew<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>可能你还记得上文里我们提供了Map存储题目选项，同时key的属性存放答案。<em>如果忘记可以往上翻翻</em></li><li>这个这个工具类的操作就是将原有Map中的选型乱序操作，<code>也就是A的选项内容给B</code>，<code>B的可能给C</code>，同时记录正确答案在处理后的位置信息。</li></ul><h4 id="_2-2-克隆对象处理类" tabindex="-1"><a class="header-anchor" href="#_2-2-克隆对象处理类" aria-hidden="true">#</a> 2.2 克隆对象处理类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionBank</span> <span class="token keyword">implements</span> <span class="token class-name">Cloneable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> candidate<span class="token punctuation">;</span> <span class="token comment">// 考生</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> number<span class="token punctuation">;</span>    <span class="token comment">// 考号</span>

    <span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ChoiceQuestion</span><span class="token punctuation">&gt;</span></span> choiceQuestionList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ChoiceQuestion</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnswerQuestion</span><span class="token punctuation">&gt;</span></span> answerQuestionList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnswerQuestion</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">QuestionBank</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">ChoiceQuestion</span> choiceQuestion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        choiceQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>choiceQuestion<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">QuestionBank</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">AnswerQuestion</span> answerQuestion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        answerQuestionList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>answerQuestion<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">CloneNotSupportedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">QuestionBank</span> questionBank <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">QuestionBank</span><span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        questionBank<span class="token punctuation">.</span>choiceQuestionList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ChoiceQuestion</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> choiceQuestionList<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        questionBank<span class="token punctuation">.</span>answerQuestionList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnswerQuestion</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> answerQuestionList<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 题目乱序</span>
        <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">shuffle</span><span class="token punctuation">(</span>questionBank<span class="token punctuation">.</span>choiceQuestionList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">shuffle</span><span class="token punctuation">(</span>questionBank<span class="token punctuation">.</span>answerQuestionList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 答案乱序</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ChoiceQuestion</span><span class="token punctuation">&gt;</span></span> choiceQuestionList <span class="token operator">=</span> questionBank<span class="token punctuation">.</span>choiceQuestionList<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ChoiceQuestion</span> question <span class="token operator">:</span> choiceQuestionList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Topic</span> random <span class="token operator">=</span> <span class="token class-name">TopicRandomUtil</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>question<span class="token punctuation">.</span><span class="token function">getOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> question<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            question<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span><span class="token function">getOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            question<span class="token punctuation">.</span><span class="token function">setKey</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> questionBank<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCandidate</span><span class="token punctuation">(</span><span class="token class-name">String</span> candidate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>candidate <span class="token operator">=</span> candidate<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token class-name">String</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>number <span class="token operator">=</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">StringBuilder</span> detail <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token string">&quot;考生：&quot;</span> <span class="token operator">+</span> candidate <span class="token operator">+</span> <span class="token string">&quot;\\r\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;考号：&quot;</span> <span class="token operator">+</span> number <span class="token operator">+</span> <span class="token string">&quot;\\r\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;--------------------------------------------\\r\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;一、选择题&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;\\r\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> choiceQuestionList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;第&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;题：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>choiceQuestionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> option <span class="token operator">=</span> choiceQuestionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> key <span class="token operator">:</span> option<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;答案：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>choiceQuestionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;二、问答题&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;\\r\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> answerQuestionList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;第&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;题：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>answerQuestionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            detail<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;答案：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>answerQuestionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> detail<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的主要操作内容有三个，分别是；</p><ul><li>两个<code>append()</code>，对各项题目的添加，有点像我们在建造者模式中使用的方式，添加装修物料。</li><li><code>clone() </code>，这里的核心操作就是对对象的复制，这里的复制不只是包括了本身，同时对两个集合也做了复制。只有这样的拷贝才能确保在操作克隆对象的时候不影响原对象。</li><li>乱序操作，在<code>list</code>集合中有一个方法，<code>Collections.shuffle</code>，可以将原有集合的顺序打乱，输出一个新的顺序。在这里我们使用此方法对题目进行乱序操作。</li></ul><h4 id="_2-4-初始化试卷数据" tabindex="-1"><a class="header-anchor" href="#_2-4-初始化试卷数据" aria-hidden="true">#</a> 2.4 初始化试卷数据</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionBankController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">QuestionBank</span> questionBank <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QuestionBank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">QuestionBankController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map01 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map01<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA2 EE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map01<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA2 Card&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map01<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA2 ME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map01<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA2 HE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map01<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;E&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA2 SE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map02 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map02<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA程序的main方法必须写在类里面&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map02<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA程序中可以有多个main方法&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map02<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA程序中类名必须与文件名一样&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map02<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JAVA程序的main方法中如果只有一条语句，可以不用{}(大括号)括起来&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map03 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map03<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;变量由字母、下划线、数字、$符号随意组成；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map03<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;变量不能以数字作为开头；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map03<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A和a在java中是同一个变量；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map03<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;不同类型的变量，可以起相同的名字；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map04 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map04<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;STRING&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map04<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;x3x;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map04<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;void&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map04<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;de$f&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map05 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map05<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;31&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map05<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map05<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map05<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        questionBank<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;JAVA所定义的版本中不包括&quot;</span><span class="token punctuation">,</span> map01<span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;下列说法正确的是&quot;</span><span class="token punctuation">,</span> map02<span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;变量命名规范说法正确的是&quot;</span><span class="token punctuation">,</span> map03<span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;以下()不是合法的标识符&quot;</span><span class="token punctuation">,</span>map04<span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChoiceQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;表达式(11+3*8)/4%3的值是&quot;</span><span class="token punctuation">,</span> map05<span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnswerQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;小红马和小黑马生的小马几条腿&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;4条腿&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnswerQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;铁棒打头疼还是木棒打头疼&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;头最疼&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnswerQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;什么床不能睡觉&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;牙床&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnswerQuestion</span><span class="token punctuation">(</span><span class="token string">&quot;为什么好马不吃回头草&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;后面的草没了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createPaper</span><span class="token punctuation">(</span><span class="token class-name">String</span> candidate<span class="token punctuation">,</span> <span class="token class-name">String</span> number<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">CloneNotSupportedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">QuestionBank</span> questionBankClone <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">QuestionBank</span><span class="token punctuation">)</span> questionBank<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        questionBankClone<span class="token punctuation">.</span><span class="token function">setCandidate</span><span class="token punctuation">(</span>candidate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        questionBankClone<span class="token punctuation">.</span><span class="token function">setNumber</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> questionBankClone<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这个类的内容就比较简单了，主要提供对试卷内容的模式初始化操作(<em>所有考生试卷一样，题目顺序不一致</em>)。</li><li>以及对外部提供创建试卷的方法，在创建的过程中使用的是克隆的方式；<code>(QuestionBank) questionBank.clone();</code>，并最终返回试卷信息。</li></ul><h3 id="_3-测试验证-1" tabindex="-1"><a class="header-anchor" href="#_3-测试验证-1" aria-hidden="true">#</a> 3. 测试验证</h3><p><strong>编写测试类：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_QuestionBank</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">CloneNotSupportedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">QuestionBankController</span> questionBankController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QuestionBankController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>questionBankController<span class="token punctuation">.</span><span class="token function">createPaper</span><span class="token punctuation">(</span><span class="token string">&quot;花花&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000001921032&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>questionBankController<span class="token punctuation">.</span><span class="token function">createPaper</span><span class="token punctuation">(</span><span class="token string">&quot;豆豆&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000001921051&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>questionBankController<span class="token punctuation">.</span><span class="token function">createPaper</span><span class="token punctuation">(</span><span class="token string">&quot;大宝&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1000001921987&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结果：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>考生：花花
考号：<span class="token number">1000001921032</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
一、选择题

第<span class="token number">1</span>题：<span class="token constant">JAVA</span>所定义的版本中不包括
<span class="token class-name">A</span>：<span class="token constant">JAVA2</span> <span class="token class-name">Card</span>
<span class="token class-name">B</span>：<span class="token constant">JAVA2</span> <span class="token constant">HE</span>
<span class="token class-name">C</span>：<span class="token constant">JAVA2</span> <span class="token constant">EE</span>
<span class="token class-name">D</span>：<span class="token constant">JAVA2</span> <span class="token constant">ME</span>
<span class="token class-name">E</span>：<span class="token constant">JAVA2</span> <span class="token constant">SE</span>
答案：<span class="token class-name">B</span>

第<span class="token number">2</span>题：表达式<span class="token punctuation">(</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token operator">%</span><span class="token number">3</span>的值是
<span class="token class-name">A</span>：<span class="token number">1</span>
<span class="token class-name">B</span>：<span class="token number">0</span>
<span class="token class-name">C</span>：<span class="token number">31</span>
<span class="token class-name">D</span>：<span class="token number">2</span>
答案：<span class="token class-name">D</span>

第<span class="token number">3</span>题：以下<span class="token punctuation">(</span><span class="token punctuation">)</span>不是合法的标识符
<span class="token class-name">A</span>：<span class="token keyword">void</span>
<span class="token class-name">B</span>：de$f
<span class="token class-name">C</span>：<span class="token constant">STRING</span>
<span class="token class-name">D</span>：x3x<span class="token punctuation">;</span>
答案：<span class="token class-name">A</span>

第<span class="token number">4</span>题：下列说法正确的是
<span class="token class-name">A</span>：<span class="token constant">JAVA</span>程序的main方法中如果只有一条语句，可以不用<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">(</span>大括号<span class="token punctuation">)</span>括起来
<span class="token class-name">B</span>：<span class="token constant">JAVA</span>程序中可以有多个main方法
<span class="token class-name">C</span>：<span class="token constant">JAVA</span>程序的main方法必须写在类里面
<span class="token class-name">D</span>：<span class="token constant">JAVA</span>程序中类名必须与文件名一样
答案：<span class="token class-name">C</span>

第<span class="token number">5</span>题：变量命名规范说法正确的是
<span class="token class-name">A</span>：变量由字母、下划线、数字、$符号随意组成；
<span class="token class-name">B</span>：<span class="token class-name">A</span>和a在java中是同一个变量；
<span class="token class-name">C</span>：不同类型的变量，可以起相同的名字；
<span class="token class-name">D</span>：变量不能以数字作为开头；
答案：<span class="token class-name">D</span>

二、问答题

第<span class="token number">1</span>题：小红马和小黑马生的小马几条腿
答案：<span class="token number">4</span>条腿

第<span class="token number">2</span>题：什么床不能睡觉
答案：牙床

第<span class="token number">3</span>题：铁棒打头疼还是木棒打头疼
答案：头最疼

第<span class="token number">4</span>题：为什么好马不吃回头草
答案：后面的草没了


考生：豆豆
考号：<span class="token number">1000001921051</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
一、选择题

第<span class="token number">1</span>题：下列说法正确的是
<span class="token class-name">A</span>：<span class="token constant">JAVA</span>程序中可以有多个main方法
<span class="token class-name">B</span>：<span class="token constant">JAVA</span>程序的main方法必须写在类里面
<span class="token class-name">C</span>：<span class="token constant">JAVA</span>程序的main方法中如果只有一条语句，可以不用<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">(</span>大括号<span class="token punctuation">)</span>括起来
<span class="token class-name">D</span>：<span class="token constant">JAVA</span>程序中类名必须与文件名一样
答案：<span class="token class-name">B</span>

第<span class="token number">2</span>题：表达式<span class="token punctuation">(</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token operator">%</span><span class="token number">3</span>的值是
<span class="token class-name">A</span>：<span class="token number">2</span>
<span class="token class-name">B</span>：<span class="token number">1</span>
<span class="token class-name">C</span>：<span class="token number">31</span>
<span class="token class-name">D</span>：<span class="token number">0</span>
答案：<span class="token class-name">A</span>

第<span class="token number">3</span>题：以下<span class="token punctuation">(</span><span class="token punctuation">)</span>不是合法的标识符
<span class="token class-name">A</span>：<span class="token keyword">void</span>
<span class="token class-name">B</span>：de$f
<span class="token class-name">C</span>：x3x<span class="token punctuation">;</span>
<span class="token class-name">D</span>：<span class="token constant">STRING</span>
答案：<span class="token class-name">A</span>

第<span class="token number">4</span>题：<span class="token constant">JAVA</span>所定义的版本中不包括
<span class="token class-name">A</span>：<span class="token constant">JAVA2</span> <span class="token class-name">Card</span>
<span class="token class-name">B</span>：<span class="token constant">JAVA2</span> <span class="token constant">HE</span>
<span class="token class-name">C</span>：<span class="token constant">JAVA2</span> <span class="token constant">ME</span>
<span class="token class-name">D</span>：<span class="token constant">JAVA2</span> <span class="token constant">EE</span>
<span class="token class-name">E</span>：<span class="token constant">JAVA2</span> <span class="token constant">SE</span>
答案：<span class="token class-name">B</span>

第<span class="token number">5</span>题：变量命名规范说法正确的是
<span class="token class-name">A</span>：变量不能以数字作为开头；
<span class="token class-name">B</span>：<span class="token class-name">A</span>和a在java中是同一个变量；
<span class="token class-name">C</span>：不同类型的变量，可以起相同的名字；
<span class="token class-name">D</span>：变量由字母、下划线、数字、$符号随意组成；
答案：<span class="token class-name">A</span>

二、问答题

第<span class="token number">1</span>题：什么床不能睡觉
答案：牙床

第<span class="token number">2</span>题：铁棒打头疼还是木棒打头疼
答案：头最疼

第<span class="token number">3</span>题：为什么好马不吃回头草
答案：后面的草没了

第<span class="token number">4</span>题：小红马和小黑马生的小马几条腿
答案：<span class="token number">4</span>条腿


考生：大宝
考号：<span class="token number">1000001921987</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
一、选择题

第<span class="token number">1</span>题：以下<span class="token punctuation">(</span><span class="token punctuation">)</span>不是合法的标识符
<span class="token class-name">A</span>：x3x<span class="token punctuation">;</span>
<span class="token class-name">B</span>：de$f
<span class="token class-name">C</span>：<span class="token keyword">void</span>
<span class="token class-name">D</span>：<span class="token constant">STRING</span>
答案：<span class="token class-name">C</span>

第<span class="token number">2</span>题：表达式<span class="token punctuation">(</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token operator">%</span><span class="token number">3</span>的值是
<span class="token class-name">A</span>：<span class="token number">31</span>
<span class="token class-name">B</span>：<span class="token number">0</span>
<span class="token class-name">C</span>：<span class="token number">2</span>
<span class="token class-name">D</span>：<span class="token number">1</span>
答案：<span class="token class-name">C</span>

第<span class="token number">3</span>题：变量命名规范说法正确的是
<span class="token class-name">A</span>：不同类型的变量，可以起相同的名字；
<span class="token class-name">B</span>：变量由字母、下划线、数字、$符号随意组成；
<span class="token class-name">C</span>：变量不能以数字作为开头；
<span class="token class-name">D</span>：<span class="token class-name">A</span>和a在java中是同一个变量；
答案：<span class="token class-name">C</span>

第<span class="token number">4</span>题：下列说法正确的是
<span class="token class-name">A</span>：<span class="token constant">JAVA</span>程序的main方法中如果只有一条语句，可以不用<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">(</span>大括号<span class="token punctuation">)</span>括起来
<span class="token class-name">B</span>：<span class="token constant">JAVA</span>程序的main方法必须写在类里面
<span class="token class-name">C</span>：<span class="token constant">JAVA</span>程序中类名必须与文件名一样
<span class="token class-name">D</span>：<span class="token constant">JAVA</span>程序中可以有多个main方法
答案：<span class="token class-name">B</span>

第<span class="token number">5</span>题：<span class="token constant">JAVA</span>所定义的版本中不包括
<span class="token class-name">A</span>：<span class="token constant">JAVA2</span> <span class="token constant">EE</span>
<span class="token class-name">B</span>：<span class="token constant">JAVA2</span> <span class="token class-name">Card</span>
<span class="token class-name">C</span>：<span class="token constant">JAVA2</span> <span class="token constant">HE</span>
<span class="token class-name">D</span>：<span class="token constant">JAVA2</span> <span class="token constant">SE</span>
<span class="token class-name">E</span>：<span class="token constant">JAVA2</span> <span class="token constant">ME</span>
答案：<span class="token class-name">C</span>

二、问答题

第<span class="token number">1</span>题：为什么好马不吃回头草
答案：后面的草没了

第<span class="token number">2</span>题：小红马和小黑马生的小马几条腿
答案：<span class="token number">4</span>条腿

第<span class="token number">3</span>题：什么床不能睡觉
答案：牙床

第<span class="token number">4</span>题：铁棒打头疼还是木棒打头疼
答案：头最疼

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>从以上的输出结果可以看到，每个人的题目和答案都是差异化的乱序的，如下图比对结果；</strong> - <code>花花、豆豆、大宝，每个人的试卷都存在着题目和选项的混乱排序</code></p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-4-04.png" alt="原型模式，乱序题目比对结果"></p><h2 id="七、总结" tabindex="-1"><a class="header-anchor" href="#七、总结" aria-hidden="true">#</a> 七、总结</h2><ul><li>以上的实际场景模拟了原型模式在开发中重构的作用，但是原型模式的使用频率确实不是很高。如果有一些特殊场景需要使用到，也可以按照此设计模式进行优化。</li><li>另外原型设计模式的优点包括；便于通过克隆方式创建复杂对象、也可以避免重复做初始化操作、不需要与类中所属的其他类耦合等。但也有一些缺点如果对象中包括了循环引用的克隆，以及类中深度使用对象的克隆，都会使此模式变得异常麻烦。</li><li>终究设计模式是一整套的思想，在不同的场景合理的运用可以提升整体的架构的质量。永远不要想着去硬凑设计模式，否则将会引起过渡设计，以及在承接业务反复变化的需求时造成浪费的开发和维护成本。</li><li>初期是代码的优化，中期是设计模式的使用，后期是把控全局服务的搭建。不断的加强自己对全局能力的把控，也加深自己对细节的处理。可上可下才是一个程序员最佳处理方式，选取做合适的才是最好的选择。</li></ul>`,64);function S(B,Q){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",r,[s("https://bugstack.cn"),p(a)])]),d,v,m,n("ol",null,[b,g,n("li",null,[s("涉及工程三个，可以通过关注"),q,s("："),n("a",h,[A,p(a)]),s("，回复"),f,s("获取(打开获取的链接，找到序号18)")])]),w,n("ul",null,[n("li",null,[s("图片来自："),n("a",y,[s("https://refactoringguru.cn/design-patterns/prototype"),p(a)])])]),C])}const V=e(i,[["render",S],["__file","2020-05-28-zhongxue Java shejimoshi《shizhanyuanxingmoshi》.html.vue"]]);export{V as default};
