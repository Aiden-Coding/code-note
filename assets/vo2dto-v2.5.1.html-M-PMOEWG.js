import{_ as p,r as o,o as c,c as i,a as n,b as s,d as t,e}from"./app-3RcBQnkC.js";const l={},u=n("h1",{id:"idea-plugin-vo2dto-——-这款插件-为开发提效80-已经有8-1k安装量",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#idea-plugin-vo2dto-——-这款插件-为开发提效80-已经有8-1k安装量","aria-hidden":"true"},"#"),s(" IDEA Plugin vo2dto —— 这款插件，为开发提效80%，已经有8.1k安装量！")],-1),r=n("br",null,null,-1),d={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},k=e('<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><p>哈喽，大家好我是技术UP主小傅哥。</p><p>如果你担心维护成本和性能考量，不想使用 <code>BeanUtils.copyProperties</code> 复制对象，也不想大面积的增加配置文件使用 <code>MapStruct</code>。而是只想要要手写效果的 <code>x.set(y.get)</code> 模型。那么请立刻在 IDEA 中安装插件 <strong>vo2dto v2.5.1</strong> 最新版本。截止到目前小傅哥开发的这款插件已经有 <strong>8.1k 安装量</strong>！</p><div align="center"><img src="https://bugstack.cn/images/article/product/idea-plugin/vo2dto-2.5.1-00.png" width="550px"></div><p>IDEA Plugin vo2dto 是一款用于帮助使用 IntelliJ IDEA 编写代码的研发人员，快速生成两个对象转换过程中所需要大量的 <code>x.set(y.get)</code> 代码块的插件工具。在最新 v2.5.1 版本中已支持 Lombok.Builder 模式，让使用可丝滑得嘞！</p><blockquote><p>文末提供了此插件的源码地址，你可以针对使用优化提交PR，以后那么多人的使用，都会看见你的贡献💐。</p></blockquote><h2 id="✨-特性" tabindex="-1"><a class="header-anchor" href="#✨-特性" aria-hidden="true">#</a> ✨ 特性</h2><ol><li>2个对象的转换操作，通过复制 X x 对象，转换给 Y y 对象</li><li>允许使用 lombok 对象转换、lombok 和普通对象转换，对于 serialVersionUID 属性过滤</li><li>支持类继承类，全量的对象转换操作</li><li>含记忆功能的弹窗选择映射关系，支持全量对象、支持匹配对象、也支持空转换，生成一组set但无get的对象</li><li>支持对于引入不同包下的同名类处理</li><li>支持 Lombok.Builder 模式创建转换对象</li></ol><h2 id="🛠️-安装" tabindex="-1"><a class="header-anchor" href="#🛠️-安装" aria-hidden="true">#</a> 🛠️ 安装</h2><h3 id="_1-在线安装" tabindex="-1"><a class="header-anchor" href="#_1-在线安装" aria-hidden="true">#</a> 1. 在线安装</h3><table><thead><tr><th style="text-align:center;">IDEA Plugin 搜索vo2dto直接在线安装即可</th></tr></thead><tbody><tr><td style="text-align:center;"><div align="center"><img src="https://bugstack.cn/images/article/product/idea-plugin/vo2dto-2.5.1-02.png" width="700px"></div></td></tr></tbody></table><h3 id="_2-手动安装" tabindex="-1"><a class="header-anchor" href="#_2-手动安装" aria-hidden="true">#</a> 2. 手动安装</h3>',12),v={href:"https://github.com/fuzhengwei/vo2dto/releases/tag/v2.5.1",target:"_blank",rel:"noopener noreferrer"},m=n("li",null,"安装：",-1),b=e('<table><thead><tr><th style="text-align:center;">IDEA Plugin 手动安装，导入下载包</th></tr></thead><tbody><tr><td style="text-align:center;"><div align="center"><img src="https://bugstack.cn/images/article/product/idea-plugin/vo2dto-2.5.1-03.png" width="700px"></div></td></tr></tbody></table><h2 id="🔨-使用" tabindex="-1"><a class="header-anchor" href="#🔨-使用" aria-hidden="true">#</a> 🔨 使用</h2>',2),h={href:"https://www.bilibili.com/video/BV13Y411h7fv",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"视频内有完整的使用介绍和插件设计",-1),y=n("li",null,[s("描述：你需要复制被转换 X x = new X() 中的 X x 部分，无论它是方法入参还是实例化或者是接口回值，接下来鼠标定位到转换对象 Y y 上，可以定位到"),n("code",null,"类 大Y"),s("、或者"),n("code",null,"属性 小y"),s("，这样我就可以知道你要做到是X的对象的属性值，转换到Y对象的属性值上。接下来帮你快速生成全部的 "),n("code",null,"y.set(x.get)"),s(" 代码片段。")],-1),w=e(`<table><thead><tr><th style="text-align:center;">IDEA Plugin vo2dto 使用演示图</th></tr></thead><tbody><tr><td style="text-align:center;"><div align="center"><img src="https://bugstack.cn/images/article/product/idea-plugin/vo2dto-2.5.1-04.png" width="700px"></div></td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Builder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiTest</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 普通模式
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_vo2dto01</span><span class="token punctuation">(</span><span class="token class-name">UserVO</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">UserDTO</span> userDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userDTO<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userDTO<span class="token punctuation">.</span><span class="token function">setUserNickName</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserNickName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userDTO<span class="token punctuation">.</span><span class="token function">setUserHead</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserHead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * lombok Builder 模式
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_vo2dto02</span><span class="token punctuation">(</span><span class="token class-name">UserVO</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">UserDTO</span> userDTO <span class="token operator">=</span> <span class="token class-name">UserDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">userNickName</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserNickName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">userHead</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUserHead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@Builder</span>
    <span class="token annotation punctuation">@AllArgsConstructor</span>
    <span class="token annotation punctuation">@NoArgsConstructor</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UserDTO</span> <span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> userIdx<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> userNickName<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> userHead<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> page<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> rows<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@Builder</span>
    <span class="token annotation punctuation">@AllArgsConstructor</span>
    <span class="token annotation punctuation">@NoArgsConstructor</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UserVO</span> <span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> userNickName<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> userHead<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> userPassword<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Date</span> createTime<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Date</span> updateTime<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意；v2.5.1 版本已支持了 Lombok Builder 模式，方便使用 Lombok 的伙伴创建对象。如图使用方式即可完成创建过程。</li></ul><h2 id="🤝-共建" tabindex="-1"><a class="header-anchor" href="#🤝-共建" aria-hidden="true">#</a> 🤝 共建</h2><p><strong>源码</strong>：https://github.com/fuzhengwei/vo2dto - 你可以Fork工程，了解这套组件源码，对使用过程中所需的优化和扩展，提交你的代码。那么下次发版就会带上你的贡献了💐</p><div align="center"><img src="https://bugstack.cn/images/article/product/idea-plugin/vo2dto-2.5.1-05.png" width="700px"></div><h2 id="💐-成长" tabindex="-1"><a class="header-anchor" href="#💐-成长" aria-hidden="true">#</a> 💐 成长</h2><p>这样的一个8000多安装量的开源组件项目，仅仅是小傅哥这篇知识社群「星球：码农会锁」中的一个小小内容。此外还包括了；大营销平台、Api网关、Lottery 抽奖、IM通信、SpringBoot Starter、IDEA Plugin 等内容，也还带着伙伴一起做开源的SDK发布到Maven仓库。</p><p>如果你想🔜快速的提升技术，是非常有必要跟着小傅哥一起学习。以我在大厂的业务经历、技术经验、落地能力，可以为你提高更高的见识。👣 踩在我的肩膀，你能看的更远！</p><blockquote><p>赶紧加入星球，能做到这样的技术项目实战社群，真的不多！你只是投入一顿大麻辣烫💰，就🉐获得超级大的回报！</p></blockquote><div align="center"><img src="https://bugstack.cn/images/article/zsxq/zsxq-youhuiquan.png?raw=true" width="300px"></div>`,11);function _(f,x){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[s("作者：小傅哥 "),r,s("博客："),n("a",d,[s("https://bugstack.cn"),t(a)])]),k,n("ul",null,[n("li",null,[s("下载："),n("a",v,[s("https://github.com/fuzhengwei/vo2dto/releases/tag/v2.5.1"),t(a)])]),m]),b,n("ul",null,[n("li",null,[s("视频："),n("a",h,[s("https://www.bilibili.com/video/BV13Y411h7fv"),t(a)]),s(" - "),g]),y]),w])}const I=p(l,[["render",_],["__file","vo2dto-v2.5.1.html.vue"]]);export{I as default};
