import{_ as t,r as p,o as r,c as l,a as n,b as s,d as e,e as o}from"./app-3RcBQnkC.js";const c={},i=n("h1",{id:"skywalking-全链路监控",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#skywalking-全链路监控","aria-hidden":"true"},"#"),s(" skywalking 全链路监控")],-1),d=n("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},u=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=827392143&bvid=BV1Lg4y1K7E9&cid=1167705761&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),v=n("p",null,"这位同学，你比上一位面试者好多了，你的简历中做的几个项目都不错。既有业务项目，也有技术项目，看得出你对编程开发是有一定的经验积累的。那么我还想了解下，这些项目在运行中的一个数据效果是怎么样的。比如；tps、qps、响应时间、数据库负载等，都是什么情况，你用的什么监控工具。另外你这里还些了微服务的架构，那么微服务间的链路调用是怎么监控的。",-1),g=n("p",null,"咋样，是不一下就慌了。张口就喊：“java 崩盘！” 以前靠背题吹牛逼就能入职，现在得把吹的牛逼落地了。而越来越多的面试官也更喜欢用结果推过程，从过程中再考察细节。一上来就问八股文的越来越少了。",-1),h=n("strong",null,"所以",-1),b={href:"https://bugstack.cn/md/road-map/road-map.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://bugstack.cn/md/road-map/road-map.html",target:"_blank",rel:"noopener noreferrer"},w=n("h2",{id:"一、章节目的",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、章节目的","aria-hidden":"true"},"#"),s(" 一、章节目的")],-1),y=n("div",{align:"center"},[n("img",{src:"https://bugstack.cn/images/roadmap/tutorial/road-map-230617-01.png?raw=true",width:"950px"})],-1),E=n("p",null,"本章节通过 Docker 方式部署一套 skywalking 非入侵的全链路监控系统，并在对应的测试工程中通过 skywalking-agent 字节码增强组件，采集系统运行时的各项信息到 skywalking-ui 监控平台观察数据。",-1),f=n("strong",null,"官网",-1),A={href:"https://skywalking.apache.org/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://bugstack.cn/md/bytecode/asm/2020-03-25-%5BASM%E5%AD%97%E8%8A%82%E7%A0%81%E7%BC%96%E7%A8%8B%5D%E5%A6%82%E6%9E%9C%E4%BD%A0%E5%8F%AA%E5%86%99CRUD%EF%BC%8C%E9%82%A3%E8%BF%99%E7%A7%8D%E6%8A%80%E6%9C%AF%E4%BD%A0%E6%B0%B8%E8%BF%9C%E7%A2%B0%E4%B8%8D%E5%88%B0.html",target:"_blank",rel:"noopener noreferrer"},N=n("strong",null,"源码",-1),D={href:"https://gitcode.net/KnowledgePlanet/road-map/skywalking",target:"_blank",rel:"noopener noreferrer"},x=n("h2",{id:"二、基本环境",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二、基本环境","aria-hidden":"true"},"#"),s(" 二、基本环境")],-1),T=n("ul",null,[n("li",null,"Docker version 1.13.1"),n("li",null,"Docker compose - 用于在云服务器环境中执行的 docker-compose 文件"),n("li",null,"Portainer Docker 容器管理面板")],-1),R={href:"https://bugstack.cn/md/road-map/road-map.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://bugstack.cn/md/road-map/road-map.html",target:"_blank",rel:"noopener noreferrer"},C=n("h2",{id:"三、监控配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#三、监控配置","aria-hidden":"true"},"#"),s(" 三、监控配置")],-1),S={href:"https://skywalking.apache.org/downloads/",target:"_blank",rel:"noopener noreferrer"},I=n("p",null,[s("因为小傅哥这里提供了Docker的自动部署以及下载好了 skywalking-agent 所以你就不需要一个个去下载安装了。接下来小傅哥会分别介绍在"),n("code",null,"本地环境"),s("和"),n("code",null,"云服务器"),s("两套环境安装，这样可以更加方便小伙伴做测试验证。")],-1),M={href:"https://gitcode.net/KnowledgePlanet/road-map/skywalking",target:"_blank",rel:"noopener noreferrer"},B=o(`<div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230617-02.png?raw=true" width="650px"></div><h3 id="_1-本地环境" tabindex="-1"><a class="header-anchor" href="#_1-本地环境" aria-hidden="true">#</a> 1. 本地环境</h3><p><strong>脚本</strong>：<code>/road-map/skywalking/docs/dev-ops/skywalking</code> - 你可以打开工程找到这个位置，查看最新脚本。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>version<span class="token operator">:</span> <span class="token char">&#39;3.8&#39;</span>
services<span class="token operator">:</span>
  elasticsearch<span class="token operator">:</span>
    image<span class="token operator">:</span> elasticsearch<span class="token operator">:</span><span class="token number">7.16</span><span class="token number">.2</span>
    container_name<span class="token operator">:</span> elasticsearch
    ports<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token string">&quot;9200:9200&quot;</span>
    healthcheck<span class="token operator">:</span>
      test<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;CMD-SHELL&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;curl --silent --fail localhost:9200/_cluster/health || exit 1&quot;</span> <span class="token punctuation">]</span>
      interval<span class="token operator">:</span> <span class="token number">30</span>s
      timeout<span class="token operator">:</span> <span class="token number">10</span>s
      retries<span class="token operator">:</span> <span class="token number">3</span>
      start_period<span class="token operator">:</span> <span class="token number">10</span>s
    environment<span class="token operator">:</span>
      <span class="token operator">-</span> discovery<span class="token punctuation">.</span>type<span class="token operator">=</span>single<span class="token operator">-</span>node
      <span class="token operator">-</span> bootstrap<span class="token punctuation">.</span>memory_lock<span class="token operator">=</span><span class="token boolean">true</span>
      <span class="token operator">-</span> <span class="token string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span>
    ulimits<span class="token operator">:</span>
      memlock<span class="token operator">:</span>
        soft<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>
        hard<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>
    volumes<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token punctuation">.</span>/data<span class="token operator">/</span>es_data<span class="token operator">:</span><span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>elasticsearch<span class="token operator">/</span>data

  oap<span class="token operator">:</span>
    image<span class="token operator">:</span> apache<span class="token operator">/</span>skywalking<span class="token operator">-</span>oap<span class="token operator">-</span>server<span class="token operator">:</span><span class="token number">8.9</span><span class="token number">.0</span>
    container_name<span class="token operator">:</span> oap
    depends_on<span class="token operator">:</span>
      elasticsearch<span class="token operator">:</span>
        condition<span class="token operator">:</span> service_healthy
    links<span class="token operator">:</span>
      <span class="token operator">-</span> elasticsearch
    ports<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token string">&quot;11800:11800&quot;</span>
      <span class="token operator">-</span> <span class="token string">&quot;12800:12800&quot;</span>
    healthcheck<span class="token operator">:</span>
      test<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;CMD-SHELL&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/skywalking/bin/swctl ch&quot;</span> <span class="token punctuation">]</span>
      interval<span class="token operator">:</span> <span class="token number">30</span>s
      timeout<span class="token operator">:</span> <span class="token number">10</span>s
      retries<span class="token operator">:</span> <span class="token number">3</span>
      start_period<span class="token operator">:</span> <span class="token number">10</span>s
    environment<span class="token operator">:</span>
      <span class="token constant">SW_STORAGE</span><span class="token operator">:</span> elasticsearch
      <span class="token constant">SW_STORAGE_ES_CLUSTER_NODES</span><span class="token operator">:</span> elasticsearch<span class="token operator">:</span><span class="token number">9200</span>
      <span class="token constant">SW_HEALTH_CHECKER</span><span class="token operator">:</span> <span class="token keyword">default</span>
      <span class="token constant">SW_TELEMETRY</span><span class="token operator">:</span> prometheus
      <span class="token constant">JAVA_OPTS</span><span class="token operator">:</span> <span class="token string">&quot;-Xms1024m -Xmx1024m&quot;</span>

  skywalking<span class="token operator">-</span>ui<span class="token operator">:</span>
    image<span class="token operator">:</span> apache<span class="token operator">/</span>skywalking<span class="token operator">-</span>ui<span class="token operator">:</span><span class="token number">8.9</span><span class="token number">.0</span>
    container_name<span class="token operator">:</span> skywalking<span class="token operator">-</span>ui
    depends_on<span class="token operator">:</span>
      oap<span class="token operator">:</span>
        condition<span class="token operator">:</span> service_healthy
    links<span class="token operator">:</span>
      <span class="token operator">-</span> oap
    ports<span class="token operator">:</span>
      <span class="token operator">-</span> <span class="token string">&quot;9090:8080&quot;</span>
    environment<span class="token operator">:</span>
      <span class="token constant">SW_OAP_ADDRESS</span><span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>oap<span class="token operator">:</span><span class="token number">12800</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230617-03.png?raw=true" width="650px"></div><ul><li>在 Docker 安装并正确✅启动后，你就可以点击这个按钮了。它会帮你自动运行安装出整套的 skywalking 监控系统。非常方便。</li><li>如果你点击红圈下面的单个按钮，那么代表的是只安装当前一个应用。</li><li>你可以通过命令执行 <code>skywalking-docker-compose.yml</code> 的安装：<code>/usr/local/bin/docker-compose -f /docs/dev-ops/skywalking/skywalking-docker-compose.yml up -d</code> - 在云服务器端也是使用这个命令安装。</li></ul>`,6),O={href:"http://localhost:9090/",target:"_blank",rel:"noopener noreferrer"},P=n("h3",{id:"_2-云服务器",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-云服务器","aria-hidden":"true"},"#"),s(" 2. 云服务器")],-1),L=n("li",null,"准备一台2核4G的云服务器，整个服务启动后会占用2-3G左右",-1),V=n("li",null,"下载 ssh 工具，用于连接云服务。这里小傅哥推荐使用 Termius 非常好用！",-1),$={href:"https://bugstack.cn/md/road-map/road-map.html",target:"_blank",rel:"noopener noreferrer"},H=o(`<h4 id="_2-1-文件上传" tabindex="-1"><a class="header-anchor" href="#_2-1-文件上传" aria-hidden="true">#</a> 2.1 文件上传</h4><p>通过 ssh 的 sftp 工具，把 skywalking/docs 全部上传到云服务器。</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230617-04.png?raw=true" width="750px"></div><h4 id="_2-2-执行脚本" tabindex="-1"><a class="header-anchor" href="#_2-2-执行脚本" aria-hidden="true">#</a> 2.2 执行脚本</h4><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230617-05.png?raw=true" width="750px"></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@dev-ops ~<span class="token punctuation">]</span><span class="token comment"># cd /docs/</span>
<span class="token punctuation">[</span>root@dev-ops docs<span class="token punctuation">]</span><span class="token comment"># ls</span>
dev-ops  skywalking-agent  sql
<span class="token punctuation">[</span>root@dev-ops docs<span class="token punctuation">]</span><span class="token comment"># cd dev-ops/</span>
<span class="token punctuation">[</span>root@dev-ops dev-ops<span class="token punctuation">]</span><span class="token comment"># ls</span>
environment  skywalking
<span class="token punctuation">[</span>root@dev-ops dev-ops<span class="token punctuation">]</span><span class="token comment"># cd skywalking/</span>
<span class="token punctuation">[</span>root@dev-ops skywalking<span class="token punctuation">]</span><span class="token comment"># ls</span>
skywalking-docker-compose.yml
<span class="token punctuation">[</span>root@dev-ops skywalking<span class="token punctuation">]</span><span class="token comment"># /usr/local/bin/docker-compose -f /docs/dev-ops/skywalking/skywalking-docker-compose.yml up -d</span>
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Building <span class="token number">0</span>.0s <span class="token punctuation">(</span><span class="token number">0</span>/0<span class="token punctuation">)</span>                                                                          
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Running <span class="token number">3</span>/3
 ✔ Container elasticsearch  Healthy                                                         <span class="token number">0</span>.5s 
 ✔ Container oap            Healthy                                                         <span class="token number">1</span>.0s 
 ✔ Container skywalking-ui  Running                                                         <span class="token number">0</span>.0s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完成记得开放端口；</p><ul><li>9090 端口；skywalking-ui 界面端口</li><li>11800 端口；监控数据上报端口</li></ul>`,8),F={href:"http://180.76.138.:9090**/",target:"_blank",rel:"noopener noreferrer"},K=o(`<h2 id="四、数据上报" tabindex="-1"><a class="header-anchor" href="#四、数据上报" aria-hidden="true">#</a> 四、数据上报</h2><p>监控数据的上报使用的是 Javaagent 技术，在程序加载时候通过字节码增强技术，在需要监控的位置自动加上额外的监控代码，来采集系统的运行数据。所以我们这里可以把 Javaagent 配置到程序启动上，也可以配置到 Docker 镜像打包上。</p><h3 id="_1-程序启动-加入探针" tabindex="-1"><a class="header-anchor" href="#_1-程序启动-加入探针" aria-hidden="true">#</a> 1. 程序启动 - 加入探针</h3><p>配置到 IDEA 程序启动中，VM Options 参数：<code>-javaagent:/Users/fuzhengwei/1024/KnowledgePlanet/road-map/skywalking/docs/skywalking-agent/skywalking-agent.jar -Dskywalking.agent.service_name=skywalking-app-dev -Dskywalking.collector.backend_service=127.0.0.1:11800</code></p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/road-map-230617-06.png?raw=true" width="750px"></div><ul><li>注意修改；<code>地址</code>、<code>应用名</code>、<code>IP</code>【如果是云服务，就配置云服务的IP地址】</li></ul><h3 id="_2-镜像打包-加入探针" tabindex="-1"><a class="header-anchor" href="#_2-镜像打包-加入探针" aria-hidden="true">#</a> 2. 镜像打包 - 加入探针</h3><p>当程序需要运行在云服务的 Docker 容器了，就不能这样配置了，需要把配置打包到镜像里，更加方便执行。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code># 基础镜像
<span class="token constant">FROM</span> openjdk<span class="token operator">:</span><span class="token number">8</span><span class="token operator">-</span>jre<span class="token operator">-</span>slim
# 作者
<span class="token constant">MAINTAINER</span> xiaofuge
# 配置
<span class="token class-name">ENV</span> <span class="token constant">PARAMS</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
# 时区
<span class="token class-name">ENV</span> <span class="token constant">TZ</span><span class="token operator">=</span><span class="token constant">PRC</span>
<span class="token constant">RUN</span> ln <span class="token operator">-</span>snf <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>zoneinfo<span class="token operator">/</span>$<span class="token constant">TZ</span> <span class="token operator">/</span>etc<span class="token operator">/</span>localtime <span class="token operator">&amp;&amp;</span> echo $<span class="token constant">TZ</span> <span class="token operator">&gt;</span> <span class="token operator">/</span>etc<span class="token operator">/</span>timezone
# 添加应用
<span class="token constant">ADD</span> <span class="token operator">/</span>target<span class="token operator">/</span>skywalking<span class="token operator">-</span>app<span class="token punctuation">.</span>jar <span class="token operator">/</span>skywalking<span class="token operator">-</span>app<span class="token punctuation">.</span>jar
## 在镜像运行为容器后执行的命令
<span class="token constant">ENTRYPOINT</span> <span class="token punctuation">[</span><span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-Xmx512m&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-javaagent:/docs/skywalking-agent/skywalking-agent.jar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-Dskywalking.agent.service_name=skywalking-app&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-Dskywalking.collector.backend_service=180.76.138.41:11800&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-jar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/skywalking-app.jar&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意；<code>/docs/skywalking-agent/skywalking-agent.jar</code> 这个是通过 SFTP 工具上传到云服务器端的。但不在 Docker 容器里，等部署程序的时候还需要做一次文件映射。</li></ul><h2 id="五、启动服务" tabindex="-1"><a class="header-anchor" href="#五、启动服务" aria-hidden="true">#</a> 五、启动服务</h2>`,11),z={href:"https://bugstack.cn/md/road-map/road-map.html",target:"_blank",rel:"noopener noreferrer"},G=o(`<p><strong>脚本</strong>：<code>skywalking/src/bin/main/start.sh</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">CONTAINER_NAME</span><span class="token operator">=</span>skywalking<span class="token operator">-</span>app
<span class="token constant">IMAGE_NAME</span><span class="token operator">=</span>fuzhengwei<span class="token operator">/</span>skywalking<span class="token operator">-</span>app<span class="token operator">:</span><span class="token number">1.0</span>
<span class="token constant">PORT</span><span class="token operator">=</span><span class="token number">9091</span>

echo <span class="token string">&quot;容器部署开始 \${CONTAINER_NAME}&quot;</span>

# 停止容器
docker stop $<span class="token punctuation">{</span><span class="token constant">CONTAINER_NAME</span><span class="token punctuation">}</span>

# 删除容器
docker rm $<span class="token punctuation">{</span><span class="token constant">CONTAINER_NAME</span><span class="token punctuation">}</span>

# 启动容器 skywalking<span class="token operator">-</span>agent 下载：https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>archive<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>org<span class="token operator">/</span>dist<span class="token operator">/</span>skywalking<span class="token operator">/</span>java<span class="token operator">-</span>agent<span class="token operator">/</span><span class="token number">8.9</span><span class="token number">.0</span><span class="token operator">/</span>apache<span class="token operator">-</span>skywalking<span class="token operator">-</span>java<span class="token operator">-</span>agent<span class="token operator">-</span><span class="token number">8.9</span><span class="token number">.0</span><span class="token punctuation">.</span>tgz
docker run <span class="token operator">--</span>name $<span class="token punctuation">{</span><span class="token constant">CONTAINER_NAME</span><span class="token punctuation">}</span> \\
<span class="token operator">-</span>p $<span class="token punctuation">{</span><span class="token constant">PORT</span><span class="token punctuation">}</span><span class="token operator">:</span>$<span class="token punctuation">{</span><span class="token constant">PORT</span><span class="token punctuation">}</span> \\
<span class="token operator">-</span>v <span class="token operator">/</span>docs<span class="token operator">/</span>skywalking<span class="token operator">-</span>agent<span class="token operator">/</span><span class="token operator">:</span><span class="token operator">/</span>docs<span class="token operator">/</span>skywalking<span class="token operator">-</span>agent<span class="token operator">/</span> \\
<span class="token operator">-</span>d $<span class="token punctuation">{</span><span class="token constant">IMAGE_NAME</span><span class="token punctuation">}</span>

#docker run <span class="token operator">--</span>name skywalking<span class="token operator">-</span>app \\
#<span class="token operator">-</span>p <span class="token number">9091</span><span class="token operator">:</span><span class="token number">9091</span> \\
#<span class="token operator">-</span>v <span class="token operator">/</span>docs<span class="token operator">/</span>skywalking<span class="token operator">-</span>agent<span class="token operator">/</span><span class="token operator">:</span><span class="token operator">/</span>docs<span class="token operator">/</span>skywalking<span class="token operator">-</span>agent<span class="token operator">/</span> \\
#<span class="token operator">-</span>d fuzhengwei<span class="token operator">/</span>skywalking<span class="token operator">-</span>app<span class="token operator">:</span><span class="token number">1.2</span>

echo <span class="token string">&quot;容器部署成功 \${CONTAINER_NAME}&quot;</span>

docker logs <span class="token operator">-</span>f $<span class="token punctuation">{</span><span class="token constant">CONTAINER_NAME</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>你可以在云服务执行 start.sh 脚本，或者直接复制 docker run 命令，去执行启动。</li><li>注意；<code>-v /docs/skywalking-agent/:/docs/skywalking-agent/ \\</code> 是你的映射地址，只有这样才能拿到 skywalking-agent</li><li>另外记得按照 MySQL【environment-docker-compose.yml】 到云服务以及执行 road-map.sql 文件。</li></ul>`,3);function J(W,X){const a=p("ExternalLinkIcon");return r(),l("div",null,[i,n("p",null,[s("作者：小傅哥 "),d,s("博客："),n("a",k,[s("https://bugstack.cn"),e(a)])]),u,m,v,g,n("p",null,[h,s("，做完项目，最好在配上对应的数据，这样才更有说服力。—— 所以本文小傅哥会教会你，如何配置一套全链路监控系统，并完成测试获取系统运行的数据。此外这是整套"),n("a",b,[s("《@小傅哥 Java 简明教程》"),e(a)]),s("其中的一节，更多内容可以进入这里学习；"),n("a",_,[s("https://bugstack.cn/md/road-map/road-map.html"),e(a)])]),w,y,E,n("ul",null,[n("li",null,[f,s("："),n("a",A,[s("https://skywalking.apache.org/"),e(a)]),s(" - 如果你想了解更多关于此类系统的设计和实现，可以阅读小傅哥的"),n("a",q,[s("《字节码编程》"),e(a)])]),n("li",null,[N,s("："),n("a",D,[s("https://gitcode.net/KnowledgePlanet/road-map/skywalking"),e(a)]),s(" - 这是小傅哥整理好的一套可运行的监控和系统，读者可以下载后对照本文进行验证使用。")])]),x,T,n("p",null,[s("以上内容安装，参考"),n("a",R,[s("【Java简明教程/发布部署】"),e(a)]),s("："),n("a",j,[s("https://bugstack.cn/md/road-map/road-map.html"),e(a)]),s(" - 发布部署")]),C,n("p",null,[s("skywalking 的安装，需要 elasticsearch - 存放数据、skywalking-oap 接收数据、skywalking-ui 界面展示。以及还需要一个 skywalking-agent 用于配置到应用程序中，采集监控数据。注意这些内容在官网中，都已提供，地址："),n("a",S,[s("https://skywalking.apache.org/downloads/"),e(a)])]),I,n("p",null,[s("在进行下面的步骤前，请先下载 skywalking 监控工程；"),n("a",M,[s("https://gitcode.net/KnowledgePlanet/road-map/skywalking"),e(a)])]),B,n("p",null,[s("访问验证："),n("a",O,[s("http://localhost:9090/"),e(a)]),s(" - 我设置的端口是9090，如果你是其他的则需要修改。")]),P,n("ul",null,[L,V,n("li",null,[s("docker-compose 安装，参考："),n("a",$,[s("https://bugstack.cn/md/road-map/road-map.html"),e(a)]),s(" - 发布部署，Docker#7")])]),H,n("p",null,[s("安装完成后就可以访问监控界面了；"),n("a",F,[s("http://180.76.138.**:9090/"),e(a)]),s(" - 替换为你的IP地址")]),K,n("p",null,[s("如果你希望在把应用程序部署到云服务端，一种是通过 IDEA 连接 Docker 服务，另外一种是把应用程序的镜像发布到Docker Hub。这里我们通过 IDEA 连接 Docker 服务。参考："),n("a",z,[s("https://bugstack.cn/md/road-map/road-map.html"),e(a)]),s(" - 开通 2375 端口，用完记得关闭。")]),G])}const Z=t(c,[["render",J],["__file","skywalking.html.vue"]]);export{Z as default};
