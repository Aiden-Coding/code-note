import{_ as p,r as o,o as c,c as l,a as n,b as s,d as t,e}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"第6节-扩展创建工程向导步骤-开发ddd脚手架",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#第6节-扩展创建工程向导步骤-开发ddd脚手架","aria-hidden":"true"},"#"),s(" 第6节：扩展创建工程向导步骤，开发DDD脚手架")],-1),d=n("br",null,null,-1),r={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},k=n("br",null,null,-1),v={href:"https://mp.weixin.qq.com/s/4DFCF83bySTYyBZgouX6-w",target:"_blank",rel:"noopener noreferrer"},m=e(`<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>研发，要避免自嗨！</code></p><p>你做这个东西的价值是什么？有竞品调研吗？能赋能业务吗？那不已经有同类的了，你为什么还自己造轮子？</p><p>你是不是也会被问到这样的问题，甚至可能还有些头疼。但做的时候挺嗨，研究技术嘛，还落地了，多刺激。不过要说价值，好像一时半会还体现不出来，能不能赋能业务就不更不一定了。</p><p>可谁又能保证以后不能呢，技术的点是一个个攻克尝试的才有机会再深度学习后把这些内容连成一片，就像单说水、单说沙子、单说泥巴，好像并没有啥用，但把它们凑到一块再给把火，就烧成了砖，砖就码成了墙，墙就盖成房。</p><h2 id="二、需求目的" tabindex="-1"><a class="header-anchor" href="#二、需求目的" aria-hidden="true">#</a> 二、需求目的</h2><p>我们这一章节把 freemarker 能力与 IDEA Plugin 插件能力结合，开发一个<code>DDD 脚手架 IDEA 插件</code>，可能你会想为什么要把脚手架开发到插件里呢？还有不是已经有了成型的脚手架可以用吗？</p><p>首先我们目前看到的脚手架基本都是网页版的，也就是一次性创建工程使用，不过在我们实际使用的时候，还希望在工程创建过程中把数据库、ES、Redis等生成对应的 ORM 代码，减少开发工作量。并且在使用的工程骨架的过程中，还希望可以随着开发需要再次补充新的功能进去，这个时候网页版的脚手架都不能很好的支持了。此外一些大厂都会自己的技术体系，完全是使用市面的脚手架基本很难满足自身的需求，所以就需要有一个符合自己场景的脚手架了。</p><p>那么，我们本章节就把脚手架的开发放到 IDEA 插件开发中，一方面学习脚手架的建设，另外一方面学习如何改变工程向导，创建出自己需要的DDD结构脚手架。</p><h2 id="三、案例开发" tabindex="-1"><a class="header-anchor" href="#三、案例开发" aria-hidden="true">#</a> 三、案例开发</h2><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>guide<span class="token operator">-</span>idea<span class="token operator">-</span>plugin<span class="token operator">-</span>scaffolding
├── <span class="token punctuation">.</span>gradle
└── src
    ├── main
    │   └── java
    │   	└── cn<span class="token punctuation">.</span>bugstack<span class="token punctuation">.</span>guide<span class="token punctuation">.</span>idea<span class="token punctuation">.</span>plugin 
    │       	├── domain
    │       	│	├── model   
    │       	│	│	└── <span class="token class-name">ProjectConfigVO</span><span class="token punctuation">.</span>java       
    │       	│	└── service   
    │       	│	 	├── impl     
    │       	│	 	│	└── <span class="token class-name">ProjectGeneratorImpl</span><span class="token punctuation">.</span>java  
    │       	│	 	├── <span class="token class-name">AbstractProjectGenerator</span><span class="token punctuation">.</span>java     
    │       	│	 	├── <span class="token class-name">FreemarkerConfiguration</span><span class="token punctuation">.</span>java      
    │       	│	 	└── <span class="token class-name">IProjectGenerator</span><span class="token punctuation">.</span>java      
    │       	├── factory
    │       	│	└── <span class="token class-name">TemplateFactory</span><span class="token punctuation">.</span>java  
    │       	├── infrastructure
    │       	│	├── <span class="token class-name">DataSetting</span><span class="token punctuation">.</span>java       
    │       	│	├── <span class="token class-name">DataState</span><span class="token punctuation">.</span>java  
    │       	│	├── <span class="token constant">ICONS</span><span class="token punctuation">.</span>java      
    │       	│	└── <span class="token class-name">MsgBundle</span><span class="token punctuation">.</span>java     
    │       	├── <span class="token keyword">module</span>  
    │       	│	├── <span class="token class-name">DDDModuleBuilder</span><span class="token punctuation">.</span>java    
    │       	│	└── <span class="token class-name">DDDModuleConfigStep</span><span class="token punctuation">.</span>java         
    │       	└── ui
    │       	 	├── <span class="token class-name">ProjectConfigUI</span><span class="token punctuation">.</span>java  
    │       	 	└── <span class="token class-name">ProjectConfigUI</span><span class="token punctuation">.</span>form
    ├── resources
    │   ├── <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span>
    │   │   └── plugin<span class="token punctuation">.</span>xml 
    │   └── template
    │       ├── pom<span class="token punctuation">.</span>ftl
    │       └── yml<span class="token punctuation">.</span>ftl 
    ├── build<span class="token punctuation">.</span>gradle  
    └── gradle<span class="token punctuation">.</span>properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>源码获取</strong>：#公众号：<code>bugstack虫洞栈</code> 回复：<code>idea</code> 即可下载全部 IDEA 插件开发源码</p><p>在此 IDEA 插件工程中，主要分为5块区域：</p><ul><li>domain：领域层，提供创建 DDD 模板工程的服务，其实这部分主要使用的就是 freemarker</li><li>factory：工厂层，提供工程创建模板，这一层的作用就是我们在 IDEA 中创建新工程的时候，可以添加上我们自己的内容，也就是创建出我们定义好的 DDD 工程结构。</li><li>infrastructure：基础层，提供数据存放、图片加载、信息映射这些功能。</li><li>module：模块层，提供 DDD 模板工程的创建具体操作和步骤，也就是说我们创建工程的时候是一步步选择的，你可以按需添加自己的步骤页面，允许用户选择和添加自己需要的内容。<em>比如你需要连库、选择表、添加工程所需要的技术栈等</em></li><li>ui：界面层，提供Swing 开发的 UI 界面，用于用户图形化选择和创建。</li></ul><h3 id="_2-ui-工程配置窗体" tabindex="-1"><a class="header-anchor" href="#_2-ui-工程配置窗体" aria-hidden="true">#</a> 2. UI 工程配置窗体</h3><p><img src="https://bugstack.cn/images/article/assembly/assembly-211123-4-01.png" alt=""></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProjectConfigUI</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">JPanel</span> mainPanel<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JTextField</span> groupIdField<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JTextField</span> artifactIdField<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JTextField</span> versionField<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JTextField</span> packageField<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 Swing UI Designer 创建一个配置工厂信息的 UI 窗体，通过这样的方式创建可以直接拖拽。</li><li>在这个 UI 窗体中我们主要需要；<code>roupId</code>、<code>artifactId</code>、<code>version</code>、<code>package</code></li></ul><h3 id="_3-配置工程步骤创建" tabindex="-1"><a class="header-anchor" href="#_3-配置工程步骤创建" aria-hidden="true">#</a> 3. 配置工程步骤创建</h3><h4 id="_3-1-数据存放" tabindex="-1"><a class="header-anchor" href="#_3-1-数据存放" aria-hidden="true">#</a> 3.1 数据存放</h4><p><strong>cn.bugstack.guide.idea.plugin.infrastructure.DataSetting</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@State</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;DataSetting&quot;</span><span class="token punctuation">,</span>storages <span class="token operator">=</span> <span class="token annotation punctuation">@Storage</span><span class="token punctuation">(</span><span class="token string">&quot;plugin.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataSetting</span> <span class="token keyword">implements</span> <span class="token class-name">PersistentStateComponent</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataState</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">DataState</span> state <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DataSetting</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ServiceManager</span><span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span><span class="token class-name">DataSetting</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">DataState</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">loadState</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">DataState</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token class-name">ProjectConfigVO</span> <span class="token function">getProjectConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> state<span class="token punctuation">.</span><span class="token function">getProjectConfigVO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在基础层提供数据存放的服务，把创建工程的配置信息存放到服务中，这样比较方便设置和获取。</li></ul><h4 id="_3-2-扩展步骤" tabindex="-1"><a class="header-anchor" href="#_3-2-扩展步骤" aria-hidden="true">#</a> 3.2 扩展步骤</h4><p><strong>cn.bugstack.guide.idea.plugin.module.DDDModuleConfigStep</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DDDModuleConfigStep</span> <span class="token keyword">extends</span> <span class="token class-name">ModuleWizardStep</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ProjectConfigUI</span> projectConfigUI<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">DDDModuleConfigStep</span><span class="token punctuation">(</span><span class="token class-name">ProjectConfigUI</span> projectConfigUI<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>projectConfigUI <span class="token operator">=</span> projectConfigUI<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">JComponent</span> <span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> projectConfigUI<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ConfigurationException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取配置信息，写入到 DataSetting</span>
        <span class="token class-name">ProjectConfigVO</span> projectConfig <span class="token operator">=</span> <span class="token class-name">DataSetting</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProjectConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        projectConfig<span class="token punctuation">.</span><span class="token function">set_groupId</span><span class="token punctuation">(</span>projectConfigUI<span class="token punctuation">.</span><span class="token function">getGroupIdField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        projectConfig<span class="token punctuation">.</span><span class="token function">set_artifactId</span><span class="token punctuation">(</span>projectConfigUI<span class="token punctuation">.</span><span class="token function">getArtifactIdField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        projectConfig<span class="token punctuation">.</span><span class="token function">set_version</span><span class="token punctuation">(</span>projectConfigUI<span class="token punctuation">.</span><span class="token function">getVersionField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        projectConfig<span class="token punctuation">.</span><span class="token function">set_package</span><span class="token punctuation">(</span>projectConfigUI<span class="token punctuation">.</span><span class="token function">getPackageField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>继承 <code>ModuleWizardStep</code> 开发一个自己需要的步骤，这个步骤就会出现到我们创建新的工程中。</li><li>同时在重写的 validate 方法中，把从工程配置 UI 窗体中获取到信息，写入到数据配置文件中。</li></ul><h4 id="_3-3-配置步骤" tabindex="-1"><a class="header-anchor" href="#_3-3-配置步骤" aria-hidden="true">#</a> 3.3 配置步骤</h4><p><strong>cn.bugstack.guide.idea.plugin.module.DDDModuleBuilder</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DDDModuleBuilder</span> <span class="token keyword">extends</span> <span class="token class-name">ModuleBuilder</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">IProjectGenerator</span> projectGenerator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProjectGeneratorImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Icon</span> <span class="token function">getNodeIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">ICONS</span><span class="token punctuation">.</span><span class="token constant">SPRING_BOOT</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * 重写 builderId 挂载自定义模板
     */</span>
    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getBuilderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ModuleWizardStep</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">createWizardSteps</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">WizardContext</span> wizardContext<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">ModulesProvider</span> modulesProvider<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// 添加工程配置步骤，可以自己定义需要的步骤，如果有多个可以依次添加</span>
        <span class="token class-name">DDDModuleConfigStep</span> moduleConfigStep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DDDModuleConfigStep</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProjectConfigUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ModuleWizardStep</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>moduleConfigStep<span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 createWizardSteps 方法中，把我们已经创建好的 <code>DDDModuleConfigStep</code> 添加工程配置步骤，可以自己定义需要的步骤，如果有多个可以依次添加。</li><li>同时需要注意，只有重写了 getBuilderId() 方法后，你新增加的向导步骤才能生效。</li></ul><h3 id="_4-开发脚手架服务" tabindex="-1"><a class="header-anchor" href="#_4-开发脚手架服务" aria-hidden="true">#</a> 4. 开发脚手架服务</h3><p><strong>cn.bugstack.guide.idea.plugin.domain.service.AbstractProjectGenerator</strong></p><p><img src="https://bugstack.cn/assets/images/2020/all-28-5.png" alt=""></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractProjectGenerator</span> <span class="token keyword">extends</span> <span class="token class-name">FreemarkerConfiguration</span> <span class="token keyword">implements</span> <span class="token class-name">IProjectGenerator</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doGenerator</span><span class="token punctuation">(</span><span class="token class-name">Project</span> project<span class="token punctuation">,</span> <span class="token class-name">String</span> entryPath<span class="token punctuation">,</span> <span class="token class-name">ProjectConfigVO</span> projectConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// 1.创建工程主POM文件</span>
        <span class="token function">generateProjectPOM</span><span class="token punctuation">(</span>project<span class="token punctuation">,</span> entryPath<span class="token punctuation">,</span> projectConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2.创建四层架构</span>
        <span class="token function">generateProjectDDD</span><span class="token punctuation">(</span>project<span class="token punctuation">,</span> entryPath<span class="token punctuation">,</span> projectConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3.创建 Application</span>
        <span class="token function">generateApplication</span><span class="token punctuation">(</span>project<span class="token punctuation">,</span> entryPath<span class="token punctuation">,</span> projectConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4. 创建 Yml</span>
        <span class="token function">generateYml</span><span class="token punctuation">(</span>project<span class="token punctuation">,</span> entryPath<span class="token punctuation">,</span> projectConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 5. 创建 Common</span>
        <span class="token function">generateCommon</span><span class="token punctuation">(</span>project<span class="token punctuation">,</span> entryPath<span class="token punctuation">,</span> projectConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37),b={href:"http://freemarker.foofun.cn/",target:"_blank",rel:"noopener noreferrer"},g=n("li",null,"按照 DDD 工程结构，分层包括：application、domain、infrastructure、interfaces，那么我们把这些创建过程抽象到模板方法中，具体交给子类来创建。",-1),h=e(`<h3 id="_5-调用脚手架服务" tabindex="-1"><a class="header-anchor" href="#_5-调用脚手架服务" aria-hidden="true">#</a> 5. 调用脚手架服务</h3><p><strong>cn.bugstack.guide.idea.plugin.module.DDDModuleBuilder</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DDDModuleBuilder</span> <span class="token keyword">extends</span> <span class="token class-name">ModuleBuilder</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">IProjectGenerator</span> projectGenerator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProjectGeneratorImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Icon</span> <span class="token function">getNodeIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">ICONS</span><span class="token punctuation">.</span><span class="token constant">SPRING_BOOT</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setupRootModel</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">ModifiableRootModel</span> rootModel<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ConfigurationException</span> <span class="token punctuation">{</span>

        <span class="token comment">// 设置 JDK</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>myJdk<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rootModel<span class="token punctuation">.</span><span class="token function">setSdk</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>myJdk<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            rootModel<span class="token punctuation">.</span><span class="token function">inheritSdk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 生成工程路径</span>
        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">toSystemIndependentName</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span><span class="token function">getContentEntryPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VirtualFile</span> virtualFile <span class="token operator">=</span> <span class="token class-name">LocalFileSystem</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">refreshAndFindFileByPath</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rootModel<span class="token punctuation">.</span><span class="token function">addContentEntry</span><span class="token punctuation">(</span>virtualFile<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Project</span> project <span class="token operator">=</span> rootModel<span class="token punctuation">.</span><span class="token function">getProject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建工程结构</span>
        <span class="token class-name">Runnable</span> r <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">WriteCommandAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">VirtualFile</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>project<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">VirtualFile</span><span class="token punctuation">&gt;</span></span> result<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
                projectGenerator<span class="token punctuation">.</span><span class="token function">doGenerator</span><span class="token punctuation">(</span>project<span class="token punctuation">,</span> <span class="token function">getContentEntryPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DataSetting</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProjectConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 <code>DDDModuleBuilder#setupRootModel</code> 中，添加创建 <code>DDD工程框架</code>的服务，<code>projectGenerator.doGenerator(project, getContentEntryPath(), DataSetting.getInstance().getProjectConfig());</code></li><li>另外这里需要用到 IDEA 提供的线程调用方法，<code>new WriteCommandAction</code> 才能正常创建。</li></ul><h3 id="_6-配置模板工程" tabindex="-1"><a class="header-anchor" href="#_6-配置模板工程" aria-hidden="true">#</a> 6. 配置模板工程</h3><h4 id="_6-1-模板工厂" tabindex="-1"><a class="header-anchor" href="#_6-1-模板工厂" aria-hidden="true">#</a> 6.1 模板工厂</h4><p><strong>cn.bugstack.guide.idea.plugin.factory.TemplateFactory</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TemplateFactory</span> <span class="token keyword">extends</span> <span class="token class-name">ProjectTemplatesFactory</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@NotNull</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getGroups</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;DDD脚手架&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Icon</span> <span class="token function">getGroupIcon</span><span class="token punctuation">(</span><span class="token class-name">String</span> group<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">ICONS</span><span class="token punctuation">.</span><span class="token constant">DDD</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@NotNull</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ProjectTemplate</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">createTemplates</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> group<span class="token punctuation">,</span> <span class="token class-name">WizardContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ProjectTemplate</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">BuilderBasedTemplate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DDDModuleBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>模板工厂的核心在于把我们用于创建 <code>DDD 的步骤</code>添加 <code>createTemplates</code> 方法中，这样算把整个创建自定义脚手架工程的链路就串联完成了。</li></ul><h4 id="_6-2-文件配置" tabindex="-1"><a class="header-anchor" href="#_6-2-文件配置" aria-hidden="true">#</a> 6.2 文件配置</h4><p><strong>plugin.xml</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>idea-plugin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>cn.bugstack.guide.idea.plugin.guide-idea-plugin-scaffolding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Scaffolding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vendor</span> <span class="token attr-name">email</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>184172133@qq.com<span class="token punctuation">&quot;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://bugstack.cn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>小傅哥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vendor</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>depends</span><span class="token punctuation">&gt;</span></span>com.intellij.modules.platform<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>depends</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extensions</span> <span class="token attr-name">defaultExtensionNs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.intellij<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>projectTemplatesFactory</span> <span class="token attr-name">implementation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cn.bugstack.guide.idea.plugin.factory.TemplateFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>applicationService</span> <span class="token attr-name">serviceImplementation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cn.bugstack.guide.idea.plugin.infrastructure.DataSetting<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extensions</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>idea-plugin</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>接下来还需要把我们创建的工程模板以及数据服务配置到 <code>plugin.xml</code> 中，这样在插件启动的时候就可以把我们自己插件启动起来了。</li></ul><h2 id="四、测试验证" tabindex="-1"><a class="header-anchor" href="#四、测试验证" aria-hidden="true">#</a> 四、测试验证</h2><ul><li>点击 <code>Plugin</code> 启动 IDEA 插件，之后创建工程如下：</li></ul><p><img src="https://bugstack.cn/images/article/assembly/assembly-211123-4-02.png" alt=""></p><ul><li>快拿去试试吧，启动插件，点击创建工程，傻瓜式点击，就可以创建出一个 DDD 工程结构了。</li></ul><h2 id="五、总结" tabindex="-1"><a class="header-anchor" href="#五、总结" aria-hidden="true">#</a> 五、总结</h2><ul><li>学习使用 IDEA Plugin 开发技术，改变创建工程向导，添加自己需要的工程创建模板，这样就可以创建出一个 DDD 脚手架工程骨架了，接下来你还可以结合自己实际的业务场景添加自己需要的一些技术栈到脚手架中。</li><li>如果你愿意尝试可以在工程创建中链接到数据库，把数据库中对应的表生成Java代码，这样一些简单的配置、查询、映射，就不用自己动手写了。</li><li>在开发 DDD 脚手架的源码中还有一些细节过程，包括图标的展示、文案的信息、Freemarker的使用细节，这些你都可以在源码中学习并调试验证。</li></ul><h2 id="六、系列推荐" tabindex="-1"><a class="header-anchor" href="#六、系列推荐" aria-hidden="true">#</a> 六、系列推荐</h2>`,20),f={href:"https://bugstack.cn/md/develop/framework/scheme/2021-03-14-%E4%B8%8D%E9%87%8D%E5%A4%8D%E9%80%A0%E8%BD%AE%E5%AD%90%E5%8F%AA%E6%98%AF%E9%AA%97%E5%B0%8F%E5%AD%A9%E5%AD%90%E7%9A%84%EF%BC%8C%E6%95%99%E4%BD%A0%E6%89%8B%E6%92%B8%20SpringBoot%20%E8%84%9A%E6%89%8B%E6%9E%B6%EF%BC%81.html",target:"_blank",rel:"noopener noreferrer"},D={href:"https://bugstack.cn/md/assembly/middleware/2019-12-07-%E5%8F%91%E5%B8%83Jar%E5%8C%85%E5%88%B0Maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93%EF%BC%8C%E4%B8%BA%E5%BC%80%E5%8F%91%E5%BC%80%E6%BA%90%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%81%9A%E5%87%86%E5%A4%87.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://bugstack.cn/md/develop/framework/ddd/2019-10-16-DDD%E4%B8%93%E9%A2%98%E6%A1%88%E4%BE%8B%E4%BA%8C%E3%80%8A%E9%A2%86%E5%9F%9F%E5%B1%82%E5%86%B3%E7%AD%96%E8%A7%84%E5%88%99%E6%A0%91%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E3%80%8B.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://bugstack.cn/md/develop/framework/scheme/2021-02-28-%E5%B7%A5%E4%BD%9C%E4%B8%A4%E4%B8%89%E5%B9%B4%EF%BC%8C%E6%95%B4%E4%B8%8D%E6%98%8E%E7%99%BD%E6%9E%B6%E6%9E%84%E5%9B%BE%E9%83%BD%E7%94%BB%E5%95%A5%EF%BC%9F.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://bugstack.cn/md/about/me/2021-11-14-CodeGuide%E5%BC%80%E6%BA%90%E4%BB%93%E5%BA%93.html",target:"_blank",rel:"noopener noreferrer"};function E(C,_){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("作者：小傅哥 "),d,s("博客："),n("a",r,[s("https://bugstack.cn"),t(a)]),k,s("原文："),n("a",v,[s("https://mp.weixin.qq.com/s/4DFCF83bySTYyBZgouX6-w"),t(a)])]),m,n("ul",null,[n("li",null,[s("在 domain 领域层添加用于创建脚手架框架的 FreeMarker 服务，它是一款 模板引擎： 即一种基于模板和要改变的数据， 并用来生成输出文本(HTML网页，电子邮件，配置文件，源代码等)的通用工具。FreeMarker 在线手册："),n("a",b,[s("http://freemarker.foofun.cn"),t(a)])]),g]),h,n("ul",null,[n("li",null,[n("a",f,[s("使用 Freemarker，创建 SpringBoot 脚手架"),t(a)])]),n("li",null,[n("a",D,[s("发布Jar包到Maven中央仓库(为开发开源中间件做准备)"),t(a)])]),n("li",null,[n("a",y,[s("DDD 领域层决策规则树服务设计"),t(a)])]),n("li",null,[n("a",w,[s("工作两三年了，整不明白架构图都画啥？"),t(a)])]),n("li",null,[n("a",j,[s("CodeGuide Github 仓库开源啦！"),t(a)])])])])}const I=p(i,[["render",E],["__file","2021-11-24-《IntelliJ IDEA chajiankaifa》disijie：kuozhanchuangjiangongchengxiangdaobuzhou，kaifaDDDjiaoshoujia.html.vue"]]);export{I as default};
