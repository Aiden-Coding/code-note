import{_ as p,r as o,o as l,c,a as n,b as s,d as e,e as t}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"quartz、spring-schedule、xxl-job-使用教程和扩展开发",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#quartz、spring-schedule、xxl-job-使用教程和扩展开发","aria-hidden":"true"},"#"),s(" Quartz、Spring-Schedule、XXL-Job 使用教程和扩展开发")],-1),r=n("br",null,null,-1),d={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},k=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=659288536&bvid=BV1Dh4y1C75i&cid=1223326697&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),b=n("p",null,"本文的宗旨在于通过简单干净实践的方式教会读者，多种类型的任务执行组件使用案例，包括；Quartz 使用、扩展 Spring-Schedule 自动增加任务、XXL-Job 分布式任务调度。其中像 Spring-Schedule 小傅哥还添加了一些 Spring 组件开发的能力可自动扩展任务、对 XXL-Job 的配置引入了 Docker Compose 自动化安装和自动初始化 MySQL 数据库 xxl-job.sql 库表数据。这些都是为了让你在不同的场景选择合适的框架，同时也能更简单的使用这些框架。",-1),v=n("p",null,"本章节的任务调度组件会放到 DDD 的 Trigger 模块中，也就是触发器层。我们认为所有的调用行为，HTTP、RPC、MQ、任务，都是一个触发的入口，所以对于任务调度也放到这一层使用。",-1),h=n("p",null,"本文涉及的工程：",-1),g={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-quartz",target:"_blank",rel:"noopener noreferrer"},x={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-quartz/-/blob/master/docs/xxl-job/xxl-job-docker-compose.yml",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"xxl-job 已提供了最简化安装自动导入库表操作",-1),y=t('<h2 id="一、案例背景" tabindex="-1"><a class="header-anchor" href="#一、案例背景" aria-hidden="true">#</a> 一、案例背景</h2><p>任务调度是一个非常重要的功能组件，常作用于；定时清理数据 - 冷数据迁移、活动状态扫描 - 过期活动关闭、消息发送补偿 - MQ失败重发、支付掉单补偿 - 支付幂等重试，等各类场景都会用到任务调度组件。它可以帮我们执行确定规则的业务或功能流程。</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-quartz-01.png" width="650px"></div><ul><li>以整个 DDD 分层架构中，以触发器层为入口编写任务调度方法。任务的实现方式有多种，如果你的场景较为简单，则使用 Spring 或者 Quartz 提供的任务实现方式即可。如果你的场景较为复杂，需要分布式任务管理，那么最好配置一套如 XXL-Job 这样的分布式任务调度组件来使用。</li><li>所有的触发器中的任务，都只是固定时间频次下的执行入口，最终需要调用领域层所提供的方法完成具体的业务逻辑。如果你使用 DDD 分层有 case/application 防腐处理，则会调用这一编排层，而不是 domain 领域层。</li></ul><h2 id="二、任务模型" tabindex="-1"><a class="header-anchor" href="#二、任务模型" aria-hidden="true">#</a> 二、任务模型</h2><p>当你的微服务应用是一组较小的模型结构时，其实任务与服务结合在一起即可，让它与自己的领域绑定。但如果微服务的体量很大，那么这组微服务所对应的任务也会较多，同时需要一些分布式的能力，让调度的算力可以更快更好的运用起来。</p><p>所以一般这个时候就需要引入把任务单独拆分出一个微服务系统，一般可以叫做 xxx-worker 系统，他们就是专门处理任务的一个个执行器。把这些执行器注册到任务调度中心，由任务调度中心统一管理各项任务的执行。这样如果有一个任务在一个算力执行器上失败或者说执行器宕机了，那么可以把任务迁移到其他算力执行器上执行。这就是分布式的好处。</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-quartz-02.png" width="550px"></div><ul><li>如图，就是分布式架构下。执行器系统被任务调度中心管理，调用微服务提供的接口，完成对微服务接口的调用。</li><li>一般分布式引用的微服务接口，也都是 RPC 接口，这样就已经具备了负载能力。</li><li>任务调度与 MQ 消息是一组非常常用的技术栈组合，MQ 失败的消息，经常是由任务扫描补偿，继续发送MQ消息，驱动流程的执行。</li></ul><h2 id="三、环境安装" tabindex="-1"><a class="header-anchor" href="#三、环境安装" aria-hidden="true">#</a> 三、环境安装</h2><p>本案例所需安装的环境主要是 XXL-Job 的一套 MySQL 库和 XXL-Job 应用以及对应的库表初始化。为了让大家使用起来更加简单，小傅哥这里提供了一套 compose.yml 支持 AMD 和 ARM 架构使用。</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-quartz-03.png" width="450px"></div>',12),f={href:"https://bugstack.cn/md/road-map/docker.html",target:"_blank",rel:"noopener noreferrer"},j=n("h3",{id:"_1-执行-compose-yml",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-执行-compose-yml","aria-hidden":"true"},"#"),s(" 1. 执行 compose.yml")],-1),S={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-quartz/-/blob/master/docs/xxl-job/xxl-job-docker-compose.yml",target:"_blank",rel:"noopener noreferrer"},q=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 命令执行 docker-compose up -d</span>
<span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.9&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token comment"># http://127.0.0.1:9090/xxl-job-admin admin/123456 - 安装后稍等会访问即可</span>
  <span class="token comment"># 官网镜像为 xuxueli/xxl-job-admin 但不支持ARM架构【需要自己打包】，所以找了一个 kuschzzp/xxl-job-aarch64:2.4.0 镜像支持 AMD/ARM</span>
  <span class="token key atrule">xxl-job-admin</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> kuschzzp/xxl<span class="token punctuation">-</span>job<span class="token punctuation">-</span>aarch64<span class="token punctuation">:</span>2.4.0
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> xxl<span class="token punctuation">-</span>job<span class="token punctuation">-</span>admin
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> mysql
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;9090:9090&quot;</span>
    <span class="token key atrule">links</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> mysql
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ./data/logs<span class="token punctuation">:</span>/data/applogs
      <span class="token punctuation">-</span> ./data/xxl<span class="token punctuation">-</span>job/<span class="token punctuation">:</span>/xxl<span class="token punctuation">-</span>job
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> SPRING_DATASOURCE_URL=jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//mysql<span class="token punctuation">:</span>3306/xxl_job<span class="token punctuation">?</span>serverTimezone=UTC<span class="token important">&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;serverTimezone=Asia/Shanghai</span>
      <span class="token punctuation">-</span> SPRING_DATASOURCE_USERNAME=root
      <span class="token punctuation">-</span> SPRING_DATASOURCE_PASSWORD=123456
      <span class="token punctuation">-</span> SERVER_PORT=9090

  <span class="token comment"># MySQL 8.0.32 支持 AMD/ARM</span>
  <span class="token key atrule">mysql</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span>8.0.32
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> mysql
    <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>default<span class="token punctuation">-</span>authentication<span class="token punctuation">-</span>plugin=mysql_native_password
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai
      <span class="token comment"># MYSQL_ALLOW_EMPTY_PASSWORD: &#39;yes&#39; 可配置无密码，注意配置 SPRING_DATASOURCE_PASSWORD=</span>
      <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> <span class="token number">123456</span>
      <span class="token key atrule">MYSQL_USER</span><span class="token punctuation">:</span> xfg
      <span class="token key atrule">MYSQL_PASSWORD</span><span class="token punctuation">:</span> <span class="token number">123456</span>
    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> mysql<span class="token punctuation">-</span>job<span class="token punctuation">-</span>dbdata
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;13306:3306&quot;</span> <span class="token comment"># 如果你无端口占用，可以直接使用 3306</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ./sql<span class="token punctuation">:</span>/docker<span class="token punctuation">-</span>entrypoint<span class="token punctuation">-</span>initdb.d
    <span class="token key atrule">volumes_from</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> mysql<span class="token punctuation">-</span>job<span class="token punctuation">-</span>dbdata

  <span class="token comment"># 自动加载数据</span>
  <span class="token key atrule">mysql-job-dbdata</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> alpine<span class="token punctuation">:</span>3.18.2
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> mysql<span class="token punctuation">-</span>job<span class="token punctuation">-</span>dbdata
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /var/lib/mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-quartz-04.png" width="850px"></div>`,2),w=n("li",null,[s("在 IDEA 中打开 rocketmq-docker-compose-mac-amd-arm.yml 你会看到一个绿色的按钮在左侧侧边栏，点击即可安装。或者你也可以使用命令安装："),n("code",null,"# /usr/local/bin/docker-compose -f /docs/xxl-job/xxl-job-docker-compose.yml up -d"),s(" - 比较适合在云服务器上执行。")],-1),J={href:"https://gitee.com/xuxueli0323/xxl-job/blob/master/doc/db/tables_xxl_job.sql",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"这里小傅哥把 SQL 文件下载到了本地，用于初始化安装使用",-1),E=n("li",null,[s("标签；"),n("code",null,"depends_on"),s(" - 依赖于谁先安装、"),n("code",null,"MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'"),s(" - 可以设置MySQL无密码安装、"),n("code",null,"mysql-job-dbdata"),s(" - 一个启动安装数据库初始化脚本的镜像。并且需要在 MySQL 安装时使用 "),n("code",null,"volumes_from"),s(" 标签引入。")],-1),z=n("h3",{id:"_2-访问-xxl-job",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-访问-xxl-job","aria-hidden":"true"},"#"),s(" 2. 访问 xxl-job")],-1),R=n("strong",null,"地址",-1),C={href:"http://127.0.0.1:9090/xxl-job-admin",target:"_blank",rel:"noopener noreferrer"},X=t(`<div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-quartz-05.png" width="850px"></div><ul><li>默认的账号 admin 密码 123456</li></ul><h3 id="_3-执行器管理" tabindex="-1"><a class="header-anchor" href="#_3-执行器管理" aria-hidden="true">#</a> 3. 执行器管理</h3><p>执行器的作用，就是让 xxl-job-admin 这个任务调度系统，调用注册上来的执行器完成任务的执行。客户端需要配置好这里的执行器名称才能注册上来。你可以根据自己的需要新增新的执行器，也可以在测试的时候使用默认的这个执行器名称。</p><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-quartz-06.png" width="850px"></div><ul><li>本地服务启动后，会注册进来一个执行器的地址，OnLine 机器地址会显示。</li></ul><h3 id="_4-任务配置" tabindex="-1"><a class="header-anchor" href="#_4-任务配置" aria-hidden="true">#</a> 4. 任务配置</h3><p>任务的作用，就是执行器下具体的执行方法，按照配置的时间下发到任务中执行。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XXLJob</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@XxlJob</span><span class="token punctuation">(</span><span class="token string">&quot;demoJobHandler&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 可以在任务中，调用一些业务方法逻辑的实现，如定时扫描超时未支付订单为关单处理，恢复库存</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;执行任务 - XXL-Job - 01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-quartz-07.png" width="950px"></div><ul><li>一个执行器下管理的任务一般会有很多，所以你在测试的时候也可以尝试新增一些任务来测试。</li></ul><h2 id="四、工程实现" tabindex="-1"><a class="header-anchor" href="#四、工程实现" aria-hidden="true">#</a> 四、工程实现</h2><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-quartz-08.png" width="950px"></div>`,14),L=n("li",null,"首先，trigger 触发器模块下有3类任务，分别是 Quartz、Schedule 和 XXL-Job 分布式任务。XXL-Job 所需的配置会多一些，需要 application-dev.yml 配置 xxl-job 参数，之后配置 Config 启动任务。最后是 XXL-Job 使用任务。",-1),B={href:"https://bugstack.cn/md/assembly/middleware/%E7%AC%AC%2015%20%E7%AB%A0%20%E5%88%86%E5%B8%83%E5%BC%8F%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"},I=n("li",null,"ScheduleJob 是基于 Spring 提供的 Schedule 进行的扩展，可以根据自定义注解添加任务和自动启动。这个方式也是非常好用的。",-1),P=t(`<h3 id="_2-配置文件" tabindex="-1"><a class="header-anchor" href="#_2-配置文件" aria-hidden="true">#</a> 2. 配置文件</h3><p><strong>引入POM</strong></p><div class="language-pom line-numbers-mode" data-ext="pom"><pre class="language-pom"><code>&lt;!-- Quartz --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;
    &lt;artifactId&gt;quartz&lt;/artifactId&gt;
    &lt;version&gt;2.3.2&lt;/version&gt;
&lt;/dependency&gt;

&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-quartz --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-quartz&lt;/artifactId&gt;
    &lt;version&gt;3.1.2&lt;/version&gt;
&lt;/dependency&gt;

&lt;!-- https://mvnrepository.com/artifact/com.xuxueli/xxl-job-core --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.xuxueli&lt;/groupId&gt;
    &lt;artifactId&gt;xxl-job-core&lt;/artifactId&gt;
    &lt;version&gt;2.4.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>分别包括；Quartz、XXL-Job 两个组件</li></ul><p><strong>添加配置</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># xxl-job https://www.xuxueli.com/xxl-job/#%E6%AD%A5%E9%AA%A4%E4%B8%80%EF%BC%9A%E8%B0%83%E5%BA%A6%E4%B8%AD%E5%BF%83%E9%85%8D%E7%BD%AE%EF%BC%9A</span>
<span class="token key atrule">xxl</span><span class="token punctuation">:</span>
  <span class="token key atrule">job</span><span class="token punctuation">:</span>
    <span class="token comment"># 验证信息 官网Bug https://github.com/xuxueli/xxl-job/issues/1951</span>
    <span class="token key atrule">accessToken</span><span class="token punctuation">:</span> default_token
    <span class="token comment"># 注册地址</span>
    <span class="token key atrule">admin</span><span class="token punctuation">:</span>
      <span class="token key atrule">addresses</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>9090/xxl<span class="token punctuation">-</span>job<span class="token punctuation">-</span>admin
    <span class="token comment"># 注册执行器</span>
    <span class="token key atrule">executor</span><span class="token punctuation">:</span>
      <span class="token comment">#  执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。</span>
      <span class="token key atrule">address</span><span class="token punctuation">:</span>
      <span class="token key atrule">appname</span><span class="token punctuation">:</span> xxl<span class="token punctuation">-</span>job<span class="token punctuation">-</span>executor<span class="token punctuation">-</span>sample
      <span class="token comment"># 执行器IP 配置为本机IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 &quot;执行器注册&quot; 和 &quot;调度中心请求并触发任务&quot;；</span>
      <span class="token key atrule">ip</span><span class="token punctuation">:</span>
      <span class="token comment"># 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；</span>
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9999</span>
      <span class="token comment"># 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；</span>
      <span class="token key atrule">logpath</span><span class="token punctuation">:</span> ./data/applogs/xxl<span class="token punctuation">-</span>job/jobhandler
      <span class="token comment"># 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；</span>
      <span class="token key atrule">logretentiondays</span><span class="token punctuation">:</span> <span class="token number">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>xxl-job 有一些必要的配置信息</p>`,7),D={href:"https://github.com/xuxueli/xxl-job/issues/1951",target:"_blank",rel:"noopener noreferrer"},Q=n("li",null,"addresses，是一个注册地址，也就是我们访问 xxl-job 的地址",-1),M=n("li",null,"appname，我们这里使用了官网默认提供的执行器的名称 xxl-job-executor-sample 你可以新增或者修改。",-1),O=n("li",null,"ip、port 意思是你把本地的执行器注册到调度中心，如果你的 XXL-Job 部署到云服务器，而本地启动服务的时候，你是可以注册到服务端的，但调度中心没法调用到你本地的服务，因为你本地没有公网IP。这个时候你可以使用 natapp 做映射内网穿透进行测试。",-1),T=t(`<h3 id="_3-任务配置" tabindex="-1"><a class="header-anchor" href="#_3-任务配置" aria-hidden="true">#</a> 3. 任务配置</h3><h4 id="_3-1-quartz-任务" tabindex="-1"><a class="header-anchor" href="#_3-1-quartz-任务" aria-hidden="true">#</a> 3.1 Quartz 任务</h4><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.job.QuartzJob</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuartzJob</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;0/3 * * * * ?&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 可以在任务中，调用一些业务方法逻辑的实现，如定时扫描超时未支付订单为关单处理，恢复库存</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;执行任务 - Quartz - 01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;0/3 * * * * ?&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 可以在任务中，调用一些业务方法逻辑的实现，如定时扫描超时未支付订单为关单处理，恢复库存</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;执行任务 - Quartz - 02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Quartz 支持在一个类中，配置多个任务，每个任务方法都可以配置自己执行策略。</li><li>此类方式非常适合一些不需要统一任务调度的简单场景使用。</li></ul><h4 id="_3-2-spring-schedule-扩展任务" tabindex="-1"><a class="header-anchor" href="#_3-2-spring-schedule-扩展任务" aria-hidden="true">#</a> 3.2 Spring-Schedule 扩展任务</h4><p><strong>配置任务注册器</strong> - 在 app config 下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableScheduling</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JobRegistrarAutoConfig</span> <span class="token keyword">implements</span> <span class="token class-name">SchedulingConfigurer</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">JobRegistrarAutoConfig</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext <span class="token operator">=</span> applicationContext<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureTasks</span><span class="token punctuation">(</span><span class="token class-name">ScheduledTaskRegistrar</span> taskRegistrar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ExtScheduleJob</span><span class="token punctuation">&gt;</span></span> jobBeanMap <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBeansOfType</span><span class="token punctuation">(</span><span class="token class-name">ExtScheduleJob</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ExtScheduleJob</span><span class="token punctuation">&gt;</span></span> jobBeans <span class="token operator">=</span> jobBeanMap<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ExtScheduleJob</span> job <span class="token operator">:</span> jobBeans<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ExtScheduleJobConfig</span> extScheduleJobConfig <span class="token operator">=</span> <span class="token class-name">AnnotationUtils</span><span class="token punctuation">.</span><span class="token function">findAnnotation</span><span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ExtScheduleJobConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>extScheduleJobConfig <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>extScheduleJobConfig<span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>

            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;启动任务 {} {}&quot;</span><span class="token punctuation">,</span> extScheduleJobConfig<span class="token punctuation">.</span><span class="token function">jobName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> extScheduleJobConfig<span class="token punctuation">.</span><span class="token function">cronExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            taskRegistrar<span class="token punctuation">.</span><span class="token function">addCronTask</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> extScheduleJobConfig<span class="token punctuation">.</span><span class="token function">cronExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>JobRegistrarAutoConfig 实现了 SchedulingConfigurer 的类，可以自己自动化的根据所有实现了 ExtScheduleJob 类进行任务扩展添加。</li><li>这是一种扩展方式，有了这样的扩展方式，如果你是做同类的任务需求，只是配置不同的话，那么还可以基于 yml 配置，来创建出不同的代理任务。</li></ul><h4 id="_3-3-xxl-job" tabindex="-1"><a class="header-anchor" href="#_3-3-xxl-job" aria-hidden="true">#</a> 3.3 XXL-Job</h4><p><strong>源码</strong>：<code>cn.bugstack.xfg.dev.tech.job.XXLJob</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XXLJob</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@XxlJob</span><span class="token punctuation">(</span><span class="token string">&quot;demoJobHandler&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 可以在任务中，调用一些业务方法逻辑的实现，如定时扫描超时未支付订单为关单处理，恢复库存</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;执行任务 - XXL-Job - 01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-quartz-09.png" width="950px"></div>`,13),N={href:"http://127.0.0.1:9090/xxl-job-admin/jobinfo",target:"_blank",rel:"noopener noreferrer"},U=n("li",null,"你用配置了什么注解的名称，就新增对应的名称即可。",-1),F=n("h2",{id:"五、工程测试",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#五、工程测试","aria-hidden":"true"},"#"),s(" 五、工程测试")],-1),W=n("li",null,"QuartzJob - 启动工程即可运行",-1),G=n("li",null,"ScheduleJob - 注解中，state = false 是不运行，否则直接运行。",-1),V={href:"http://127.0.0.1:9090/xxl-job-admin/jobinfo",target:"_blank",rel:"noopener noreferrer"},Y=t(`<div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-quartz-10.png" width="950px"></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">23</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">05.14</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">42.003</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">QuartzJob</span>              <span class="token operator">-</span> 执行任务 <span class="token operator">-</span> <span class="token class-name">Quartz</span> <span class="token operator">-</span> <span class="token number">01</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">05.14</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">42.003</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">ScheduleJob</span>            <span class="token operator">-</span> 执行任务 <span class="token operator">-</span> <span class="token class-name">Schedule</span> <span class="token operator">-</span> <span class="token number">01</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">05.14</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">42.060</span> <span class="token punctuation">[</span>xxl<span class="token operator">-</span>job<span class="token punctuation">,</span> <span class="token class-name">JobThread</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">1691216327906</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">XXLJob</span>                 <span class="token operator">-</span> 执行任务 <span class="token operator">-</span> <span class="token constant">XXL</span><span class="token operator">-</span><span class="token class-name">Job</span> <span class="token operator">-</span> <span class="token number">01</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">05.14</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">45.003</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">QuartzJob</span>              <span class="token operator">-</span> 执行任务 <span class="token operator">-</span> <span class="token class-name">Quartz</span> <span class="token operator">-</span> <span class="token number">02</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">05.14</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">45.003</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">QuartzJob</span>              <span class="token operator">-</span> 执行任务 <span class="token operator">-</span> <span class="token class-name">Quartz</span> <span class="token operator">-</span> <span class="token number">01</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">05.14</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">45.004</span> <span class="token punctuation">[</span>pool<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>thread<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">ScheduleJob</span>            <span class="token operator">-</span> 执行任务 <span class="token operator">-</span> <span class="token class-name">Schedule</span> <span class="token operator">-</span> <span class="token number">01</span>
<span class="token number">23</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">05.14</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">45.041</span> <span class="token punctuation">[</span>xxl<span class="token operator">-</span>job<span class="token punctuation">,</span> <span class="token class-name">JobThread</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">1691216327906</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">XXLJob</span>                 <span class="token operator">-</span> 执行任务 <span class="token operator">-</span> <span class="token constant">XXL</span><span class="token operator">-</span><span class="token class-name">Job</span> <span class="token operator">-</span> <span class="token number">01</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意编辑任务的执行时间，<code>0/3 * * * * ?</code> 这样才能当下执行。另外如果你要测试的话，可以点<strong>执行一次</strong>。</li><li>现在是启动了多个测试任务，所以测试中可以看到各类任务的打印。读者在做测试的时候，可以适当关闭，方便学习。</li></ul><h2 id="六、扩展学习-jobrunr" tabindex="-1"><a class="header-anchor" href="#六、扩展学习-jobrunr" aria-hidden="true">#</a> 六、扩展学习 JobRunr</h2>`,4),H={href:"https://github.com/jobrunr/jobrunr",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"一种在 Java 中执行后台处理的巧妙简单的方法。由持久存储支持。开放并免费用于商业用途。",-1),Z=t(`<h3 id="_1-安装部署" tabindex="-1"><a class="header-anchor" href="#_1-安装部署" aria-hidden="true">#</a> 1. 安装部署</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">jobrunr</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> jobrunr/server<span class="token punctuation">:</span>latest
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 8000<span class="token punctuation">:</span><span class="token number">8000</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> SPRING_DATASOURCE_URL=jdbc<span class="token punctuation">:</span>postgresql<span class="token punctuation">:</span>//postgres<span class="token punctuation">:</span>5432/jobrunrdb
      <span class="token punctuation">-</span> SPRING_DATASOURCE_USERNAME=jobrunr
      <span class="token punctuation">-</span> SPRING_DATASOURCE_PASSWORD=jobrunr
    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> postgres
    <span class="token key atrule">networks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> jobrunr<span class="token punctuation">-</span>network

  <span class="token key atrule">postgres</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span class="token punctuation">:</span>latest
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> POSTGRES_USER=jobrunr
      <span class="token punctuation">-</span> POSTGRES_PASSWORD=jobrunr
      <span class="token punctuation">-</span> POSTGRES_DB=jobrunrdb
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ./pgdata<span class="token punctuation">:</span>/var/lib/postgresql/data
    <span class="token key atrule">networks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> jobrunr<span class="token punctuation">-</span>network

<span class="token key atrule">networks</span><span class="token punctuation">:</span>
  <span class="token key atrule">jobrunr-network</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-使用案例" tabindex="-1"><a class="header-anchor" href="#_2-使用案例" aria-hidden="true">#</a> 2. 使用案例</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 即发即忘任务</span>
<span class="token class-name">BackgroundJob</span><span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Simple!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 延迟的任务</span>
<span class="token class-name">BackgroundJob</span><span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token class-name">Instant</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">plusHours</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Reliable!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 重复的任务</span>
<span class="token class-name">BackgroundJob</span><span class="token punctuation">.</span><span class="token function">scheduleRecurrently</span><span class="token punctuation">(</span><span class="token string">&quot;my-recurring-job&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Cron</span><span class="token punctuation">.</span><span class="token function">daily</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> service<span class="token punctuation">.</span><span class="token function">doWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 配置的任务</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyJobService</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">JobScheduler</span> jobScheduler<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token class-name">MyJobService</span><span class="token punctuation">(</span><span class="token class-name">JobScheduler</span> jobScheduler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>jobScheduler <span class="token operator">=</span> jobScheduler<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">scheduleJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        jobScheduler<span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyJob</span><span class="token punctuation">&gt;</span></span><span class="token function">enqueue</span><span class="token punctuation">(</span>job <span class="token operator">-&gt;</span> job
                <span class="token punctuation">.</span><span class="token function">setJobDetails</span><span class="token punctuation">(</span><span class="token class-name">MyJob</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">withName</span><span class="token punctuation">(</span><span class="token string">&quot;My Job&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">withArgument</span><span class="token punctuation">(</span><span class="token string">&quot;arg1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value1&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">withArgument</span><span class="token punctuation">(</span><span class="token string">&quot;arg2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value2&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Job</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;My Job&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">processJob</span><span class="token punctuation">(</span><span class="token class-name">String</span> arg1<span class="token punctuation">,</span> <span class="token class-name">String</span> arg2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 处理作业的逻辑</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Processing job with arguments: &quot;</span> <span class="token operator">+</span> arg1 <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> arg2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function $(nn,sn){const a=o("ExternalLinkIcon");return l(),c("div",null,[u,n("p",null,[s("作者：小傅哥 "),r,s("博客："),n("a",d,[s("https://bugstack.cn"),e(a)])]),k,m,b,v,h,n("ul",null,[n("li",null,[s("xfg-dev-tech-quartz："),n("a",g,[s("https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-quartz"),e(a)])]),n("li",null,[s("xxl-job-docker.compose.yml 安装："),n("a",x,[s("xxl-job-docker.compose.yml"),e(a)]),s(" - "),_])]),y,n("ul",null,[n("li",null,[s("在此位置找到执行文件，如果你本机已经安装过 "),n("a",f,[s("Docker"),e(a)]),s(" 那么在 IntelliJ IDEA 中直接执行即可。")])]),j,n("p",null,[s("文件："),n("a",S,[s("docs/xxl-job/xxl-job-docker-compose.yml"),e(a)])]),q,n("ul",null,[w,n("li",null,[s("在 compose 中提供了 xxl-job 所需要的库的依赖安装，以及自动加载文件下的初始化库表数据。这个库表数据来自于 xxl-job sql："),n("a",J,[s("https://gitee.com/xuxueli0323/xxl-job/blob/master/doc/db/tables_xxl_job.sql"),e(a)]),s(" - "),A]),E]),z,n("p",null,[R,s("："),n("a",C,[s("http://127.0.0.1:9090/xxl-job-admin"),e(a)]),s(" - admin/123456 - 安装后稍等启动完成，就可以访问啦。")]),X,n("ul",null,[L,n("li",null,[s("QuartzJob 就是一个直接使用的案例，但像 XXL-Job 也是基于 Quartz 扩展的，小傅哥也做了一个分布式任务调度的中间件，如果感兴趣也可以学习。"),n("a",B,[s("https://bugstack.cn/md/assembly/middleware/%E7%AC%AC%2015%20%E7%AB%A0%20%E5%88%86%E5%B8%83%E5%BC%8F%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6.html"),e(a)])]),I]),P,n("ul",null,[n("li",null,[s("accessToken，默认是一个 default_token - 它的官网也有 issue 提到这个bug，如果未配置，应该为空。"),n("a",D,[s("https://github.com/xuxueli/xxl-job/issues/1951"),e(a)])]),Q,M,O]),T,n("ul",null,[n("li",null,[s("注意到这里的 demoJobHandler 就是在 "),n("a",N,[s("http://127.0.0.1:9090/xxl-job-admin/jobinfo"),e(a)]),s(" 配置的执行方法名称。")]),U]),F,n("ul",null,[W,G,n("li",null,[s("XXLJob - 需要由 "),n("a",V,[s("http://127.0.0.1:9090/xxl-job-admin/jobinfo"),e(a)]),s(" 进行测试或者启动任务。")])]),Y,n("p",null,[s("官网："),n("a",H,[s("jobrunr"),e(a)]),s(" - "),K]),Z])}const en=p(i,[["render",$],["__file","quartz.html.vue"]]);export{en as default};
