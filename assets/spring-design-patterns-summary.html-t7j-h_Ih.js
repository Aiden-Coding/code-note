const l=JSON.parse('{"key":"v-0502fdc4","path":"/JavaGuide/system-design/framework/spring/spring-design-patterns-summary.html","title":"Spring 中的设计模式详解","lang":"zh-CN","frontmatter":{"title":"Spring 中的设计模式详解","category":"框架","tag":["Spring"]},"headers":[{"level":2,"title":"控制反转(IoC)和依赖注入(DI)","slug":"控制反转-ioc-和依赖注入-di","link":"#控制反转-ioc-和依赖注入-di","children":[]},{"level":2,"title":"工厂设计模式","slug":"工厂设计模式","link":"#工厂设计模式","children":[]},{"level":2,"title":"单例设计模式","slug":"单例设计模式","link":"#单例设计模式","children":[]},{"level":2,"title":"代理设计模式","slug":"代理设计模式","link":"#代理设计模式","children":[{"level":3,"title":"代理模式在 AOP 中的应用","slug":"代理模式在-aop-中的应用","link":"#代理模式在-aop-中的应用","children":[]},{"level":3,"title":"Spring AOP 和 AspectJ AOP 有什么区别?","slug":"spring-aop-和-aspectj-aop-有什么区别","link":"#spring-aop-和-aspectj-aop-有什么区别","children":[]}]},{"level":2,"title":"模板方法","slug":"模板方法","link":"#模板方法","children":[]},{"level":2,"title":"观察者模式","slug":"观察者模式","link":"#观察者模式","children":[{"level":3,"title":"Spring 事件驱动模型中的三种角色","slug":"spring-事件驱动模型中的三种角色","link":"#spring-事件驱动模型中的三种角色","children":[]},{"level":3,"title":"Spring 的事件流程总结","slug":"spring-的事件流程总结","link":"#spring-的事件流程总结","children":[]}]},{"level":2,"title":"适配器模式","slug":"适配器模式","link":"#适配器模式","children":[{"level":3,"title":"Spring AOP 中的适配器模式","slug":"spring-aop-中的适配器模式","link":"#spring-aop-中的适配器模式","children":[]},{"level":3,"title":"Spring MVC 中的适配器模式","slug":"spring-mvc-中的适配器模式","link":"#spring-mvc-中的适配器模式","children":[]}]},{"level":2,"title":"装饰者模式","slug":"装饰者模式","link":"#装饰者模式","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1704389378000,"updatedTime":1704389378000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":1}]},"filePathRelative":"JavaGuide/system-design/framework/spring/spring-design-patterns-summary.md"}');export{l as data};
