const e=JSON.parse('{"key":"v-da10c4fc","path":"/CodeGuide/md/bytecode/javassist/2020-04-27-zijiemabiancheng，Javassistpiansi《tongguozijiemachazhuangjiankongfangfacaijiyunxingshirucanchucanheyichangxinxi》.html","title":"四、通过字节码插桩监控方法采集运行时入参出参和异常信息","lang":"zh-CN","frontmatter":{"category":"itstack-demo-agent","title":"四、通过字节码插桩监控方法采集运行时入参出参和异常信息","tagline":"by 付政委","tag":["itstack-demo-bytecode"],"excerpt":"字节码编程插桩这种技术常与 Javaagent 技术结合用在系统的非入侵监控中，这样就可以替代在方法中进行硬编码操作。比如，你需要监控一个方法，包括；方法信息、执行耗时、出入参数、执行链路以及异常等。那么就非常适合使用这样的技术手段进行处理。","lock":"need"},"headers":[{"level":2,"title":"一、前言","slug":"一、前言","link":"#一、前言","children":[]},{"level":2,"title":"二、开发环境","slug":"二、开发环境","link":"#二、开发环境","children":[]},{"level":2,"title":"三、技术实现","slug":"三、技术实现","link":"#三、技术实现","children":[{"level":3,"title":"1. 获取方法基础信息","slug":"_1-获取方法基础信息","link":"#_1-获取方法基础信息","children":[]},{"level":3,"title":"2. 方法字节码插桩","slug":"_2-方法字节码插桩","link":"#_2-方法字节码插桩","children":[]}]},{"level":2,"title":"四、测试结果","slug":"四、测试结果","link":"#四、测试结果","children":[]},{"level":2,"title":"五、总结","slug":"五、总结","link":"#五、总结","children":[]}],"git":{"createdTime":1704301416000,"updatedTime":1704373598000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":2}]},"filePathRelative":"CodeGuide/md/bytecode/javassist/2020-04-27-字节码编程，Javassist篇四《通过字节码插桩监控方法采集运行时入参出参和异常信息》.md"}');export{e as data};
