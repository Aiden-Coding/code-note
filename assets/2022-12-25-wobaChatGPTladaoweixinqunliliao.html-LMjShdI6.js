import{_ as i,r as o,o as r,c,a,b as n,d as t,e}from"./app-3RcBQnkC.js";const p={},l=a("h1",{id:"我把chatgpt拉到微信群里来了-都可以对ai提问了",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#我把chatgpt拉到微信群里来了-都可以对ai提问了","aria-hidden":"true"},"#"),n(" 我把ChatGPT拉到微信群里来了，都可以对AI提问了！")],-1),d=a("br",null,null,-1),u={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},h=e('<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="一、前言-用的很爽" tabindex="-1"><a class="header-anchor" href="#一、前言-用的很爽" aria-hidden="true">#</a> 一、前言：用的很爽！</h2><p>自从小傅哥用上 ChatGPT 连搜索引擎用的都不多了，很多问题的检索我第一时间都会想到去 ChatGPT 提问试试。它的回答既非常准确又没有一堆广告，对于研发人员来说使用 ChatGPT 简直是个宝贝。</p><p>它能给你编写简单的工程案例代码，它能回答你没有缺少思路的疑难问题，它也能帮你优化你需要内卷的 PPT 话术！哈哈哈，但当然它也有不能干的，比如让它手写个 MyBatis，<strong>它告诉我</strong>：</p><div align="center"><img src="https://bugstack.cn/images/article/about/ChatGPT-01.png?raw=true" width="600px"></div><p><strong>ChatGPT</strong>：是GPT（Generative Pre-training Transformer，生成预训练转换器）语言模型的一种变体，专门设计用于响应会话风格的提示生成类人文本。ChatGPT是在一个大型的人类对话数据集上训练的，并使用这种训练来生成对自然语言提示的适当和连贯的响应。ChatGPT可用于为聊天机器人、虚拟助理和其他会话系统生成文本，并能够生成广泛的响应，包括对问题的简单回答、对需要更复杂推理或解释的提示的响应，以及旨在幽默或吸引人的响应。</p><hr><p>🤔 从 ChatGPT 中，我似乎感受到了，哪些是它的价值，哪些是我的价值。那些重复没有意义的工作终究会被不断地蚕食和取代。</p><p>🤨 但这样的一个好东西，还有很多研发人员没有体验过，实在不应该。毕竟这个东西与以往很多智能机器人相比，那些都像智障一样。所以小傅哥找了些资料，把ChatGPT部署成微信聊天机器人，拉到群里，让粉丝伙伴体验下。</p><h2 id="二、教程-如何部署" tabindex="-1"><a class="header-anchor" href="#二、教程-如何部署" aria-hidden="true">#</a> 二、教程：如何部署</h2><h3 id="_1-镜像文件" tabindex="-1"><a class="header-anchor" href="#_1-镜像文件" aria-hidden="true">#</a> 1. 镜像文件</h3><p>在 Github 上已经有了非常多的大神提供了如何把 ChatGPT 接入微信聊天的方式，主要是 TypeScript、Go 语言开发的。基本这些也都能部署使用。这里小傅哥还看到Docker中有镜像：<code>cynen/wechat</code> 部署起来也非常方便，接下来小傅哥就使用这种方式进行部署。其他 Github中的方式，有感兴趣的读者也可以尝试部署。<strong>Github 搜索：ChatGPT wechat</strong></p><div align="center"><img src="https://bugstack.cn/images/article/about/ChatGPT-02.png?raw=true" width="800px"></div><h3 id="_2-注册账号" tabindex="-1"><a class="header-anchor" href="#_2-注册账号" aria-hidden="true">#</a> 2. 注册账号</h3><p>ChatGPT 暂时还不支持国内的账号注册，所以需要申请虚拟点好号码进行注册。如下步骤如果你能访问并申请，那么就可以体验 ChatGPT 了。</p><div align="center"><img src="https://bugstack.cn/images/article/about/ChatGPT-03.png?raw=true" width="800px"></div><ol><li>sms-activate.org - 注册虚拟电话号码[如图] 【多服务、印度、openAI】，账号用支付宝充值2块钱就可以。</li><li>beta.openai.com/signup - 注册账号，注册过程中会让你填写你的虚拟电话号，并在1中的地址里收取验证码。</li><li>chat.openai.com/auth/login - 注册完成后登录，就可以和ai对话了。</li></ol><h3 id="_3-api-keys-申请" tabindex="-1"><a class="header-anchor" href="#_3-api-keys-申请" aria-hidden="true">#</a> 3. API keys 申请</h3><p>openai 是提供了接入的 API keys 的，只有在申请了这个 API keys 才能完成后续的接入动作。</p><div align="center"><img src="https://bugstack.cn/images/article/about/ChatGPT-04.png?raw=true" width="800px"></div>',20),g=a("strong",null,"地址",-1),k={href:"https://beta.openai.com/account/api-keys",target:"_blank",rel:"noopener noreferrer"},v=a("li",null,[a("strong",null,"说明"),n("：点击进入后，点击 Create new secret key 就可以申请了。申请后会复制你的 SECRET KEY，复制后关闭弹窗即可。")],-1),b=e(`<h3 id="_4-镜像部署" tabindex="-1"><a class="header-anchor" href="#_4-镜像部署" aria-hidden="true">#</a> 4. 镜像部署</h3><p>这里小傅哥选择使用 Docker 镜像的方式部署一个微信聊天机器人。你可以自己本地安装 Docker 也可以在京东云、阿里云、百度云、腾讯云等购买云服务器的方式进行部署。</p><p>进入 Docker 后，你需要完成如下操作；</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code># 创建目录
mkdir <span class="token operator">/</span>data<span class="token operator">/</span>openai

# 创建文件
touch config<span class="token punctuation">.</span>json

# 修改文件
vi config<span class="token punctuation">.</span>json

<span class="token punctuation">{</span>
  <span class="token string">&quot;api_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;复制粘贴你申请的API keys&quot;</span><span class="token punctuation">,</span> # openai的 账户创建的apikeys
  <span class="token string">&quot;auto_pass&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>									# 加好友时<span class="token punctuation">,</span>是否自动通过
  <span class="token string">&quot;model&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text-davinci-003&quot;</span><span class="token punctuation">,</span>        # 模型名称，官网有很多模型
  <span class="token string">&quot;session_timeout&quot;</span><span class="token operator">:</span> <span class="token number">90</span>								# ession保存时间 秒<span class="token punctuation">,</span>其实就是上下文保留时间<span class="token punctuation">.</span> 超过这个时间<span class="token punctuation">,</span>就会自动清空上下文
<span class="token punctuation">}</span>

# 拉取镜像
docker run <span class="token operator">-</span>dti <span class="token operator">--</span>name wechat <span class="token operator">-</span>v <span class="token operator">/</span>data<span class="token operator">/</span>openai<span class="token operator">/</span>config<span class="token punctuation">.</span>json<span class="token operator">:</span><span class="token operator">/</span>app<span class="token operator">/</span>config<span class="token punctuation">.</span>json cynen<span class="token operator">/</span>wechat

# 登录微信
docker logs <span class="token operator">-</span>f wechat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://bugstack.cn/images/article/about/ChatGPT-05.png?raw=true" width="600px"></div><ul><li>当你启动 cynen/wechat 运行 docker logs -f wechat 就可以看到弹出一个微信的扫码登录。这个时候你可以用自己的一个微信扫码登录，登录完成后你可以与这个微信聊天或者拉群里就可以了。</li></ul><h3 id="_5-运行效果" tabindex="-1"><a class="header-anchor" href="#_5-运行效果" aria-hidden="true">#</a> 5. 运行效果</h3><p><strong>微信群聊</strong></p><div align="center"><img src="https://bugstack.cn/images/article/about/ChatGPT-06.png?raw=true" width="600px"></div><p><strong>后台日志</strong></p><div align="center"><img src="https://bugstack.cn/images/article/about/ChatGPT-07.png?raw=true" width="600px"></div><ul><li>咋样，是不是还挺有意思的，而且非常的聪明！</li><li>如果你自己不能部署一个这样的机器人，也可以添加小傅哥的微信，进群体验下。</li></ul><h2 id="三、进群-体验聊天" tabindex="-1"><a class="header-anchor" href="#三、进群-体验聊天" aria-hidden="true">#</a> 三、进群：体验聊天</h2><div align="center"><img src="https://bugstack.cn/images/article/about/ChatGPT-08.png?raw=true" width="300px"></div><ul><li>想体验微信ChatGPT微信机器人的小伙伴，可以扫码加小傅哥的微信（<strong>fustack</strong>）。加入后，小傅哥会回复给你入群二维码(因为二维码有有效期，所以通过这样的方式拉你进群)。</li><li>入群后，会有一个叫：ChatGPT 的机器人🤖，你只需要 <strong>@ChatGPT</strong> 对它提问即可。</li></ul>`,15);function m(_,P){const s=o("ExternalLinkIcon");return r(),c("div",null,[l,a("p",null,[n("作者：小傅哥 "),d,n("博客："),a("a",u,[n("https://bugstack.cn"),t(s)])]),h,a("ul",null,[a("li",null,[g,n("："),a("a",k,[n("https://beta.openai.com/account/api-keys"),t(s)])]),v]),b])}const T=i(p,[["render",m],["__file","2022-12-25-wobaChatGPTladaoweixinqunliliao.html.vue"]]);export{T as default};
