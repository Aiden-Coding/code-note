const e=JSON.parse('{"key":"v-00e0f892","path":"/CodeGuide/md/algorithm/logic/leetcode/2020-03-18-wuzhongfuzifudezuichangzichuan.html","title":"野路子搞算法 · 让算法可视化《leetcode03.无重复字符的最长子串》","lang":"zh-CN","frontmatter":{"category":"itstack-demo-algorithm","title":"野路子搞算法 · 让算法可视化《leetcode03.无重复字符的最长子串》","tagline":"by 付政委","tag":["algorithm","itstack-demo-algorithm"],"excerpt":"通过可视化的算法过程展现，让刷题更加容易！可视化算法代码平台，目前支持的算法包括回溯法、加密算法、动态规划、图搜索、贪婪算法、搜索算法、排序算法","lock":"need"},"headers":[{"level":2,"title":"一、前言","slug":"一、前言","link":"#一、前言","children":[]},{"level":2,"title":"二、题目：《无重复字符的最长子串》","slug":"二、题目-《无重复字符的最长子串》","link":"#二、题目-《无重复字符的最长子串》","children":[]},{"level":2,"title":"三、思路和实现","slug":"三、思路和实现","link":"#三、思路和实现","children":[{"level":3,"title":"1. 实现方式，indexOf","slug":"_1-实现方式-indexof","link":"#_1-实现方式-indexof","children":[]},{"level":3,"title":"2. 实现方式，toCharArry","slug":"_2-实现方式-tochararry","link":"#_2-实现方式-tochararry","children":[]},{"level":3,"title":"3. 实现方式，bit结构","slug":"_3-实现方式-bit结构","link":"#_3-实现方式-bit结构","children":[]}]},{"level":2,"title":"四、算法可视化运行","slug":"四、算法可视化运行","link":"#四、算法可视化运行","children":[]},{"level":2,"title":"五、总结","slug":"五、总结","link":"#五、总结","children":[]}],"git":{"createdTime":1704301416000,"updatedTime":1704373598000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":2}]},"filePathRelative":"CodeGuide/md/algorithm/logic/leetcode/2020-03-18-无重复字符的最长子串.md"}');export{e as data};
