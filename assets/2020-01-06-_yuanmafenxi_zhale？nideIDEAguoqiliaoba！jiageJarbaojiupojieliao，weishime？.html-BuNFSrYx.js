import{_ as p,r as t,o as e,c as o,a as s,b as n,d as c,e as l}from"./app-3RcBQnkC.js";const i={},r=s("h1",{id:"源码分析-咋嘞-你的idea过期了吧-加个jar包就破解了-为什么",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#源码分析-咋嘞-你的idea过期了吧-加个jar包就破解了-为什么","aria-hidden":"true"},"#"),n(" 源码分析 | 咋嘞？你的IDEA过期了吧！加个Jar包就破解了，为什么？")],-1),u=s("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=l(`<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="一、前言介绍" tabindex="-1"><a class="header-anchor" href="#一、前言介绍" aria-hidden="true">#</a> 一、前言介绍</h2><p>2020年了，对于一个程序猿来说；</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">2020</span> <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">+</span> <span class="token number">996</span> <span class="token operator">|</span> <span class="token number">404</span> <span class="token operator">+</span> <span class="token number">404</span> <span class="token operator">+</span> <span class="token number">404</span> <span class="token operator">+</span> <span class="token number">404</span> <span class="token operator">+</span> <span class="token number">404</span>
<span class="token number">2021</span> <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">+</span> <span class="token number">997</span>
<span class="token number">2022</span> <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">+</span> <span class="token number">9106</span>
<span class="token number">2023</span> <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">+</span> <span class="token number">9107</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">20</span>xx <span class="token operator">=</span> 从今年开始可怕
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当你过了元旦，爽了周末，清早上班，拿起杯子，加点新(薪)水，打开电脑，收起烦恼，翘起小脚，上扬嘴角。一切就绪都准备好，好！撸代码！啊！！！IDEA duang duang duang，过期了！</p><p><img src="https://bugstack.cn/assets/images/pic-content/2019/11/itstack-demo-code-idea-03.png" alt="微信公众号：bugstack虫洞栈 &amp; IDEA 过期"></p><p>脑瓜一热赶紧搜索破解码；</p><ul><li>第一个，失败</li><li>第二个，失败</li><li>第三个，失败</li><li>...</li><li>第N个，终于，破解了三个月，先用着，先用着，以后再说！</li></ul><p>可能大部分伙伴都在搜各种一堆一大串的破解码往里面粘，一个个试到最后终于过了。但也有一部分老司机是不搜破解码的，他们使用jar包破解，有效期100年。</p><p>那么！本文并不引导用户都去使用破解版，像IDEA这么优秀，其实给你提供了很多选择；</p><ol><li>如果你是学生可以免费使用</li><li>分为社区办和旗舰版，你可以使用社区版 Free, open-source</li><li>一般大公司都是有正版授权的，可以使用</li><li>如果你有开源项目也可以申请 IDEA 授权</li></ol><p>所以，个人开发使用社区版本即可，不要使用破解。</p><p>好！回归正题，本文主要讲解是为什么放个Jar包就能破解，最后在使用一个jar进行破解演示。在以下章节中你可以学习到如下知识；</p><ul><li>Java Agent 非硬编码式代理类，这也就是常说的探针技术</li><li>ASM 字节码编程简单使用</li><li>工程打包额外加载其他 jar 方法</li><li>最后是一个破解演示，仅适合个人学习使用</li></ul><h2 id="二、案例工程" tabindex="-1"><a class="header-anchor" href="#二、案例工程" aria-hidden="true">#</a> 二、案例工程</h2><p>我们通过一个案例工程来模拟破解过程是怎么做到的，其实每个版本的IDEA都在增强防护机制，破解也越来越难。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea
└── src
    ├── main
    │   ├── java
    │   │   └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo
    │   │       └── <span class="token class-name">JetbrainsCrack</span><span class="token punctuation">.</span>java
    │   └── resources	
    │       └── <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span>	
    │           └── <span class="token constant">MANIFEST</span><span class="token punctuation">.</span><span class="token constant">MF</span>
    └── test
         └── java
             ├── com<span class="token punctuation">.</span>jetbrains<span class="token punctuation">.</span>ls<span class="token punctuation">.</span>newLicenses
             │   └── <span class="token class-name">DecodeCertificates</span><span class="token punctuation">.</span>java			 
             └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test
                 └── <span class="token class-name">ApiTest</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、环境配置" tabindex="-1"><a class="header-anchor" href="#三、环境配置" aria-hidden="true">#</a> 三、环境配置</h2><ol><li>JDK 1.8</li><li>IDEA 2019.3.1</li><li>asm-all 3.3.1</li></ol><h2 id="四、代码讲述" tabindex="-1"><a class="header-anchor" href="#四、代码讲述" aria-hidden="true">#</a> 四、代码讲述</h2><p>在案例中我们模拟 IDEA 有一个 DecodeCertificates 类，用于做授权码校验。之后通过我们的 java agent 编程模拟授权被破解。</p><h3 id="_1-java-agent-介绍" tabindex="-1"><a class="header-anchor" href="#_1-java-agent-介绍" aria-hidden="true">#</a> 1. Java Agent 介绍</h3><p>在 JDK1.5 以后，JVM 提供了 agent 技术构建一个独立于应用程序的代理程序（即为Agent），用来协助监测、运行甚至替换其他JVM上的程序。使用它可以实现虚拟机级别的AOP功能。</p><h3 id="_2-asm-介绍" tabindex="-1"><a class="header-anchor" href="#_2-asm-介绍" aria-hidden="true">#</a> 2. ASM 介绍</h3><p>ASM 是一个 JAVA 字节码分析、创建和修改的开源应用框架。在 ASM 中提供了诸多的API用于对类的内容进行字节码操作的方法。与传统的 BCEL 和 SERL 不同，在 ASM 中提供了更为优雅和灵活的操作字节码的方式。目前 ASM 已被广泛的开源应用架构所使用，例如：Spring、Hibernate 等。</p><h3 id="_3-开始我们的模拟破解之路" tabindex="-1"><a class="header-anchor" href="#_3-开始我们的模拟破解之路" aria-hidden="true">#</a> 3. 开始我们的模拟破解之路</h3><blockquote><p>JetbrainsCrack.java &amp; Agent 操作类</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 博客：http://bugstack.cn
 * 公众号：bugstack虫洞栈 | 更多原处优质干货
 * Agent 类，所有程序启动只要配置了 -javaagent: 都会走到 premain 方法
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JetbrainsCrack</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">premain</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">,</span> <span class="token class-name">Instrumentation</span> inst<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;**************************************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;*       公众号：bugstack虫洞栈       *&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;*     博客：https://bugstack.cn      *&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;*   你用剑，我用刀，好的代码都很烧！ *&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;**************************************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        inst<span class="token punctuation">.</span><span class="token function">addTransformer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MethodEntryTransformer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MethodEntryTransformer</span> <span class="token keyword">implements</span> <span class="token class-name">ClassFileTransformer</span> <span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">MethodEntryTransformer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> loader<span class="token punctuation">,</span> <span class="token class-name">String</span> className<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> classBeingRedefined<span class="token punctuation">,</span> <span class="token class-name">ProtectionDomain</span> protectionDomain<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> classfileBuffer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IllegalClassFormatException</span> <span class="token punctuation">{</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>className<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;com/jetbrains/ls/newLicenses/DecodeCertificates&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">ClassReader</span> cr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassReader</span><span class="token punctuation">(</span>classfileBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">ClassNode</span> cn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    cr<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>cn<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MethodNode</span><span class="token punctuation">&gt;</span></span> methodNodes <span class="token operator">=</span> cn<span class="token punctuation">.</span>methods<span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodNode</span> methodNode <span class="token operator">:</span> methodNodes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;decodeLicense&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>methodNode<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">InsnList</span> insns <span class="token operator">=</span> methodNode<span class="token punctuation">.</span>instructions<span class="token punctuation">;</span>
                            <span class="token comment">//清除指令</span>
                            insns<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            insns<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VarInsnNode</span><span class="token punctuation">(</span><span class="token class-name">Opcodes</span><span class="token punctuation">.</span><span class="token constant">ALOAD</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将本地指定的引用存入栈中</span>
                            insns<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InsnNode</span><span class="token punctuation">(</span><span class="token class-name">Opcodes</span><span class="token punctuation">.</span><span class="token constant">ARETURN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 从方法中返回引用类型的数据</span>
                            <span class="token comment">// 访问结束</span>
                            methodNode<span class="token punctuation">.</span><span class="token function">visitEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token class-name">ClassWriter</span> cw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassWriter</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            cn<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>cw<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> cw<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token comment">// 输出字节码到Class</span>
                            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">outputClazz</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token comment">// 返回最新字节码</span>
                            <span class="token keyword">return</span> cw<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> classfileBuffer<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> classfileBuffer<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">outputClazz</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 输出类字节码</span>
            <span class="token class-name">FileOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;ASMDecodeCertificates.class&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;ASM类输出路径：{}&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> out<span class="token punctuation">)</span> <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在这个类中可以看到有一个 premain 方法，这个是在被 java agent 处理后的程序入口，所有信息类和方法都会到这个入口</li><li>之后我们使用 inst.addTransformer(new MethodEntryTransformer()); 添加我们自己的处理逻辑，这个逻辑也是用字节码编程技术代理类的过程。这个过程也就是我们平时开发中那些不需硬编码就可以监控方法执行时长的逻辑一样</li><li>MethodEntryTransformer 实现了 ClassFileTransformer 的 transform 方法，也就是真正操作字节码的过程。 <ul><li>在这个类方法中首先需要找到我们的授权码校验类 com/jetbrains/ls/newLicenses/DecodeCertificates ，每一个版本的IDEA不一样，同时授权逻辑校验也不一样</li><li>紧接着在找到授权校验类里面的校验方法，if (&quot;decodeLicense&quot;.equals(methodNode.name))</li><li>接下来就需要对字节码进行处理了，这里面的处理过程比较粗暴，直接将原来方法里的指令内容清空。然后使用 new VarInsnNode(Opcodes.ALOAD, 1) 将本地指定的引用存入栈中</li><li>之后将我们的入参内容直接返回，new InsnNode(Opcodes.ARETURN)，从方法中返回引用类型的数据。在以往旧版本的 IDEA 破解中比较简单，直接把最终需要的破解内容返回即可，里面描述了 IDEA 各个软件的使用期限</li><li>最终将我们处理后的字节码返回给方法，return cw.toByteArray();这个时候虽然你大爷还是你大爷，但你大娘已经不是你大娘了</li></ul></li><li>为了测试的验证我们将变更后的字节码代码(大娘)输出到工程目录下，也就是一个 class 文件，下文测试时候验证</li></ul><h3 id="_4-decodecertificates-java-模拟-ideaiu-15-0-1-软件授权码校验类" tabindex="-1"><a class="header-anchor" href="#_4-decodecertificates-java-模拟-ideaiu-15-0-1-软件授权码校验类" aria-hidden="true">#</a> 4. DecodeCertificates.java &amp; 模拟 ideaIU-15.0.1 软件授权码校验类</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DecodeCertificates</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">decodeLicense</span><span class="token punctuation">(</span><span class="token class-name">String</span> usingKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 模拟校验授权码</span>
        <span class="token keyword">return</span> <span class="token string">&quot;usingKey is error：&quot;</span><span class="token operator">+</span> usingKey<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这个类比较简单只是模拟有这么个方法用于校验授权码</li></ul><h3 id="_5-apitest-java-测试类" tabindex="-1"><a class="header-anchor" href="#_5-apitest-java-测试类" aria-hidden="true">#</a> 5. ApiTest.java &amp; 测试类</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 博客：http://bugstack.cn
 * 公众号：bugstack虫洞栈 | 更多原处优质干货
 * 测试类配置 VM 参数
 * Idea VM options：-javaagent:E:\\itstack\\GIT\\itstack.org\\itstack-demo-code\\itstack-demo-code-idea\\target\\itstack-demo-code-idea-1.0-SNAPSHOT.jar
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">ApiTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">DecodeCertificates</span> decodeCertificates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DecodeCertificates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 模拟usingKey：认购有效期至2089年7月8日</span>
        <span class="token class-name">String</span> license <span class="token operator">=</span> decodeCertificates<span class="token punctuation">.</span><span class="token function">decodeLicense</span><span class="token punctuation">(</span><span class="token string">&quot;Subscription is active until July 8, 2089&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;测试结果：{}&quot;</span><span class="token punctuation">,</span> license<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-manifest-mf-配置引导启动时加载" tabindex="-1"><a class="header-anchor" href="#_6-manifest-mf-配置引导启动时加载" aria-hidden="true">#</a> 6. MANIFEST.MF 配置引导启动时加载</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Manifest</span><span class="token operator">-</span><span class="token class-name">Version</span><span class="token operator">:</span> <span class="token number">1.0</span>
<span class="token class-name">Premain</span><span class="token operator">-</span><span class="token class-name">Class</span><span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span></span>JetbrainsCrack</span>
<span class="token class-name">Can</span><span class="token operator">-</span><span class="token class-name">Redefine</span><span class="token operator">-</span><span class="token class-name">Classes</span><span class="token operator">:</span> <span class="token boolean">true</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-pom-配置打包时加入asm包" tabindex="-1"><a class="header-anchor" href="#_7-pom-配置打包时加入asm包" aria-hidden="true">#</a> 7. POM 配置打包时加入ASM包</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 将javassist包打包到<span class="token class-name">Agent</span>中 <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>maven<span class="token punctuation">.</span>plugins<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>maven<span class="token operator">-</span>shade<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>executions<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>execution<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>phase<span class="token punctuation">&gt;</span></span><span class="token keyword">package</span><span class="token operator">&lt;</span><span class="token operator">/</span>phase<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>goals<span class="token punctuation">&gt;</span></span>
                <span class="token generics"><span class="token punctuation">&lt;</span>goal<span class="token punctuation">&gt;</span></span>shade<span class="token operator">&lt;</span><span class="token operator">/</span>goal<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>goals<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>execution<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>executions<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>artifactSet<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>includes<span class="token punctuation">&gt;</span></span>
                <span class="token generics"><span class="token punctuation">&lt;</span>include<span class="token punctuation">&gt;</span></span>asm<span class="token operator">:</span>asm<span class="token operator">-</span>all<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>includes<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>artifactSet<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、工程测试" tabindex="-1"><a class="header-anchor" href="#五、工程测试" aria-hidden="true">#</a> 五、工程测试</h2><ol><li><p>先单纯的直接运行ApiTest.java ，测试结果如下(模拟返回授权不可用)；</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">21</span><span class="token operator">:</span><span class="token number">23</span><span class="token operator">:</span><span class="token number">46.101</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：usingKey is error：<span class="token class-name">Subscription</span> is active until <span class="token class-name">July</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2089</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>第二步测试前先打包下工程，这个时候你会看到如下结果；</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">[</span><span class="token constant">INFO</span><span class="token punctuation">]</span> <span class="token operator">--</span><span class="token operator">-</span> maven<span class="token operator">-</span>install<span class="token operator">-</span>plugin<span class="token operator">:</span><span class="token number">2.4</span><span class="token operator">:</span>install <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token operator">-</span>install<span class="token punctuation">)</span> @ itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea <span class="token operator">--</span><span class="token operator">-</span>
<span class="token punctuation">[</span><span class="token constant">INFO</span><span class="token punctuation">]</span> <span class="token class-name">Installing</span> <span class="token class-name">E</span><span class="token operator">:</span>\\itstack\\<span class="token constant">GIT</span>\\itstack<span class="token punctuation">.</span>org\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea\\target\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea<span class="token operator">-</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span><span class="token punctuation">.</span>jar <span class="token keyword">to</span> <span class="token class-name">D</span><span class="token operator">:</span>\\<span class="token class-name">Program</span> <span class="token class-name">Files</span> <span class="token punctuation">(</span>x86<span class="token punctuation">)</span>\\apache<span class="token operator">-</span>maven<span class="token operator">-</span><span class="token number">3.6</span><span class="token number">.2</span>\\repository\\org\\itstack\\demo\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea\\<span class="token number">1.0</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span>\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea<span class="token operator">-</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span><span class="token punctuation">.</span>jar
<span class="token punctuation">[</span><span class="token constant">INFO</span><span class="token punctuation">]</span> <span class="token class-name">Installing</span> <span class="token class-name">E</span><span class="token operator">:</span>\\itstack\\<span class="token constant">GIT</span>\\itstack<span class="token punctuation">.</span>org\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea\\dependency<span class="token operator">-</span>reduced<span class="token operator">-</span>pom<span class="token punctuation">.</span>xml <span class="token keyword">to</span> <span class="token class-name">D</span><span class="token operator">:</span>\\<span class="token class-name">Program</span> <span class="token class-name">Files</span> <span class="token punctuation">(</span>x86<span class="token punctuation">)</span>\\apache<span class="token operator">-</span>maven<span class="token operator">-</span><span class="token number">3.6</span><span class="token number">.2</span>\\repository\\org\\itstack\\demo\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea\\<span class="token number">1.0</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span>\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea<span class="token operator">-</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span><span class="token punctuation">.</span>pom
<span class="token punctuation">[</span><span class="token constant">INFO</span><span class="token punctuation">]</span> <span class="token class-name">Installing</span> <span class="token class-name">E</span><span class="token operator">:</span>\\itstack\\<span class="token constant">GIT</span>\\itstack<span class="token punctuation">.</span>org\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea\\target\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea<span class="token operator">-</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span><span class="token operator">-</span>sources<span class="token punctuation">.</span>jar <span class="token keyword">to</span> <span class="token class-name">D</span><span class="token operator">:</span>\\<span class="token class-name">Program</span> <span class="token class-name">Files</span> <span class="token punctuation">(</span>x86<span class="token punctuation">)</span>\\apache<span class="token operator">-</span>maven<span class="token operator">-</span><span class="token number">3.6</span><span class="token number">.2</span>\\repository\\org\\itstack\\demo\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea\\<span class="token number">1.0</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span>\\itstack<span class="token operator">-</span>demo<span class="token operator">-</span>code<span class="token operator">-</span>idea<span class="token operator">-</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span><span class="token operator">-</span>sources<span class="token punctuation">.</span>jar
<span class="token punctuation">[</span><span class="token constant">INFO</span><span class="token punctuation">]</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token punctuation">[</span><span class="token constant">INFO</span><span class="token punctuation">]</span> <span class="token constant">BUILD</span> <span class="token constant">SUCCESS</span>
<span class="token punctuation">[</span><span class="token constant">INFO</span><span class="token punctuation">]</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token punctuation">[</span><span class="token constant">INFO</span><span class="token punctuation">]</span> <span class="token class-name">Total</span> time<span class="token operator">:</span>  <span class="token number">3.080</span> s
<span class="token punctuation">[</span><span class="token constant">INFO</span><span class="token punctuation">]</span> <span class="token class-name">Finished</span> at<span class="token operator">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span><span class="token constant">T23</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">+</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">00</span>
<span class="token punctuation">[</span><span class="token constant">INFO</span><span class="token punctuation">]</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><ul><li>这里的 itstack-demo-code-idea-1.0-SNAPSHOT.jar 就是我们的 Agent 包，按实际情况复制自己的路径</li></ul><ol start="3"><li><p>配置 VM options：-javaagent:E:\\itstack\\GIT\\itstack.org\\itstack-demo-code\\itstack-demo-code-idea\\target\\itstack-demo-code-idea-1.0-SNAPSHOT.jar</p><p><img src="https://bugstack.cn/assets/images/pic-content/2019/11/itstack-demo-code-idea-02.png" alt="微信公众号：bugstack虫洞栈 &amp; IDEA VM options"></p></li><li><p>运行 ApiTest 测试，正确结果如下；</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">23</span><span class="token operator">:</span><span class="token number">29</span><span class="token operator">:</span><span class="token number">42.803</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 测试结果：usingKey is error：<span class="token class-name">Subscription</span> is active until <span class="token class-name">July</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2089</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><ul><li>这个过程就是你使用 jar 包破解 IDEA 的过程，了解这个技术点可以用在很多不需要硬编码就能做到的服务中，比如监控，调试等</li></ul><ol start="5"><li>别忘了我们还在 Agent 中输出了新的字节码，看看这个时候的类是什么样(你大爷还是你大爷，但你大娘可不是你大娘了)</li></ol><blockquote><p>被代理前</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DecodeCertificates</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">decodeLicense</span><span class="token punctuation">(</span><span class="token class-name">String</span> usingKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 模拟校验授权码</span>
		<span class="token keyword">return</span> <span class="token string">&quot;usingKey is error：&quot;</span><span class="token operator">+</span> usingKey<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>被代理后</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jetbrains<span class="token punctuation">.</span>ls<span class="token punctuation">.</span>newLicenses</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DecodeCertificates</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token class-name">DecodeCertificates</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">decodeLicense</span><span class="token punctuation">(</span><span class="token class-name">String</span> usingKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> usingKey<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、综上总结" tabindex="-1"><a class="header-anchor" href="#六、综上总结" aria-hidden="true">#</a> 六、综上总结</h2><ul><li>建议个人使用社区版即可，不要尝试破解尊重IDEA，本文只为学习 javaagent 技术</li><li>ASM 这个东西特别强大，其实字节码编程还有 javassist，在一起 RPC 框架中有非常多的使用</li><li>关于 java agent 我已经专题方式写过案例文章，可以参考；https://bugstack.cn/itstack-demo-agent/itstack-demo-agent.html</li></ul>`,50);function m(v,b){const a=t("ExternalLinkIcon");return e(),o("div",null,[r,s("p",null,[n("作者：小傅哥 "),u,n("博客："),s("a",k,[n("https://bugstack.cn"),c(a)])]),d])}const h=p(i,[["render",m],["__file","2020-01-06-_yuanmafenxi_zhale？nideIDEAguoqiliaoba！jiageJarbaojiupojieliao，weishime？.html.vue"]]);export{h as default};
