import{_ as t,o as e,c as l,e as d}from"./app-3RcBQnkC.js";const a={},i=d('<h1 id="a-1-字节代码指令" tabindex="-1"><a class="header-anchor" href="#a-1-字节代码指令" aria-hidden="true">#</a> A.1 字节代码指令</h1><p>本节对字节代码指令进行简要描述。如需全面描述，请参阅 Java 虚拟机规范。</p><p>约定：a 和 b 表示 int, float, long 或 double 值（比如，它们对于 IADD 表示 int，而对于 LADD 则表示 long），o 和 p 表示对象引用，v 表示任意值（或者，对于栈指令，表示大小为 1 的值），w 表示 long 或 double，i、j 和 n 表示 int 值。</p><blockquote><p>局部变量</p></blockquote><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">之前的栈</th><th style="text-align:left;">之后的栈</th></tr></thead><tbody><tr><td style="text-align:left;">ILOAD, LLOAD, FLOAD, DLOAD var</td><td style="text-align:left;">...</td><td style="text-align:left;">... , a</td></tr><tr><td style="text-align:left;">ALOAD var</td><td style="text-align:left;">...</td><td style="text-align:left;">... , o</td></tr><tr><td style="text-align:left;">ISTORE, LSTORE, FSTORE, DSTORE var</td><td style="text-align:left;">... , a</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">ASTORE var</td><td style="text-align:left;">... , o</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">IINC var incr</td><td style="text-align:left;">...</td><td style="text-align:left;">...</td></tr></tbody></table><blockquote><p>栈</p></blockquote><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">之前的栈</th><th style="text-align:left;">之后的栈</th></tr></thead><tbody><tr><td style="text-align:left;">POP</td><td style="text-align:left;">... , v</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">POP2</td><td style="text-align:left;">... , v1 , v2</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">POP2</td><td style="text-align:left;">... , w</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">DUP</td><td style="text-align:left;">... , v</td><td style="text-align:left;">... , v , v</td></tr><tr><td style="text-align:left;">DUP2</td><td style="text-align:left;">... , v1 , v2</td><td style="text-align:left;">... , v1 , v2 , v1 , v2</td></tr><tr><td style="text-align:left;">DUP2</td><td style="text-align:left;">... , w</td><td style="text-align:left;">... , w, w</td></tr><tr><td style="text-align:left;">SWAP</td><td style="text-align:left;">... , v1 , v2</td><td style="text-align:left;">... , v2 , v1</td></tr><tr><td style="text-align:left;">DUP_X1</td><td style="text-align:left;">... , v1 , v2</td><td style="text-align:left;">... , v2 , v1 , v2</td></tr><tr><td style="text-align:left;">DUP_X2</td><td style="text-align:left;">... , v1 , v2 , v3</td><td style="text-align:left;">... , v3 , v1 , v2 , v3</td></tr><tr><td style="text-align:left;">DUP_X2</td><td style="text-align:left;">... , w , v</td><td style="text-align:left;">... , v , w , v</td></tr><tr><td style="text-align:left;">DUP2_X1</td><td style="text-align:left;">... , v1 , v2 , v3</td><td style="text-align:left;">... , v2 , v3 , v1 , v2 , v3</td></tr><tr><td style="text-align:left;">DUP2_X1</td><td style="text-align:left;">... , v , w</td><td style="text-align:left;">... , w , v , w</td></tr><tr><td style="text-align:left;">DUP2_X2</td><td style="text-align:left;">... , v1 , v2 , v3 , v4</td><td style="text-align:left;">... , v3 , v4 , v1 , v2 , v3 , v4</td></tr><tr><td style="text-align:left;">DUP2_X2</td><td style="text-align:left;">... , w , v1 , v2</td><td style="text-align:left;">... , v1 , v2 , w , v1 , v2</td></tr><tr><td style="text-align:left;">DUP2_X2</td><td style="text-align:left;">.... , v1 , v2 , w</td><td style="text-align:left;">... , w , v1 , v2 , w</td></tr><tr><td style="text-align:left;">DUP2_X2</td><td style="text-align:left;">... , w1 , w2</td><td style="text-align:left;">... , w2 , w1 , w2</td></tr></tbody></table><blockquote><p>常量</p></blockquote><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">之前的栈</th><th style="text-align:left;">之后的栈</th></tr></thead><tbody><tr><td style="text-align:left;">ICONST_n (−1 _ n _ 5)</td><td style="text-align:left;">...</td><td style="text-align:left;">... , n</td></tr><tr><td style="text-align:left;">LCONST_n (0 _ n _ 1)</td><td style="text-align:left;">...</td><td style="text-align:left;">... , nL</td></tr><tr><td style="text-align:left;">FCONST_n (0 _ n _ 2)</td><td style="text-align:left;">...</td><td style="text-align:left;">... , nF</td></tr><tr><td style="text-align:left;">DCONST_n (0 _ n _ 1)</td><td style="text-align:left;">...</td><td style="text-align:left;">... , nD</td></tr><tr><td style="text-align:left;">BIPUSH b, −128 _ b &lt; 127</td><td style="text-align:left;">...</td><td style="text-align:left;">... , b</td></tr><tr><td style="text-align:left;">SIPUSH s, −32768 _ s &lt; 32767</td><td style="text-align:left;">...</td><td style="text-align:left;">... , s</td></tr><tr><td style="text-align:left;">LDC cst (int, float, long, double, String 或 Type)</td><td style="text-align:left;">...</td><td style="text-align:left;">... , cst</td></tr><tr><td style="text-align:left;">ACONST_NULL</td><td style="text-align:left;">...</td><td style="text-align:left;">... , null</td></tr></tbody></table><blockquote><p>算数与逻辑</p></blockquote><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">之前的栈</th><th style="text-align:left;">之后的栈</th></tr></thead><tbody><tr><td style="text-align:left;">IADD, LADD, FADD, DADD</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a + b</td></tr><tr><td style="text-align:left;">ISUB, LSUB, FSUB, DSUB</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a - b</td></tr><tr><td style="text-align:left;">IMUL, LMUL, FMUL, DMUL</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a * b</td></tr><tr><td style="text-align:left;">IDIV, LDIV, FDIV, DDIV</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a / b</td></tr><tr><td style="text-align:left;">IREM, LREM, FREM, DREM</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a % b</td></tr><tr><td style="text-align:left;">INEG, LNEG, FNEG, DNEG</td><td style="text-align:left;">... , a</td><td style="text-align:left;">... , -a</td></tr><tr><td style="text-align:left;">ISHL, LSHL</td><td style="text-align:left;">... , a , n</td><td style="text-align:left;">... , a &lt;_&lt; n</td></tr><tr><td style="text-align:left;">ISHR, LSHR</td><td style="text-align:left;">... , a , n</td><td style="text-align:left;">... , a &gt;_&gt; n</td></tr><tr><td style="text-align:left;">IUSHR, LUSHR</td><td style="text-align:left;">... , a , n</td><td style="text-align:left;">... , a &gt;<em>&gt;</em>&gt; n</td></tr><tr><td style="text-align:left;">IAND, LAND</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a &amp; b</td></tr><tr><td style="text-align:left;">IOR, LOR</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a</td></tr><tr><td style="text-align:left;">IXOR, LXOR</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a ^ b</td></tr><tr><td style="text-align:left;">LCMP</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a == b ? 0 : (a &lt; b ? -1 : 1)</td></tr><tr><td style="text-align:left;">FCMPL, FCMPG</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a == b ? 0 : (a &lt; b ? -1 : 1)</td></tr><tr><td style="text-align:left;">DCMPL, DCMPG</td><td style="text-align:left;">... , a , b</td><td style="text-align:left;">... , a == b ? 0 : (a &lt; b ? -1 : 1)</td></tr></tbody></table><blockquote><p>类型转换</p></blockquote><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">之前的栈</th><th style="text-align:left;">之后的栈</th></tr></thead><tbody><tr><td style="text-align:left;">I2B</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... , (byte) i</td></tr><tr><td style="text-align:left;">I2C</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... , (char) i</td></tr><tr><td style="text-align:left;">I2S</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... , (short) i</td></tr><tr><td style="text-align:left;">L2I, F2I, D2I</td><td style="text-align:left;">... , a</td><td style="text-align:left;">... , (int) a</td></tr><tr><td style="text-align:left;">I2L, F2L, D2L</td><td style="text-align:left;">... , a</td><td style="text-align:left;">... , (long) a</td></tr><tr><td style="text-align:left;">I2F, L2F, D2F</td><td style="text-align:left;">... , a</td><td style="text-align:left;">... , (float) a</td></tr><tr><td style="text-align:left;">I2D, L2D, F2D</td><td style="text-align:left;">... , a</td><td style="text-align:left;">... , (double) a</td></tr><tr><td style="text-align:left;">CHECKCAST class</td><td style="text-align:left;">... , o</td><td style="text-align:left;">... , (class) o</td></tr></tbody></table><blockquote><p>对象、字段和方法</p></blockquote><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">之前的栈</th><th style="text-align:left;">之后的栈</th></tr></thead><tbody><tr><td style="text-align:left;">NEW class …</td><td style="text-align:left;">…,new class</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">GETFIELD c f t</td><td style="text-align:left;">... , o</td><td style="text-align:left;">... , o.f</td></tr><tr><td style="text-align:left;">PUTFIELD c f t</td><td style="text-align:left;">... , o , v</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">GETSTATIC c f t</td><td style="text-align:left;">...</td><td style="text-align:left;">... , c.f</td></tr><tr><td style="text-align:left;">PUTSTATIC c f t</td><td style="text-align:left;">... , v</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">INVOKEVIRTUAL c m t</td><td style="text-align:left;">... , o , v1 , ... , vn</td><td style="text-align:left;">... , o.m(v1, ... vn)</td></tr><tr><td style="text-align:left;">INVOKESPECIAL c m t</td><td style="text-align:left;">... , o , v1 , ... , vn</td><td style="text-align:left;">... , o.m(v1, ... vn)</td></tr><tr><td style="text-align:left;">INVOKESTATIC c m t</td><td style="text-align:left;">... , v1 , ... , vn</td><td style="text-align:left;">... , c.m(v1, ... vn)</td></tr><tr><td style="text-align:left;">INVOKEINTERFACE c m t</td><td style="text-align:left;">... , o , v1 , ... , vn</td><td style="text-align:left;">... , o.m(v1, ... vn)</td></tr><tr><td style="text-align:left;">INVOKEDYNAMIC m t bsm</td><td style="text-align:left;">... , o , v1 , ... , vn</td><td style="text-align:left;">... , o.m(v1, ... vn)</td></tr><tr><td style="text-align:left;">INSTANCEOF class</td><td style="text-align:left;">... , o</td><td style="text-align:left;">... , o instanceof class</td></tr><tr><td style="text-align:left;">MONITORENTER</td><td style="text-align:left;">... , o</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">MONITOREXIT</td><td style="text-align:left;">... , o</td><td style="text-align:left;">...</td></tr></tbody></table><blockquote><p>数组</p></blockquote><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">之前的栈</th><th style="text-align:left;">之后的栈</th></tr></thead><tbody><tr><td style="text-align:left;">NEWARRAY type （用于任意基元类型）</td><td style="text-align:left;">... , n</td><td style="text-align:left;">... , new type[n]</td></tr><tr><td style="text-align:left;">ANEWARRAY class</td><td style="text-align:left;">... , n</td><td style="text-align:left;">... , new class[n]</td></tr><tr><td style="text-align:left;">MULTIANEWARRAY [...[t n</td><td style="text-align:left;">... , i1 ,... , in</td><td style="text-align:left;">... , new t[i1]...[in]…</td></tr><tr><td style="text-align:left;">BALOAD, CALOAD, SALOAD</td><td style="text-align:left;">... , o , i</td><td style="text-align:left;">... , o[i]</td></tr><tr><td style="text-align:left;">IALOAD, LALOAD,FALOAD, DALOAD</td><td style="text-align:left;">... , o , i</td><td style="text-align:left;">... , o[i]</td></tr><tr><td style="text-align:left;">AALOAD</td><td style="text-align:left;">... , o , i</td><td style="text-align:left;">... , o[i]</td></tr><tr><td style="text-align:left;">BASTORE, CASTORE, SASTORE</td><td style="text-align:left;">... , o , i , j</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">IASTORE, LASTORE, FASTORE, DASTORE</td><td style="text-align:left;">... , o , i , a</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">AASTORE</td><td style="text-align:left;">... , o , i , p</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">ARRAYLENGTH</td><td style="text-align:left;">... , o</td><td style="text-align:left;">... , o.length</td></tr></tbody></table><blockquote><p>跳转</p></blockquote><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">之前的栈</th><th style="text-align:left;">之后的栈</th></tr></thead><tbody><tr><td style="text-align:left;">IFEQ</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... i == 0 时跳转</td></tr><tr><td style="text-align:left;">IFNE</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... i != 0 时跳转</td></tr><tr><td style="text-align:left;">IFLT</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... i &lt; 0 时跳转</td></tr><tr><td style="text-align:left;">IFGE</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... i &gt;= 0 时跳转</td></tr><tr><td style="text-align:left;">IFGT</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... i &gt; 0 时跳转</td></tr><tr><td style="text-align:left;">IFLE</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... i &lt;= 0 时跳转</td></tr><tr><td style="text-align:left;">IF_ICMPEQ</td><td style="text-align:left;">... , i , j</td><td style="text-align:left;">... i == j 时跳转</td></tr><tr><td style="text-align:left;">IF_ICMPNE</td><td style="text-align:left;">... , i , j</td><td style="text-align:left;">... i != j 时跳转</td></tr><tr><td style="text-align:left;">IF_ICMPLT</td><td style="text-align:left;">... , i , j</td><td style="text-align:left;">... i &lt; j 时跳转</td></tr><tr><td style="text-align:left;">IF_ICMPGE</td><td style="text-align:left;">... , i , j</td><td style="text-align:left;">... i &gt;= j 时跳转</td></tr><tr><td style="text-align:left;">IF_ICMPGT</td><td style="text-align:left;">... , i , j</td><td style="text-align:left;">... i &gt; j 时跳转</td></tr><tr><td style="text-align:left;">IF_ICMPLE</td><td style="text-align:left;">... , i , j</td><td style="text-align:left;">... i &lt;= j 时跳转</td></tr><tr><td style="text-align:left;">IF_ACMPEQ</td><td style="text-align:left;">... , o , p</td><td style="text-align:left;">... o == p 时跳转</td></tr><tr><td style="text-align:left;">IF_ACMPNE</td><td style="text-align:left;">... , o , p</td><td style="text-align:left;">... o != p 时跳转</td></tr><tr><td style="text-align:left;">IFNULL</td><td style="text-align:left;">... , o</td><td style="text-align:left;">... o == null 时跳转</td></tr><tr><td style="text-align:left;">IFNONNULL</td><td style="text-align:left;">... , o</td><td style="text-align:left;">... o != null 时跳转</td></tr><tr><td style="text-align:left;">GOTO</td><td style="text-align:left;">...</td><td style="text-align:left;">... 总是跳转</td></tr><tr><td style="text-align:left;">TABLESWITCH</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... 总是跳转</td></tr><tr><td style="text-align:left;">LOOKUPSWITCH</td><td style="text-align:left;">... , i</td><td style="text-align:left;">... 总是跳转</td></tr></tbody></table><blockquote><p>返回</p></blockquote><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">之前的栈</th></tr></thead><tbody><tr><td style="text-align:left;">IRETURN, LRETURN, FRETURN, DRETURN</td><td style="text-align:left;">... , a</td></tr><tr><td style="text-align:left;">ARETURN</td><td style="text-align:left;">... , o</td></tr><tr><td style="text-align:left;">RETURN</td><td style="text-align:left;">...</td></tr><tr><td style="text-align:left;">ATHROW</td><td style="text-align:left;">... , o</td></tr></tbody></table>',21),n=[i];function s(y,f){return e(),l("div",null,n)}const x=t(a,[["render",s],["__file","A.1zijiedaimazhi.html.vue"]]);export{x as default};
