import{_ as o,r,o as c,c as i,a as e,b as a,d as t,e as n}from"./app-3RcBQnkC.js";const p={},l=e("h1",{id:"免费1年服务器-部署个chatgpt专属网页版",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#免费1年服务器-部署个chatgpt专属网页版","aria-hidden":"true"},"#"),a(" 免费1年服务器，部署个ChatGPT专属网页版！")],-1),d=e("br",null,null,-1),h={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},u=e("blockquote",null,[e("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),g=e("p",null,"白皮袄个免费1年服务器，部署个ChatGPT专属网页版！",-1),m=e("p",null,[e("code",null,"api.openai.com port 443: Connection timed out"),a(" 你是不在调用 ChatGPT 接口的时候报错 443 了，哈哈哈，我的也是。当小傅哥发现自己开发的《ChatGPT AI 问答助手》已经不工作了，搜索了下为啥会 443 呢，原来是 openAI 的 API 域名已经 DNS 污染了，所以没法使用。")],-1),_=e("p",null,[a("所以如果你仍需要"),e("strong",null,"学习测试"),a("使用，要不是找其他人做好的代理接口，要不就是买一台能调用 openAI 的海外服务器。但其实对于学习来说能白皮袄还花费这个钱干嘛！所以小傅哥今天给粉丝伙伴分享个，能免费使用1年稳定的云服务器。第二年再重新申请就可以。")],-1),v=e("strong",null,"这里小傅哥先部署了一个 ChatGPT Web",-1),k={href:"http://chatgpt.itedus.cn/",target:"_blank",rel:"noopener noreferrer"},b=e("div",{align:"center"},[e("img",{src:"https://bugstack.cn/images/article/devops/dev-ops-230321-20.png?raw=true",width:"950px"})],-1),w=e("h2",{id:"一、这是什么服务器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一、这是什么服务器","aria-hidden":"true"},"#"),a(" 一、这是什么服务器？")],-1),f=e("p",null,[a("国内我们知道有阿里云、腾讯云、华为云、百度云、京东云，而国外有亚马逊旗下的 AWS 云，并且重点来了，AWS 是有免费的云服务的，任何人都可以获得一台。"),e("code",null,"其实以前就听说有 AWS 免费云，但一直没当回事，现在才感觉真香！")],-1),x={href:"https://aws.amazon.com/cn/free",target:"_blank",rel:"noopener noreferrer"},A=n('<div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-01.png?raw=true" width="450px"></div><p>这里小傅哥感兴趣的就是 Amazon EC2 云服务器，每个月免费750个小时。这一个月31天✖️24小时不也才744小时，所以这和免费有啥区别？🤔 <strong>难道一天能加出来25个小时班？</strong></p><p><strong>另外这里有一些注意点</strong>；</p><ol><li>EC2 云服务器，只有1核1G，在安装 Docker、Portainer、以及一个 Java SpringBoot 应用程序后，运行正常&amp;稳定。</li><li>申请时需要用到银行卡，我自己有一个 VISA 的信用卡，直接注册的时候使用就可以。其他银行卡也OK。<code>有些营销文，为了卖服务器说乱扣费</code>，为此我专门去搜索了下关于 AWS 免费服务器会有坑不，以及自己验证了一段时间，检查账单以及服务器的运行程度，发现使用的很顺畅，不会有恶意扣费。</li><li>使用到快到1年的时候，可以把服务停掉，并重新申请个账号就可以继续用1年了。</li></ol><p>如果以上这些点你觉得没问题，那么就可以按照接下来的教程进行申请和使用了。因为 Amazon EC2 和国内的一些服务器使用风格略有差异，所以需要按照教程创建并使用实例。</p><h2 id="二、怎么免费白皮袄" tabindex="-1"><a class="header-anchor" href="#二、怎么免费白皮袄" aria-hidden="true">#</a> 二、怎么免费白皮袄？</h2><h3 id="_1-创建账号" tabindex="-1"><a class="header-anchor" href="#_1-创建账号" aria-hidden="true">#</a> 1. 创建账号</h3>',7),y={href:"https://portal.aws.amazon.com/billing/signup#/start/email",target:"_blank",rel:"noopener noreferrer"},P=e("div",{align:"center"},[e("img",{src:"https://bugstack.cn/images/article/devops/dev-ops-230321-02.png?raw=true",width:"450px"})],-1),z=e("h3",{id:"_2-登录账号",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-登录账号","aria-hidden":"true"},"#"),a(" 2. 登录账号")],-1),S={href:"https://console.aws.amazon.com/console/home",target:"_blank",rel:"noopener noreferrer"},C=e("div",{align:"center"},[e("img",{src:"https://bugstack.cn/images/article/devops/dev-ops-230321-03.png?raw=true",width:"450px"})],-1),E=e("h3",{id:"_3-控制面板",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-控制面板","aria-hidden":"true"},"#"),a(" 3. 控制面板")],-1),I={href:"https://us-east-1.console.aws.amazon.com/iamv2/home?region=us-east-2#/home",target:"_blank",rel:"noopener noreferrer"},G=n('<div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-04.png?raw=true" width="450px"></div><p>在创建 Amazon EC2 云服务器前，需要在控制面板中创建；用户组、用户、角色，这样在后面创建服务器的时候才能把用户信息给关联上。</p><h4 id="_3-1-创建用户" tabindex="-1"><a class="header-anchor" href="#_3-1-创建用户" aria-hidden="true">#</a> 3.1 创建用户</h4><div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-05.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-06.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-09.png?raw=true" width="750px"></div>',6),T={href:"https://us-east-1.console.aws.amazon.com/iamv2/home?region=us-east-2#/users",target:"_blank",rel:"noopener noreferrer"},N=e("li",null,"说明：首先你需要在IAM控制面板下的访问管理中的用户下，创建一个自己的用户。你可以创建用户名为 admin 或者其他。",-1),K=n('<h4 id="_3-2-创建用户组" tabindex="-1"><a class="header-anchor" href="#_3-2-创建用户组" aria-hidden="true">#</a> 3.2 创建用户组</h4><div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-07.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-08.png?raw=true" width="750px"></div>',3),O={href:"https://us-east-1.console.aws.amazon.com/iamv2/home?region=us-east-2#/groups/create",target:"_blank",rel:"noopener noreferrer"},j=e("li",null,[a("说明：在用户组的创建中，写上组名、添加上刚才创建的用户admin，之后再搜索"),e("code",null,"AdministratorAccess"),a("为这个组的用户进行授权。")],-1),H=e("h3",{id:"_4-部署实例",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-部署实例","aria-hidden":"true"},"#"),a(" 4. 部署实例")],-1),D=e("h4",{id:"_4-1-创建密钥对",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-1-创建密钥对","aria-hidden":"true"},"#"),a(" 4.1 创建密钥对")],-1),W=e("p",null,"这里需要先创建一个密钥对，之后再创建应用实例的时候把密钥对关联上去。同时密钥对也是用作本地 SSH 登录的一个重要凭证，否则不能登录。另外这里创建完密钥对，会自动下载到本地，你需要保存好。",-1),B={href:"https://us-east-2.console.aws.amazon.com/ec2/home?region=us-east-2#KeyPairs:",target:"_blank",rel:"noopener noreferrer"},M=n('<div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-10.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-11.png?raw=true" width="750px"></div><ul><li>创建完成后，会自动下载一个名为 <code>admin_key.pem</code> 的文件，保存好它，后面用。</li></ul><h4 id="_4-2-创建安装组" tabindex="-1"><a class="header-anchor" href="#_4-2-创建安装组" aria-hidden="true">#</a> 4.2 创建安装组</h4><p>用于访问服务器的端口都需要在安全组中开通，比如 SSH 22、Portainer 9000、Docker 2375 所以需要自己创建一个安全组。</p>',5),V={href:"https://us-east-2.console.aws.amazon.com/ec2/home?region=us-east-2#SecurityGroups:",target:"_blank",rel:"noopener noreferrer"},L=n('<div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-12.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-13.png?raw=true" width="750px"></div><ul><li>以后你想控制各个端口的访问，就在安全组中操作就可以了。</li></ul><h4 id="_4-4-启动新实例" tabindex="-1"><a class="header-anchor" href="#_4-4-启动新实例" aria-hidden="true">#</a> 4.4 启动新实例</h4><p>如果你比较粗鲁，刚一进来 AWS 就创建了实例，但发现用户也不对，权限也不对用不了。没关系可以把它终止掉，之后重新启动新实例。</p>',5),R={href:"https://us-east-2.console.aws.amazon.com/ec2/home?region=us-east-2#Instances:",target:"_blank",rel:"noopener noreferrer"},Y=n(`<div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-14.png?raw=true" width="750px"></div><div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-15.png?raw=true" width="750px"></div><p>如果在使用中把自己的应用实例搞坏了，没关系。直接干掉它，重新启动新实例就可以了。</p><h3 id="_5-连接实例" tabindex="-1"><a class="header-anchor" href="#_5-连接实例" aria-hidden="true">#</a> 5. 连接实例</h3><p>Amazon EC2 云服务器提供了 EC2 在线连接、会话管理器、SSH 客户端、EC2 串行管理器。我们这里主要用在线的和 SSH 客户端。</p><table><thead><tr><th><strong>EC2 Instance Connect</strong></th><th>SSH 客户端</th></tr></thead><tbody><tr><td><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-16.png" alt=""></td><td><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-17.png" alt=""></td></tr></tbody></table><ul><li>EC2 在线连接，直接点上连接就可以了。SSH 客户端需要按照引导进行操作。</li></ul><div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-18.png?raw=true" width="950px"></div><p>通过此方式就可以本地连接了，还是非常方便的。如果你有连接工具也可以配置到工具中操作。</p><h2 id="三、部署应用耍起来" tabindex="-1"><a class="header-anchor" href="#三、部署应用耍起来" aria-hidden="true">#</a> 三、部署应用耍起来！</h2><h3 id="_1-安装-docker" tabindex="-1"><a class="header-anchor" href="#_1-安装-docker" aria-hidden="true">#</a> 1. 安装 Docker</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>sudo yum install <span class="token operator">-</span>y yum<span class="token operator">-</span>utils device<span class="token operator">-</span>mapper<span class="token operator">-</span>persistent<span class="token operator">-</span>data lvm2

sudo yum<span class="token operator">-</span>config<span class="token operator">-</span>manager <span class="token operator">--</span>add<span class="token operator">-</span>repo https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>download<span class="token punctuation">.</span>docker<span class="token punctuation">.</span>com<span class="token operator">/</span>linux<span class="token operator">/</span>centos<span class="token operator">/</span>docker<span class="token operator">-</span>ce<span class="token punctuation">.</span>repo

yum list docker <span class="token operator">--</span>showduplicates <span class="token operator">|</span> sort <span class="token operator">-</span>r

sudo yum install docker

sudo systemctl start docker

systemctl enable docker

docker <span class="token operator">--</span>version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置远程链接" tabindex="-1"><a class="header-anchor" href="#_2-配置远程链接" aria-hidden="true">#</a> 2. 配置远程链接</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>vim <span class="token operator">/</span>usr<span class="token operator">/</span>lib<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>docker<span class="token punctuation">.</span>service
在<span class="token class-name">ExecStart</span><span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>dockerd<span class="token operator">-</span>current 后面加上 <span class="token operator">-</span><span class="token class-name">H</span> tcp<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.0</span><span class="token operator">:</span><span class="token number">2375</span> <span class="token operator">-</span><span class="token class-name">H</span> unix<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>run<span class="token operator">/</span>docker<span class="token punctuation">.</span>sock \\
# 重新加载配置文件
systemctl daemon<span class="token operator">-</span>reload
# 重启启动
systemctl restart docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-部署网页版-chatgpt" tabindex="-1"><a class="header-anchor" href="#_3-部署网页版-chatgpt" aria-hidden="true">#</a> 3. 部署网页版 ChatGPT</h3>`,15),U=e("thead",null,[e("tr",null,[e("th",null,"方式"),e("th",null,"免费？"),e("th",null,"可靠性"),e("th",null,"质量")])],-1),q=e("tr",null,[e("td",null,[e("code",null,"ChatGPTAPI(gpt-3.5-turbo-0301)")]),e("td",null,"否"),e("td",null,"可靠"),e("td",null,"相对较笨")],-1),J={href:"https://chat.openai.com/api/auth/session",target:"_blank",rel:"noopener noreferrer"},F=e("code",null,"ChatGPTUnofficialProxyAPI(网页 accessToken)",-1),Q=e("td",null,"是",-1),X=e("td",null,"相对不可靠",-1),Z=e("td",null,"聪明",-1),$=n('<p><strong>通过以下方式，你可以自己部署一个网页版的 ChatGPT，让自己使用。</strong> 注意：OPENAI_API_KEY 需要申请</p><ul><li>海外服务器；<code>docker run --name chatgpt-web -d -p 3002:3002 --env OPENAI_API_KEY=sk-6cPOiRgKmIcMA**** chenzhaoyu94/chatgpt-web</code></li><li>海内服务器；<code>docker run --name chatgpt-web -d -p 3002:3002 --env OPENAI_API_KEY=sk-6cPOiRgKmIcMA**** --env OPENAI_API_BASE_URL=https://open2.aiproxy.xyz chenzhaoyu94/chatgpt-web</code> - 需要添加代理</li></ul><p><strong>也可以不使用Key方式部署</strong>，这个方式的好处是免费，都免费！</p><ul><li>docker run --name chatgpt-web -d -p 3002:3002 --env OPENAI_ACCESS_TOKEN=【从这里获取 https://chat.openai.com/api/auth/session】 chenzhaoyu94/chatgpt-web</li></ul><div align="center"><img src="https://bugstack.cn/images/article/devops/dev-ops-230321-20.png?raw=true" width="950px"></div>',5),ee={href:"https://github.com/Chanzhaoyu/chatgpt-web",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://github.com/geekr-dev/openai-proxy",target:"_blank",rel:"noopener noreferrer"},se=e("h3",{id:"_4-部署-chatgpt-问答助手",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-部署-chatgpt-问答助手","aria-hidden":"true"},"#"),a(" 4. 部署 ChatGPT 问答助手")],-1),te={href:"https://github.com/fuzhengwei/chatbot-api",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://bugstack.cn/md/project/chatbot-api/chatbot-api.html",target:"_blank",rel:"noopener noreferrer"},oe=e("li",null,"注意：通过 IDEA 打开 chatbot-api 并在 IDEA 配置 Docker，这样就可以直接部署应用了。这些内容在视频里都有手把手操作。",-1),re=e("div",{align:"center"},[e("img",{src:"https://bugstack.cn/images/article/devops/dev-ops-230321-19.png?raw=true",width:"950px"})],-1);function ce(ie,pe){const s=r("ExternalLinkIcon");return c(),i("div",null,[l,e("p",null,[a("作者：小傅哥 "),d,a("博客："),e("a",h,[a("https://bugstack.cn"),t(s)])]),u,g,m,_,e("p",null,[v,a("："),e("a",k,[a("http://chatgpt.itedus.cn/"),t(s)]),a(" - 以下文章有专门的部署教程。")]),b,w,f,e("p",null,[a("在 AWS 活动页，有一个免费套餐，这里有很多产品都可以免费使用，包括；云服务、数据库、函数计算、机器学习等。地址："),e("a",x,[a("https://aws.amazon.com/cn/free"),t(s)])]),A,e("p",null,[a("地址："),e("a",y,[a("https://portal.aws.amazon.com/billing/signup#/start/email"),t(s)])]),P,z,e("p",null,[a("地址："),e("a",S,[a("https://console.aws.amazon.com/console/home"),t(s)])]),C,E,e("p",null,[a("地址："),e("a",I,[a("https://us-east-1.console.aws.amazon.com/iamv2/home?region=us-east-2#/home"),t(s)]),a(" - 搜索 IAM 并进入，就是控制面板了。")]),G,e("ul",null,[e("li",null,[a("地址："),e("a",T,[a("https://us-east-1.console.aws.amazon.com/iamv2/home?region=us-east-2#/users"),t(s)])]),N]),K,e("ul",null,[e("li",null,[a("地址："),e("a",O,[a("https://us-east-1.console.aws.amazon.com/iamv2/home?region=us-east-2#/groups/create"),t(s)])]),j]),H,D,W,e("p",null,[a("地址："),e("a",B,[a("https://us-east-2.console.aws.amazon.com/ec2/home?region=us-east-2#KeyPairs:"),t(s)]),a(" - EC2 管理控制台。")]),M,e("p",null,[a("地址："),e("a",V,[a("https://us-east-2.console.aws.amazon.com/ec2/home?region=us-east-2#SecurityGroups:"),t(s)])]),L,e("p",null,[a("地址："),e("a",R,[a("https://us-east-2.console.aws.amazon.com/ec2/home?region=us-east-2#Instances:"),t(s)])]),Y,e("table",null,[U,e("tbody",null,[q,e("tr",null,[e("td",null,[e("a",J,[F,t(s)])]),Q,X,Z])])]),$,e("ul",null,[e("li",null,[a("开源项目："),e("a",ee,[a("https://github.com/Chanzhaoyu/chatgpt-web"),t(s)]),a(" - 点个 Star 支持作者")]),e("li",null,[a("开源代理："),e("a",ae,[a("https://github.com/geekr-dev/openai-proxy"),t(s)]),a(" - 点个 Star 支持作者")])]),se,e("ul",null,[e("li",null,[a("地址："),e("a",te,[a("https://github.com/fuzhengwei/chatbot-api"),t(s)])]),e("li",null,[a("视频："),e("a",ne,[a("https://bugstack.cn/md/project/chatbot-api/chatbot-api.html"),t(s)])]),oe]),re])}const de=o(p,[["render",ce],["__file","2023-03-25-mianfeibushubushuChatGPT.html.vue"]]);export{de as default};
