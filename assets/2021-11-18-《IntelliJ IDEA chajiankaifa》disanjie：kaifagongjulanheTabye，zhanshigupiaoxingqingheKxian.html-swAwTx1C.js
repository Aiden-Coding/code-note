import{_ as p,r as c,o,c as l,a as n,b as s,d as t,e}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"第5节-开发工具栏和tab页-展示股票行情和k线",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#第5节-开发工具栏和tab页-展示股票行情和k线","aria-hidden":"true"},"#"),s(" 第5节：开发工具栏和Tab页，展示股票行情和K线")],-1),k=n("br",null,null,-1),d={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},r=n("br",null,null,-1),v={href:"https://mp.weixin.qq.com/s/V-32cMb3WLDUJA_yfQc4fw",target:"_blank",rel:"noopener noreferrer"},m=e(`<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>没招了，不写点刺激的，你总是不好好看！</code></p><p>以前，我不懂。写的技术就是技术内容，写的场景就是场景分析，但从读者的阅读我发现，大家更喜欢的是技术与场景结合，尤其是用技术结合那些羞羞答答的场景，虽然嘴上都不说。</p><p>本章节主要是想给大家介绍关于在 IDEA 插件开发中如何使用工具栏和Tab页，来填充在 IDEA 中底部的窗体，就像 IDEA 中的控制台一样。但就这么写好像是够呛能有人看，因为大家只从技术点来看，很难发现这里面有什么应用场景，即使看了好像也不知道这技术能干啥。</p><p><strong>那咋办</strong>，整点<code>刺激</code>的吧。大家不是喜欢<code>赔钱炒股</code>吗，那就把<code>股票行情</code>和<code>K线展示</code>结合到IDEA插件开发中。可以让学习插件的伙伴，都能在写代码疲惫的时候还能看一眼股票，也许在关键的时候还能提醒你赶紧抛出去！</p><h2 id="二、需求目的" tabindex="-1"><a class="header-anchor" href="#二、需求目的" aria-hidden="true">#</a> 二、需求目的</h2><p>安全起见，需要在 IDEA 中以一个比较隐秘的角落，开发股票插件，让炒股的同学可以在紧张编码CRUD之余，不要忘记自己关注的股票购买和抛售。</p><p>那么为了解决这个问题，我们需要几个技术点，包括：股票数据接口、查询对象封装、IDEA 底部窗体和工具栏开发、定时任务扫描、Swing UI、股票代码配置和保存、窗体按钮事件监听等。</p><p>接下来我们就结合这些技术点，来解决实际的场景问题，看看如何在 IDEA 中开发一个股票插件。</p><h2 id="三、案例开发" tabindex="-1"><a class="header-anchor" href="#三、案例开发" aria-hidden="true">#</a> 三、案例开发</h2><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>guide<span class="token operator">-</span>idea<span class="token operator">-</span>plugin<span class="token operator">-</span>tab
├── <span class="token punctuation">.</span>gradle
└── src
    ├── main
    │   └── java
    │   	└── cn<span class="token punctuation">.</span>bugstack<span class="token punctuation">.</span>guide<span class="token punctuation">.</span>idea<span class="token punctuation">.</span>plugin 
    │       	├── domain
    │       	│	├── model
    │       	│	│	├── aggregates
    │       	│	│	│	└── <span class="token class-name">StockResult</span><span class="token punctuation">.</span>java    
    │       	│	│	└── vo  
    │       	│	│	 	├── <span class="token class-name">Data</span><span class="token punctuation">.</span>java 
    │       	│	│	 	├── <span class="token class-name">GoPicture</span><span class="token punctuation">.</span>java     
    │       	│	│	 	└── <span class="token class-name">Stock</span><span class="token punctuation">.</span>java       
    │       	│	└── service   
    │       	│	 	├── impl     
    │       	│	 	│	└── <span class="token class-name">StockImpl</span><span class="token punctuation">.</span>java    
    │       	│	 	└── <span class="token class-name">IStock</span>      
    │       	├── factory
    │       	│	└── <span class="token class-name">TabFactory</span><span class="token punctuation">.</span>java  
    │       	├── infrastructure
    │       	│	├── <span class="token class-name">DataSetting</span><span class="token punctuation">.</span>java       
    │       	│	└── <span class="token class-name">DataState</span><span class="token punctuation">.</span>java     
    │       	├── <span class="token keyword">module</span>
    │       	│	├── <span class="token class-name">RefreshBar</span><span class="token punctuation">.</span>java   
    │       	│	├── <span class="token class-name">SettingBar</span><span class="token punctuation">.</span>java    
    │       	│	└── <span class="token class-name">ViewBars</span><span class="token punctuation">.</span>java         
    │       	└── ui
    │       	│	├── <span class="token class-name">ConsoleUI</span><span class="token punctuation">.</span>java 
    │       	│	├── <span class="token class-name">ConsoleUI</span><span class="token punctuation">.</span>form
    │       	│	├── <span class="token class-name">GidConfig</span><span class="token punctuation">.</span>java  
    │       	│	└── <span class="token class-name">GidConfig</span><span class="token punctuation">.</span>form
    │       	└── <span class="token class-name">Config</span>    
    ├── resources
    │   └── <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span>
    │       └── plugin<span class="token punctuation">.</span>xml 
    ├── build<span class="token punctuation">.</span>gradle  
    └── gradle<span class="token punctuation">.</span>properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>源码获取</strong>：#公众号：<code>bugstack虫洞栈</code> 回复：<code>idea</code> 即可下载全部 IDEA 插件开发源码</p><p>在此 IDEA 插件工程中，主要分为5块区域：</p><ul><li>domain：领域层，提供查询股票接口的数据服务，如果你是做的一些其他工具型功能，也可以把业务类的内容放到 domain 中实现。</li><li>factory：工厂层，这里主要提供的是一个工具窗体生成的入口对象，来创建出我们自己添加的窗体内容。</li><li>infrastructure：基础层，提供了数据存放对象，这个数据对象是一个可以落盘的操作，创建好的类配置到 plugin.xml 中即可。<em>这样我们配置好股票代码后，关机重启 IDEA 也可以把配置读取出来</em></li><li>module：模块，提供用于 UI 窗体使用的一些工具页操作。比如这里的 ViewBars 会在 TabFactory 中实例化，用于展示出你添加的窗体。</li><li>ui：这一部分使用的是 IDEA 中自动拖拽生成的窗体，免去了手写的复杂性，一些简单的页面直接拖拽就可以。<em>这也是一种低代码哦！</em></li></ul><p><strong>接下来</strong>，我们就分别看下每个核心功能点的实现过程，这个过程中你可以提前把代码下载下来，对照着学习会更加容易理解。</p><p><img src="https://bugstack.cn/images/article/assembly/assembly-211118-3-01.png" alt=""></p><ol><li>实现 ToolWindowFactory 开发一个底部的窗体，用于承载所需的内容</li><li>左侧是侧边工具栏，配置自选股、刷新股票指数</li><li>右侧是2个 tab 页，分别用于展示股票数据和K线图，这里的数据则需要通过股票接口来提供</li></ol><h3 id="_2-tab-页窗体" tabindex="-1"><a class="header-anchor" href="#_2-tab-页窗体" aria-hidden="true">#</a> 2. tab 页窗体</h3><p>首先这里我们先使用 IDEA 插件开发中，Swing UI 功能，拖拽出2个简单的窗体。有了这样的一个基本结构大家的脑子里应该就可以<code>有画面</code>了。</p><h4 id="_2-1-自选股配置窗体" tabindex="-1"><a class="header-anchor" href="#_2-1-自选股配置窗体" aria-hidden="true">#</a> 2.1 自选股配置窗体</h4><p><img src="https://bugstack.cn/images/article/assembly/assembly-211118-3-04.png" alt=""></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GidConfig</span> <span class="token keyword">implements</span> <span class="token class-name">Configurable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">JPanel</span> mainPanel<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JPanel</span> settingPanel<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JLabel</span> gidLabel<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JTextField</span> gidTextField<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">ConsoleUI</span> consoleUI<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">GidConfig</span><span class="token punctuation">(</span><span class="token class-name">ConsoleUI</span> consoleUI<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>consoleUI <span class="token operator">=</span> consoleUI<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">JTextField</span> <span class="token function">getGidTextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> gidTextField<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ConfigurationException</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> gidList <span class="token operator">=</span> <span class="token class-name">DataSetting</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getGids</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gidList<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> gids <span class="token operator">=</span> gidTextField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> gid <span class="token operator">:</span> gids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            gidList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>gid<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 刷新数据</span>
        consoleUI<span class="token punctuation">.</span><span class="token function">addRows</span><span class="token punctuation">(</span>gidList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 GidConfig 对应的 java 类中，可以对一些窗体中出现的属性进行获取。当用户点击这个窗体的确认按钮后，我们可以在 apply 中拿到用户配置的股票代码，并对其进行读取和设置股票数据。</li></ul><h4 id="_2-2-股票展示窗体" tabindex="-1"><a class="header-anchor" href="#_2-2-股票展示窗体" aria-hidden="true">#</a> 2.2 股票展示窗体</h4><p><img src="https://bugstack.cn/images/article/assembly/assembly-211118-3-05.png" alt=""></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsoleUI</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">JTabbedPane</span> tabbedPane1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JPanel</span> one<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JPanel</span> two<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JLabel</span> picMin<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JTable</span> table<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">JLabel</span> picDay<span class="token punctuation">;</span>

    <span class="token comment">// 查询数据服务</span>
    <span class="token keyword">private</span> <span class="token class-name">IStock</span> stock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StockImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">DefaultTableModel</span> defaultTableModel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultTableModel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;股票&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;代码&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;最新&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;涨跌&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;涨幅&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ConsoleUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 初始数据</span>
        table<span class="token punctuation">.</span><span class="token function">setModel</span><span class="token punctuation">(</span>defaultTableModel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addRows</span><span class="token punctuation">(</span><span class="token class-name">DataSetting</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getGids</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 添加事件</span>
        table<span class="token punctuation">.</span><span class="token function">addMouseListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MouseAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseClicked</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> row <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getSelectedRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Object</span> value <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getValueAt</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">GoPicture</span> goPicture <span class="token operator">=</span> stock<span class="token punctuation">.</span><span class="token function">queryGidGoPicture</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 分钟K线</span>
                    picMin<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">545</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    picMin<span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>goPicture<span class="token punctuation">.</span><span class="token function">getMinurl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// 当日K线</span>
                    picDay<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">545</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    picDay<span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>goPicture<span class="token punctuation">.</span><span class="token function">getDayurl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MalformedURLException</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    m<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">JTabbedPane</span> <span class="token function">getPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> tabbedPane1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addRows</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> gids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 查询</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Data</span><span class="token punctuation">&gt;</span></span> dataList <span class="token operator">=</span> stock<span class="token punctuation">.</span><span class="token function">queryPresetStockData</span><span class="token punctuation">(</span>gids<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 清空</span>
        <span class="token keyword">int</span> rowCount <span class="token operator">=</span> defaultTableModel<span class="token punctuation">.</span><span class="token function">getRowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rowCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            defaultTableModel<span class="token punctuation">.</span><span class="token function">removeRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 添加</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Data</span> data <span class="token operator">:</span> dataList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            defaultTableModel<span class="token punctuation">.</span><span class="token function">addRow</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getGid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getNowPri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getIncrease</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getIncrePer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            table<span class="token punctuation">.</span><span class="token function">setModel</span><span class="token punctuation">(</span>defaultTableModel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>展示股票的窗体对应的 ConsoleUI 类，主要负责数据的渲染、更新和对每条数据的事件操作，当用户点击某一条数据以后，就可以到 <code>K线</code> 页中看到对应的股票指数了。</li></ul><h3 id="_3-股票框体设置" tabindex="-1"><a class="header-anchor" href="#_3-股票框体设置" aria-hidden="true">#</a> 3. 股票框体设置</h3><p>在开发完 UI 窗体后，我们还需要使用一个 SimpleToolWindowPanel 的继承实现类，承载工具栏和页面的设置。</p><h4 id="_3-1-设置-工具栏" tabindex="-1"><a class="header-anchor" href="#_3-1-设置-工具栏" aria-hidden="true">#</a> 3.1 设置-工具栏</h4><p><strong>cn.bugstack.guide.idea.plugin.module.SettingBar</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SettingBar</span> <span class="token keyword">extends</span> <span class="token class-name">DumbAwareAction</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ViewBars</span> panel<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">SettingBar</span><span class="token punctuation">(</span><span class="token class-name">ViewBars</span> panel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">&quot;配置股票&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Click to setting&quot;</span><span class="token punctuation">,</span> <span class="token class-name">IconLoader</span><span class="token punctuation">.</span><span class="token function">getIcon</span><span class="token punctuation">(</span><span class="token string">&quot;/icons/config.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>panel <span class="token operator">=</span> panel<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">AnActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ShowSettingsUtil</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">editConfigurable</span><span class="token punctuation">(</span>panel<span class="token punctuation">.</span><span class="token function">getProject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GidConfig</span><span class="token punctuation">(</span>panel<span class="token punctuation">.</span><span class="token function">getConsoleUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置工具栏位于自定义插件面板中最左侧的位置，用于设置自选股票代码。</li><li>通过在方法 <code>actionPerformed</code> 中使用 <code>ShowSettingsUtil</code> 工具类启动 UI 窗体。</li></ul><h4 id="_3-2-刷新-工具栏" tabindex="-1"><a class="header-anchor" href="#_3-2-刷新-工具栏" aria-hidden="true">#</a> 3.2 刷新-工具栏</h4><p><strong>cn.bugstack.guide.idea.plugin.module.RefreshBar</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RefreshBar</span> <span class="token keyword">extends</span> <span class="token class-name">DumbAwareAction</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ViewBars</span> panel<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">RefreshBar</span><span class="token punctuation">(</span><span class="token class-name">ViewBars</span> panel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">&quot;刷新指数&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Click to refresh&quot;</span><span class="token punctuation">,</span> <span class="token class-name">IconLoader</span><span class="token punctuation">.</span><span class="token function">getIcon</span><span class="token punctuation">(</span><span class="token string">&quot;/icons/refresh.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>panel <span class="token operator">=</span> panel<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">AnActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        panel<span class="token punctuation">.</span><span class="token function">getConsoleUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addRows</span><span class="token punctuation">(</span><span class="token class-name">DataSetting</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getGids</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在刷新工具栏中主要是用于手动触发刷新股票最新结果，之所以使用手动刷新主要是这个接口有查询次数限制，如果是定时任务一直跑，一会100次的查询限制就用完了。<em>不过我们这里也是为了体现专栏内对技术的使用，增加多个设置按钮，就更容易知道如何添加了</em></li></ul><h4 id="_3-3-窗体填充面板" tabindex="-1"><a class="header-anchor" href="#_3-3-窗体填充面板" aria-hidden="true">#</a> 3.3 窗体填充面板</h4><p><strong>cn.bugstack.guide.idea.plugin.module.ViewBars</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ViewBars</span> <span class="token keyword">extends</span> <span class="token class-name">SimpleToolWindowPanel</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Project</span> project<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ConsoleUI</span> consoleUI<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ViewBars</span><span class="token punctuation">(</span><span class="token class-name">Project</span> project<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>project <span class="token operator">=</span> project<span class="token punctuation">;</span>
        consoleUI <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConsoleUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 设置窗体侧边栏按钮</span>
        <span class="token class-name">DefaultActionGroup</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultActionGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SettingBar</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RefreshBar</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ActionToolbar</span> toolbar <span class="token operator">=</span> <span class="token class-name">ActionManager</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createActionToolbar</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> group<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        toolbar<span class="token punctuation">.</span><span class="token function">setTargetComponent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setToolbar</span><span class="token punctuation">(</span>toolbar<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 添加</span>
        <span class="token class-name">JBSplitter</span> splitter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JBSplitter</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        splitter<span class="token punctuation">.</span><span class="token function">setSplitterProportionKey</span><span class="token punctuation">(</span><span class="token string">&quot;main.splitter.key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        splitter<span class="token punctuation">.</span><span class="token function">setFirstComponent</span><span class="token punctuation">(</span>consoleUI<span class="token punctuation">.</span><span class="token function">getPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        splitter<span class="token punctuation">.</span><span class="token function">setProportion</span><span class="token punctuation">(</span><span class="token number">0.3f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContent</span><span class="token punctuation">(</span>splitter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Project</span> <span class="token function">getProject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> project<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ConsoleUI</span> <span class="token function">getConsoleUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> consoleUI<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在填充面板中主要是在我们自定义的插件中，在左侧添加工具栏，其余位置添加股票展示面板。</li><li><code>DefaultActionGroup</code> 中可以以此添加设置和刷新按钮，并最终填充到 <code>ActionToolbar</code> 里去，这样就设置完成了。</li><li><code>JBSplitter</code> 是一个分割线，右侧填充上我们的股票指数展示面板 <code>splitter.setFirstComponent(consoleUI.getPanel())</code></li></ul><h3 id="_4-填充主面板到idea工具栏" tabindex="-1"><a class="header-anchor" href="#_4-填充主面板到idea工具栏" aria-hidden="true">#</a> 4. 填充主面板到IDEA工具栏</h3><h4 id="_4-1-窗体工厂" tabindex="-1"><a class="header-anchor" href="#_4-1-窗体工厂" aria-hidden="true">#</a> 4.1 窗体工厂</h4><p><strong>cn.bugstack.guide.idea.plugin.factory.TabFactory</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TabFactory</span> <span class="token keyword">implements</span> <span class="token class-name">ToolWindowFactory</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createToolWindowContent</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Project</span> project<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">ToolWindow</span> toolWindow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 窗体</span>
        <span class="token class-name">ViewBars</span> viewPanel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewBars</span><span class="token punctuation">(</span>project<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取内容工厂的实例</span>
        <span class="token class-name">ContentFactory</span> contentFactory <span class="token operator">=</span> <span class="token class-name">ContentFactory</span><span class="token punctuation">.</span><span class="token constant">SERVICE</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取 ToolWindow 显示的内容</span>
        <span class="token class-name">Content</span> content <span class="token operator">=</span> contentFactory<span class="token punctuation">.</span><span class="token function">createContent</span><span class="token punctuation">(</span>viewPanel<span class="token punctuation">,</span> <span class="token string">&quot;股票&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置 ToolWindow 显示的内容</span>
        toolWindow<span class="token punctuation">.</span><span class="token function">getContentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addContent</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 定时任务，自动刷新股票</span>
        <span class="token comment">/* 因每日查询次数限制，这里就不开定时任务了，用户可以自行申请 https://dashboard.juhe.cn/home
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                viewPanel.getConsoleUI().addRows(DataSetting.getInstance().getGids());
            }
        }, 3000, 2000);*/</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 TabFactory 中主要包括两部分，一个是把 ViewBars 填充到整个 toolWindow 中，另外一个是我们目前已经注释掉的刷新股票数据的定时任务。</li><li>这里由于股票接口查询次数限制，所以就把定时任务注释掉了，否则一会就把可用次数跑没了。</li></ul><h4 id="_4-2-配置窗体" tabindex="-1"><a class="header-anchor" href="#_4-2-配置窗体" aria-hidden="true">#</a> 4.2 配置窗体</h4><p><strong>plugin.xml</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>idea-plugin</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extensions</span> <span class="token attr-name">defaultExtensionNs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.intellij<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Add your extensions here --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>toolWindow</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>XUtil<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name">canCloseContents</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name">anchor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bottom<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name">factoryClass</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cn.bugstack.guide.idea.plugin.factory.TabFactory<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/icons/stock.png<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">/&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extensions</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>idea-plugin</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里我们把窗体配置到整个 IDEA 界面的最下方 <code>anchor=&quot;bottom&quot;</code> <em>这个位置既方便又最安全</em></li></ul><h3 id="_5-数据持久化配置" tabindex="-1"><a class="header-anchor" href="#_5-数据持久化配置" aria-hidden="true">#</a> 5. 数据持久化配置</h3><ul><li>当我们使用 IDEA 进行配置一些基本参数后，例如：Maven、Gradle、Git、签名信息等，在日常的关闭和重启 IDEA 时，这些配置信息是会保存下来的，而不会说关闭就没了。</li><li>那么我们开发的这款插件需要做的一些自选股票代码配置，也要进行保存，否则不能每次都在 IDEA 启动时重新设置。所以这里我们需要用到 <code>plugin.xml</code> 中 <code>applicationService</code> 配置上实现了 <code>PersistentStateComponent</code> 的数据设置存放类。</li></ul><h4 id="_5-1-对象数据" tabindex="-1"><a class="header-anchor" href="#_5-1-对象数据" aria-hidden="true">#</a> 5.1 对象数据</h4><p><strong>cn.bugstack.guide.idea.plugin.infrastructure.DataState</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataState</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> gids <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getGids</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> gids<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setGids</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> gids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>gids <span class="token operator">=</span> gids<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这个是数据对象类，你可以在这里设置你需要的属性存放，就像 gids 一样，用于存放用户配置的股票代码集合。</li></ul><h4 id="_5-2-持久数据" tabindex="-1"><a class="header-anchor" href="#_5-2-持久数据" aria-hidden="true">#</a> 5.2 持久数据</h4><p><strong>cn.bugstack.guide.idea.plugin.infrastructure.DataSetting</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@State</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;DataSetting&quot;</span><span class="token punctuation">,</span>storages <span class="token operator">=</span> <span class="token annotation punctuation">@Storage</span><span class="token punctuation">(</span><span class="token string">&quot;plugin.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataSetting</span> <span class="token keyword">implements</span> <span class="token class-name">PersistentStateComponent</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataState</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">DataState</span> state <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DataSetting</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ServiceManager</span><span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span><span class="token class-name">DataSetting</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">DataState</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">loadState</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">DataState</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getGids</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> state<span class="token punctuation">.</span><span class="token function">getGids</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>DataSetting 类需要使用到 IDEA 插件开发的提供的注解 @State 配置持久对象</li><li>此外还需要提供一个 getInstance 方法来获取数据对象实例，那么在我们实际使用的时候就可以拿到我们配置的对象了并进行设置和读取数据。</li></ul><h4 id="_5-3-plugin-xml-配置" tabindex="-1"><a class="header-anchor" href="#_5-3-plugin-xml-配置" aria-hidden="true">#</a> 5.3 plugin.xml 配置</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extensions</span> <span class="token attr-name">defaultExtensionNs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.intellij<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Add your extensions here --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>applicationService</span> <span class="token attr-name">serviceImplementation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cn.bugstack.guide.idea.plugin.infrastructure.DataSetting<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extensions</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在创建好数据设置类以后，则需要使用 applicationService 标签把你的类配置到 plugin.xml 中 extensions 里面。</li></ul><h3 id="_6-股票接口" tabindex="-1"><a class="header-anchor" href="#_6-股票接口" aria-hidden="true">#</a> 6. 股票接口</h3><h4 id="_6-1-技术调研" tabindex="-1"><a class="header-anchor" href="#_6-1-技术调研" aria-hidden="true">#</a> 6.1 技术调研</h4>`,67),b=n("li",null,[n("p",null,[s("无论什么功能开发，在开始之前都需要把这些"),n("code",null,"零碎的事情"),s("处理完，才能进行代码开发，这个过程也叫做技术调研到设计和评审。就像现在我们需要进行股票信息的查询，那么就需要找到一个可以提供数据查询的接口，看看这个接口如何申请使用，以及返回的对象都有哪些字段，是否符合我们的预期。")])],-1),g=n("li",null,[n("p",null,[s("这里小傅哥找到了一个聚合数据的接口，不过只能免费"),n("code",null,"100次/天"),s("调用，如果你有更好的可以更换下。")]),n("p",null,[n("img",{src:"https://bugstack.cn/images/article/assembly/assembly-211118-3-02.png",alt:""})])],-1),h={href:"http://web.juhe.cn:8080/finance/stock/hs?gid=sz000651&key=%E8%87%AA%E5%B7%B1%E7%94%B3%E8%AF%B7",target:"_blank",rel:"noopener noreferrer"},w=n("li",null,[n("p",null,"数据："),n("p",null,[n("img",{src:"https://bugstack.cn/images/article/assembly/assembly-211118-3-03.png",alt:""})])],-1),f=e(`<h4 id="_6-2-服务封装" tabindex="-1"><a class="header-anchor" href="#_6-2-服务封装" aria-hidden="true">#</a> 6.2 服务封装</h4><p>有了股票的查询接口，接下来就可以对数据做一个查询和对象转换了。</p><p><strong>cn.bugstack.guide.idea.plugin.domain.service.impl.StockImpl</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StockImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IStock</span> <span class="token punctuation">{</span>

    <span class="token comment">// 自行申请，股票API，替换key即可【一天可免费调用100次】：https://dashboard.juhe.cn/home/</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token string">&quot;4bc57728***********f0595&quot;</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Data</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryPresetStockData</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> gids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Data</span><span class="token punctuation">&gt;</span></span> dataList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> gid <span class="token operator">:</span> gids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">StockResult</span> stockResult <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span><span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://web.juhe.cn:8080/finance/stock/hs?gid=&quot;</span> <span class="token operator">+</span> gid <span class="token operator">+</span> <span class="token string">&quot;&amp;key=&quot;</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StockResult</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Stock</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stocks <span class="token operator">=</span> stockResult<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Stock</span> stock <span class="token operator">:</span> stocks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dataList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stock<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> dataList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里我们在 domain 领域层中定义数据 vo 对象，以及提供股票查询服务的封装。这样调用方就可以直接使用这份数据了，如果你是其他厂商提供的股票查询接口，也可以进行封装和更换，做一个接口适配层。</li></ul><h2 id="四、测试验证" tabindex="-1"><a class="header-anchor" href="#四、测试验证" aria-hidden="true">#</a> 四、测试验证</h2><p><img src="https://bugstack.cn/images/article/assembly/assembly-211118-3-06.png" alt=""></p><ul><li>如果你下载工程后没有 Plugin 和一个绿色箭头，那么可以按照图自己配置 <code>:runIde</code> 这样就可以运行了。</li></ul><p><strong>运行效果</strong> - 激动人心的时刻到了，再也不用担心写代码影响看股票了哦</p><h3 id="_1-配置股票" tabindex="-1"><a class="header-anchor" href="#_1-配置股票" aria-hidden="true">#</a> 1. 配置股票</h3><p><img src="https://bugstack.cn/images/article/assembly/assembly-211118-3-07.png" alt=""></p><ul><li>首先你需要在这里配置你关注的股票代码，我配置了3个我看好的。</li></ul><h3 id="_2-自选股指数" tabindex="-1"><a class="header-anchor" href="#_2-自选股指数" aria-hidden="true">#</a> 2. 自选股指数</h3><p><img src="https://bugstack.cn/images/article/assembly/assembly-211118-3-08.png" alt=""></p><ul><li>配置好以后你就可以看到自己的自选股指数了，选中一条以后，在点击K线。</li><li>当你需要看最新数据的时候，可以点左侧的刷新按钮。</li></ul><h3 id="_3-k线" tabindex="-1"><a class="header-anchor" href="#_3-k线" aria-hidden="true">#</a> 3. K线</h3><p><img src="https://bugstack.cn/images/article/assembly/assembly-211118-3-09.png" alt=""></p><ul><li>现在这个就是对应的 K线，是不是还挺香的。目前是加了最近K线和日K线，你还可以扩展其他维度的图。</li></ul><h2 id="五、总结" tabindex="-1"><a class="header-anchor" href="#五、总结" aria-hidden="true">#</a> 五、总结</h2><ul><li>本章节我们使用到了在 IDEA 窗体中添加稍微复杂一些的页面结构，有侧边栏、有Tab页，并在需要在这些页面体中进行交互和通信。此外还是用到了数据的存储设置，这个在很多时候开发IDEA插件里都会用到。</li><li>像是这样的技术实践不只是可以用于展示股票数据，你还可以结合自己所需扩展属于你实际场景中需要的内容，比如开发一个数据集中查询插件，可以查询数据库、ES、Redis等，也可以是所有的工具类集合页，这些内容会更有技术价值。</li><li>当你自己开始主动的向你学习到的一些源码、框架、组件、项目等中添加自己想要的功能时，就是你真的开始学习了，否则一个内容看过没多久也就忘记了。</li></ul>`,20);function y(_,I){const a=c("ExternalLinkIcon");return o(),l("div",null,[u,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",d,[s("https://bugstack.cn"),t(a)]),r,s("原文："),n("a",v,[s("https://mp.weixin.qq.com/s/V-32cMb3WLDUJA_yfQc4fw"),t(a)])]),m,n("ul",null,[b,g,n("li",null,[n("p",null,[s("接口："),n("a",h,[s("http://web.juhe.cn:8080/finance/stock/hs?gid=sz000651&key=自己申请"),t(a)]),s(" - 这里的 key 需要自己申请")])]),w]),f])}const S=p(i,[["render",y],["__file","2021-11-18-《IntelliJ IDEA chajiankaifa》disanjie：kaifagongjulanheTabye，zhanshigupiaoxingqingheKxian.html.vue"]]);export{S as default};
