import{_ as c,r,o as l,c as i,a as e,b as t,d as n,e as s}from"./app-3RcBQnkC.js";const o={},h=e("h1",{id:"《chatgpt-微服务应用体系构建》-chatgpt-web-第8节-流式接口对接",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#《chatgpt-微服务应用体系构建》-chatgpt-web-第8节-流式接口对接","aria-hidden":"true"},"#"),t(" 《ChatGPT 微服务应用体系构建》 - chatgpt-web 第8节：流式接口对接")],-1),d=e("br",null,null,-1),u={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},p=e("blockquote",null,[e("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),_=e("li",null,[e("strong",null,"本章难度"),t("：★★★☆☆")],-1),g=e("li",null,[e("strong",null,"本章重点"),t("：跨域处理，流式应答接口 React 对接和数据渐显处理。这里会用到 fetch 调用接口，ReadableStream 处理流式数据。")],-1),b=e("strong",null,"课程视频",-1),f={href:"https://t.zsxq.com/10tgT0KVe",target:"_blank",rel:"noopener noreferrer"},m=s('<h2 id="一、本章诉求" tabindex="-1"><a class="header-anchor" href="#一、本章诉求" aria-hidden="true">#</a> 一、本章诉求</h2><p>在 ChatGPT-API 工程模块下，我们的流式异步响应接口已经开发并测试完成，那么到 ChatGPT-WEB 这里，我们就可以对接上接口，让前端可以以打字机的效果展示出我们与 ChatGPT 的对话内容了。</p><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-web-08-01.png?raw=true" width="650px"></div><ul><li>首先，需要跨域对接后端接口，将发送时的请求信息传递给后端。</li><li>之后，接收到后端的应答结果，在依次填充到我们的消息记录里。</li></ul><h2 id="二、目标效果" tabindex="-1"><a class="header-anchor" href="#二、目标效果" aria-hidden="true">#</a> 二、目标效果</h2><p>本章节所体现的核心内容则为 react fetch 接口的使用和 ReadableStream 流式填充数据到展示对话框中，直至最终如下效果；</p><div align="center"><img src="https://bugstack.cn/images/article/project/chatgpt/chatgpt-web-08-02.png?raw=true" width="850px"></div><ul><li>那么小傅哥接下来就带着大家一起实现下。看看跨域接口怎么对接、fetch 怎么使用、ReadableStream 流式数据怎么填充。</li></ul>',8);function k(x,w){const a=r("ExternalLinkIcon");return l(),i("div",null,[h,e("p",null,[t("作者：小傅哥 "),d,t("博客："),e("a",u,[t("https://bugstack.cn"),n(a)])]),p,e("ul",null,[_,g,e("li",null,[b,t("："),e("a",f,[t("https://t.zsxq.com/10tgT0KVe"),n(a)])])]),m])}const v=c(o,[["render",k],["__file","di8jie：liushijiekouduijie.html.vue"]]);export{v as default};
