import{_ as t,r as p,o as e,c,a as n,b as s,d as o,e as u}from"./app-3RcBQnkC.js";const l={},i=n("h1",{id:"netty案例-netty4-1中级拓展篇七《netty请求响应同步通信》",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#netty案例-netty4-1中级拓展篇七《netty请求响应同步通信》","aria-hidden":"true"},"#"),s(" netty案例，netty4.1中级拓展篇七《Netty请求响应同步通信》")],-1),k=n("br",null,null,-1),r={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=u(`<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！😄</p></blockquote><h2 id="前言介绍" tabindex="-1"><a class="header-anchor" href="#前言介绍" aria-hidden="true">#</a> 前言介绍</h2><p>在我们实现开发RPC框架的时候，需要选择socket的通信方式。而我们知道一般情况下socket通信类似与qq聊天，发过去消息，什么时候回复都可以。但是我们RPC框架通信，从感觉上类似http调用，需要在一定时间内返回，否则就会发生超时断开。这里我们选择netty作为我们的socket框架，采用future方式进行通信。</p><blockquote><p>Dubbo：国内最早开源的 RPC 框架，由阿里巴巴公司开发并于 2011 年末对外开源，仅支持 Java 语言。 Motan：微博内部使用的 RPC 框架，于 2016 年对外开源，仅支持 Java 语言。 Tars：腾讯内部使用的 RPC 框架，于 2017 年对外开源，仅支持 C++ 语言。 Spring Cloud：国外 Pivotal 公司 2014 年对外开源的 RPC 框架，仅支持 Java 语言 gRPC：Google 于 2015 年对外开源的跨语言 RPC 框架，支持多种语言。 Thrift：最初是由 Facebook 开发的内部系统跨语言的 RPC 框架，2007 年贡献给了 Apache 基金，成为 Apache 开源项目之一，支持多种语言。 hprose：一个MIT开源许可的新型轻量级跨语言跨平台的面向对象的高性能远程动态通讯中间件。它支持众多语言:nodeJs, C++, .NET, Java, Delphi, Objective-C, ActionScript, JavaScript, ASP, PHP, Python, Ruby, Perl, Golang 。</p></blockquote><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h2><ol><li>jdk1.8【jdk1.7以下只能部分支持netty】</li><li>Netty4.1.36.Final【netty3.x 4.x 5每次的变化较大，接口类名也随着变化】</li></ol><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>rpc<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">07</span>
└── src
    └── main
    │    └── java
    │        └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>netty
    │             ├── client
    │             │   ├── <span class="token class-name">ClientSocket</span><span class="token punctuation">.</span>java
    │             │   └── <span class="token class-name">MyClientHandler</span><span class="token punctuation">.</span>java  
    │             ├── codec
    │             │   ├── <span class="token class-name">RpcDecoder</span><span class="token punctuation">.</span>java
    │             │   └── <span class="token class-name">RpcEncoder</span><span class="token punctuation">.</span>java  
    │             ├── future
    │             │   ├── <span class="token class-name">SyncWrite</span><span class="token punctuation">.</span>java    
    │             │   ├── <span class="token class-name">SyncWriteFuture</span><span class="token punctuation">.</span>java  
    │             │   ├── <span class="token class-name">SyncWriteMap</span><span class="token punctuation">.</span>java 
    │             │   └── <span class="token class-name">WriteFuture</span><span class="token punctuation">.</span>java  
    │             ├── msg
    │             │   ├── <span class="token class-name">Request</span><span class="token punctuation">.</span>java
    │             │   └── <span class="token class-name">Response</span><span class="token punctuation">.</span>java 
    │             ├── server
    │             │   ├── <span class="token class-name">MyServerHandler</span><span class="token punctuation">.</span>java
    │             │   └── <span class="token class-name">ServerSocket</span><span class="token punctuation">.</span>java     
    │             └── util
    │                 └── <span class="token class-name">SerializationUtil</span><span class="token punctuation">.</span>java    
    └── test
         └── java
             └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>test
                 ├── <span class="token class-name">StartClient</span><span class="token punctuation">.</span>java
                 └── <span class="token class-name">StartServer</span><span class="token punctuation">.</span>java    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>** 展示部分重要代码块，完整代码可以关注公众号获取；bugstack虫洞栈 **</p><blockquote><p>MyClientHandler.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 虫洞栈：https://bugstack.cn
 * 公众号：bugstack虫洞栈  ｛关注获取学习源码｝
 * 虫洞群：①群5398358 ②群5360692
 * Create by fuzhengwei on 2019
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyClientHandler</span> <span class="token keyword">extends</span> <span class="token class-name">ChannelInboundHandlerAdapter</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">channelRead</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Response</span> msg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Response</span><span class="token punctuation">)</span> obj<span class="token punctuation">;</span>
        <span class="token class-name">String</span> requestId <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getRequestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SyncWriteFuture</span> future <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SyncWriteFuture</span><span class="token punctuation">)</span> <span class="token class-name">SyncWriteMap</span><span class="token punctuation">.</span>syncKey<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>requestId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>future <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            future<span class="token punctuation">.</span><span class="token function">setResponse</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exceptionCaught</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> cause<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cause<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>SyncWrite.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 虫洞栈：https://bugstack.cn
 * 公众号：bugstack虫洞栈  ｛关注获取学习源码｝
 * 虫洞群：①群5398358 ②群5360692
 * Create by fuzhengwei on 2019
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SyncWrite</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">Response</span> <span class="token function">writeAndSync</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Request</span> request<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">long</span> timeout<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>channel <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;channel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;timeout &lt;= 0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">String</span> requestId <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setRequestId</span><span class="token punctuation">(</span>requestId<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">WriteFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Response</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SyncWriteFuture</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getRequestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SyncWriteMap</span><span class="token punctuation">.</span>syncKey<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getRequestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> future<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Response</span> response <span class="token operator">=</span> <span class="token function">doWriteAndSync</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> request<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> future<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">SyncWriteMap</span><span class="token punctuation">.</span>syncKey<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getRequestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> response<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Response</span> <span class="token function">doWriteAndSync</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Request</span> request<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">long</span> timeout<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">WriteFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Response</span><span class="token punctuation">&gt;</span></span> writeFuture<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        channel<span class="token punctuation">.</span><span class="token function">writeAndFlush</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChannelFutureListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operationComplete</span><span class="token punctuation">(</span><span class="token class-name">ChannelFuture</span> future<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                writeFuture<span class="token punctuation">.</span><span class="token function">setWriteResult</span><span class="token punctuation">(</span>future<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                writeFuture<span class="token punctuation">.</span><span class="token function">setCause</span><span class="token punctuation">(</span>future<span class="token punctuation">.</span><span class="token function">cause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//失败移除</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>writeFuture<span class="token punctuation">.</span><span class="token function">isWriteSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">SyncWriteMap</span><span class="token punctuation">.</span>syncKey<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>writeFuture<span class="token punctuation">.</span><span class="token function">requestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Response</span> response <span class="token operator">=</span> writeFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>timeout<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>writeFuture<span class="token punctuation">.</span><span class="token function">isTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TimeoutException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// write exception</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span>writeFuture<span class="token punctuation">.</span><span class="token function">cause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> response<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>MyServerHandler.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 虫洞栈：https://bugstack.cn
 * 公众号：bugstack虫洞栈  ｛关注获取学习源码｝
 * 虫洞群：①群5398358 ②群5360692
 * Create by fuzhengwei on 2019
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServerHandler</span> <span class="token keyword">extends</span> <span class="token class-name">ChannelInboundHandlerAdapter</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">channelRead</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">Object</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Request</span> msg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Request</span><span class="token punctuation">)</span> obj<span class="token punctuation">;</span>
        <span class="token comment">//反馈</span>
        <span class="token class-name">Response</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setRequestId</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getRequestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParam</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span><span class="token function">writeAndFlush</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//释放</span>
        <span class="token class-name">ReferenceCountUtil</span><span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">channelReadComplete</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>StartClient.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 虫洞栈：https://bugstack.cn
 * 公众号：bugstack虫洞栈  ｛关注获取学习源码｝
 * 虫洞群：①群5398358 ②群5360692
 * Create by fuzhengwei on 2019
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StartClient</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ChannelFuture</span> future<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ClientSocket</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClientSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">//获取future，线程有等待处理时间</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> future<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    future <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">getFuture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//构建发送参数</span>
                <span class="token class-name">Request</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                request<span class="token punctuation">.</span><span class="token function">setResult</span><span class="token punctuation">(</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">SyncWrite</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SyncWrite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Response</span> response <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">writeAndSync</span><span class="token punctuation">(</span>future<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;调用结果：&quot;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>StartServer.java</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 虫洞栈：https://bugstack.cn
 * 公众号：bugstack虫洞栈  ｛关注获取学习源码｝
 * 虫洞群：①群5398358 ②群5360692
 * Create by fuzhengwei on 2019
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StartServer</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;itstack-demo-netty server start done. {关注公众号：bugstack虫洞栈，获取源码}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试结果" tabindex="-1"><a class="header-anchor" href="#测试结果" aria-hidden="true">#</a> 测试结果</h2><blockquote><p>启动StartServer</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>netty server start done<span class="token punctuation">.</span> <span class="token punctuation">{</span>关注公众号：bugstack虫洞栈，获取源码<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>启动StartClient</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;188ba00e-3a0d-4094-9475-c7ee93104011&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;bc9d63d4-9d37-406a-9c0f-a68211ac466f&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;cceb510b-8179-46ab-abc6-eb7d5b6c0ac2&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;f65aafd0-07b7-4bdb-be80-a57b4c58ad2d&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;e6700074-380b-441f-ae0d-f71dcd7f84c9&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;25a0a9d5-46d5-4da6-ad3f-1496ca20bb17&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;052dce21-dfb9-42d7-bbcf-46137b9933df&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;4fd968fa-3171-4e4f-838d-4a215a90da00&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;97f6eb6e-8c5d-49f4-beba-2ba7e1ff953f&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;ffc48115-8e62-43a8-b3f7-035390427d37&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;4bafefc9-4beb-49f6-8126-29e0e03a55d1&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;10367786-24fd-4f11-9465-bcd2c87b4027&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;82293ad3-a694-405c-ab03-01624f38b1ad&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;0c163cb8-be5f-4697-931f-61f5bf487bae&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;0f1e7611-4fd0-43b4-86dc-fce09965046e&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;f22ac0dc-974c-4de1-bcdf-1566ca0b2305&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;1907456b-2507-4ddd-8c1e-a86c990e3e72&quot;</span><span class="token punctuation">}</span>
调用结果：<span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token operator">:</span><span class="token string">&quot;查询｛bugstack虫洞栈｝用户信息 请求成功，反馈结果请接受处理｛公众号：bugstack虫洞栈 博客栈：https://bugstack.cn｝。&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;requestId&quot;</span><span class="token operator">:</span><span class="token string">&quot;6a99b1f2-5859-4ed7-9d17-98229c13250f&quot;</span><span class="token punctuation">}</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token operator">-</span><span class="token number">1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://bugstack.cn/assets/images/pic-content/2019/08/netty-2-07-1.png" alt=""></p><p>微信搜索「<strong>bugstack虫洞栈</strong>」公众号，关注后回复「<strong>Netty专题案例</strong>」获取本文源码&amp;更多原创专题案例！</p>`,26);function v(m,b){const a=p("ExternalLinkIcon");return e(),c("div",null,[i,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",r,[s("https://bugstack.cn"),o(a)])]),d])}const q=t(l,[["render",v],["__file","2019-08-22-nettyanli，netty4.1zhongjituozhanpianqi《Nettyqingqiuxiangyingtongbutongxin》.html.vue"]]);export{q as default};
