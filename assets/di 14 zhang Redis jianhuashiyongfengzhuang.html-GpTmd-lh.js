import{_ as s,r as t,o as d,c as i,a as e,b as a,d as o,e as r}from"./app-3RcBQnkC.js";const c={},h=e("h1",{id:"第-14-章-redis-简化使用封装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#第-14-章-redis-简化使用封装","aria-hidden":"true"},"#"),a(" 第 14 章 Redis 简化使用封装")],-1),_=e("br",null,null,-1),p={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},l=r('<blockquote><p>沉淀、分享、成长，让自己和他人都能有所收获！</p></blockquote><h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>为什么我们要去造轮子？</code></p><p>造轮子的核心目的，是为了解决通用共性问题的凝练和复用。</p><p>虽然市面上已经有了大量成熟稳定用于支撑系统建设的轮子，包括服务、框架、组件、工具等，但对于一些较大型的公司来说，这些轮子可能并不一定能很好的支撑起系统需要承载的服务体量，这个时候就需要自建一些轮子。</p><p>那为什么不去找已经建好的轮子呢？因为很多基于个人自建的轮子，首先是不一定符合当前业务场景的需要，另外这些自建的轮子如果拿来用，就需要学习它的源码，而这部分轮子往往并没有很完整的文档，那么使用起来可能会遇到很多风险和坑。那么，基于自身诉求统一标准的自建就非常有必要，同时自建也能更深入的学习相关技术的所有实现过程，也更好的处理组件风险。</p><h2 id="二、需求背景" tabindex="-1"><a class="header-anchor" href="#二、需求背景" aria-hidden="true">#</a> 二、需求背景</h2><p>你用过 Redis 吗？在 Java 中用过 Redis 吗？用过 Redis 的一些框架吗？搞过几个组不同 Redis 框架的升级吗？</p><p>其实 Redis 已经是非常好用的组件了，但与 MyBatis 使用数据库相比，稍微还少了那么一点的封装。MyBatis 的使用只需要定义好接口，不需要写实现类就可以调用数据库进行增删改查操作。</p><p>所以，我们也想开发一款这样的 Redis 组件，把 Redis 服务的使用进行包装简化，同时可以在这个组件中扩展相应的功能。另外这个组件中其实可以包装各类 Redis 链接框架，尤其是在集群扩展时，这样的组件能更好的满足研发对系统中使用 Redis 的升级。</p>',10);function u(f,R){const n=t("ExternalLinkIcon");return d(),i("div",null,[h,e("p",null,[a("作者：小傅哥 "),_,a("博客："),e("a",p,[a("https://bugstack.cn"),o(n)])]),l])}const b=s(c,[["render",u],["__file","di 14 zhang Redis jianhuashiyongfengzhuang.html.vue"]]);export{b as default};
