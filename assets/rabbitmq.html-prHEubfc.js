import{_ as p,r as e,o,c,a as n,b as s,d as t,e as i}from"./app-3RcBQnkC.js";const l={},u=n("h1",{id:"rabbitmq-使用教程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rabbitmq-使用教程","aria-hidden":"true"},"#"),s(" RabbitMQ 使用教程")],-1),r=n("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m={href:"https://bugstack.cn/md/road-map/rocketmq.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.rabbitmq.com/",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"本文涉及的工程：",-1),g={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-rabbitmq",target:"_blank",rel:"noopener noreferrer"},h={href:"https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-rabbitmq/-/blob/master/docs/dev-ops/docker-compose.yml",target:"_blank",rel:"noopener noreferrer"},q=n("h2",{id:"一、环境安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、环境安装","aria-hidden":"true"},"#"),s(" 一、环境安装")],-1),f={href:"https://bugstack.cn/md/road-map/rocketmq.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://bugstack.cn/md/road-map/docker.html",target:"_blank",rel:"noopener noreferrer"},w=n("div",{align:"center"},[n("img",{src:"https://bugstack.cn/images/roadmap/tutorial/roadmap-rabbitmq-01.png?raw=true",width:"750px"})],-1),_=n("div",{align:"center"},[n("img",{src:"https://bugstack.cn/images/roadmap/tutorial/roadmap-rabbitmq-02.png?raw=true",width:"750px"})],-1),x={href:"http://localhost:9000/#!/2/docker/containers",target:"_blank",rel:"noopener noreferrer"},E=n("li",null,"Windows 电脑安装 Docker 需要折腾下",-1),Q=n("li",null,[s("Linux 服务器，需要上传整个 dev-ops 后在云服务器执行脚本安装；"),n("code",null,"docker-compose -f docker-compose.yml up -d")],-1),C=n("h2",{id:"二、配置主题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二、配置主题","aria-hidden":"true"},"#"),s(" 二、配置主题")],-1),R={href:"http://127.0.0.1:15672/#/",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"账密：admin/admin",-1),j=i(`<div align="center"><img src="https://bugstack.cn/images/roadmap/tutorial/roadmap-rabbitmq-03.png?raw=true" width="750px"></div><p>进入到后台以后，先如图配置个主题消息，后面会使用到这个主题发送和监听消息信息。</p><h2 id="三、测试案例" tabindex="-1"><a class="header-anchor" href="#三、测试案例" aria-hidden="true">#</a> 三、测试案例</h2><h3 id="_1-yml-配置" tabindex="-1"><a class="header-anchor" href="#_1-yml-配置" aria-hidden="true">#</a> 1. yml 配置</h3><p><strong>文件</strong>：<code>application-dev.yml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token comment"># RabbitMQ 配置</span>
  <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span>
    <span class="token key atrule">addresses</span><span class="token punctuation">:</span> 127.0.0.1
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5672</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span> admin
    <span class="token key atrule">password</span><span class="token punctuation">:</span> admin
    <span class="token key atrule">listener</span><span class="token punctuation">:</span>
      <span class="token key atrule">simple</span><span class="token punctuation">:</span>
        <span class="token key atrule">prefetch</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># 每次投递n个消息，消费完在投递n个</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试前，需要在工程中添加 RabbitMQ 连接配置信息。</li><li>prefetch 是消息投递的数量，实际场景可以适当配置的大一些。</li></ul><h3 id="_2-消费配置" tabindex="-1"><a class="header-anchor" href="#_2-消费配置" aria-hidden="true">#</a> 2. 消费配置</h3><p>进入到 <code>xfg-dev-tech-trigger</code> 是监听 MQ 消息的地方。</p><h4 id="_2-1-普通消息" tabindex="-1"><a class="header-anchor" href="#_2-1-普通消息" aria-hidden="true">#</a> 2.1 普通消息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Customer</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * queuesToDeclare：支持多个队列，将队列绑定到默认交换机上，routeKey为队列名称。
     *
     * <span class="token keyword">@param</span> <span class="token parameter">msg</span> 接收到的消息
     */</span>
    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queuesToDeclare <span class="token operator">=</span> <span class="token annotation punctuation">@Queue</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;testQueue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listener</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收消息：{}&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 通过抛异常，验证消息重试</span>
<span class="token comment">//        throw new RuntimeException(&quot;Err&quot;);</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>异常可以随着你的测试开启，开启后会接收到重试的消息。</li></ul><h4 id="_2-2-广播消息" tabindex="-1"><a class="header-anchor" href="#_2-2-广播消息" aria-hidden="true">#</a> 2.2 广播消息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FanoutCustomer</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>
            bindings <span class="token operator">=</span> <span class="token annotation punctuation">@QueueBinding</span><span class="token punctuation">(</span>
                    value <span class="token operator">=</span> <span class="token annotation punctuation">@Queue</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;fanoutCustomer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    exchange <span class="token operator">=</span> <span class="token annotation punctuation">@Exchange</span><span class="token punctuation">(</span>
                            value <span class="token operator">=</span> <span class="token string">&quot;fanoutExchange&quot;</span><span class="token punctuation">,</span>
                            type <span class="token operator">=</span> <span class="token class-name">ExchangeTypes</span><span class="token punctuation">.</span><span class="token constant">FANOUT</span>
                    <span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listener</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收消息【广播模式】：{}&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>广播模式，所有的消费放都监听到消息。</li></ul><h4 id="_2-3-路由消息" tabindex="-1"><a class="header-anchor" href="#_2-3-路由消息" aria-hidden="true">#</a> 2.3 路由消息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RouteCustomer</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>
            bindings <span class="token operator">=</span> <span class="token annotation punctuation">@QueueBinding</span><span class="token punctuation">(</span>
                    value <span class="token operator">=</span> <span class="token annotation punctuation">@Queue</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;routeQueue1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    exchange <span class="token operator">=</span> <span class="token annotation punctuation">@Exchange</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;routeExchange&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ExchangeTypes</span><span class="token punctuation">.</span><span class="token constant">DIRECT</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    key <span class="token operator">=</span> <span class="token string">&quot;routeKey1&quot;</span>
            <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listener01</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收消息【路由模式】：{}&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>
            bindings <span class="token operator">=</span> <span class="token annotation punctuation">@QueueBinding</span><span class="token punctuation">(</span>
                    value <span class="token operator">=</span> <span class="token annotation punctuation">@Queue</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;routeQueue2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    exchange <span class="token operator">=</span> <span class="token annotation punctuation">@Exchange</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;routeExchange&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ExchangeTypes</span><span class="token punctuation">.</span><span class="token constant">DIRECT</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    key <span class="token operator">=</span> <span class="token string">&quot;routeKey2&quot;</span>
            <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listener02</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收消息【路由模式】：{}&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>路由模式，会根据实际发送消息时候路由选择配置，让指定的消费方接收消息。比如实际场景中有监听订单的消息，但订单有很多种，比如自营、三方以及不同支付渠道，那么可以让不同的监听者只收取自己的消息信息。</li></ul><h4 id="_2-3-通配符消息" tabindex="-1"><a class="header-anchor" href="#_2-3-通配符消息" aria-hidden="true">#</a> 2.3 通配符消息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TopicCustomer</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>
            bindings <span class="token operator">=</span> <span class="token annotation punctuation">@QueueBinding</span><span class="token punctuation">(</span>
                    value <span class="token operator">=</span> <span class="token annotation punctuation">@Queue</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;topicQueue1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    exchange <span class="token operator">=</span> <span class="token annotation punctuation">@Exchange</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;topicExchange&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ExchangeTypes</span><span class="token punctuation">.</span><span class="token constant">TOPIC</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    key <span class="token operator">=</span> <span class="token string">&quot;topic.*&quot;</span> <span class="token comment">// \`*\`：匹配一个单词，就只有一个单词</span>
            <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listener01</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收消息【通配符模式】listener01：{}&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>
            bindings <span class="token operator">=</span> <span class="token annotation punctuation">@QueueBinding</span><span class="token punctuation">(</span>
                    value <span class="token operator">=</span> <span class="token annotation punctuation">@Queue</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;topicQueue2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    exchange <span class="token operator">=</span> <span class="token annotation punctuation">@Exchange</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;topicExchange&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ExchangeTypes</span><span class="token punctuation">.</span><span class="token constant">TOPIC</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    key <span class="token operator">=</span> <span class="token string">&quot;topic.#&quot;</span> <span class="token comment">// \`#\`：匹配一个或多个词</span>
            <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listener02</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收消息【通配符模式】listener02：{}&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>
            bindings <span class="token operator">=</span> <span class="token annotation punctuation">@QueueBinding</span><span class="token punctuation">(</span>
                    value <span class="token operator">=</span> <span class="token annotation punctuation">@Queue</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;topicQueue3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    exchange <span class="token operator">=</span> <span class="token annotation punctuation">@Exchange</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;topicExchange&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ExchangeTypes</span><span class="token punctuation">.</span><span class="token constant">TOPIC</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    key <span class="token operator">=</span> <span class="token string">&quot;topic.y.#&quot;</span> <span class="token comment">// \`#\`：匹配一个或多个词</span>
            <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listener03</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收消息【通配符模式】listener03：{}&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>通配符可以起到过滤的作用，比如在实际场景中，你需要根据过往mq的类型，做部分的监听。那么可以根据通配符配置来搞定。</li></ul><h2 id="四、测试验证" tabindex="-1"><a class="header-anchor" href="#四、测试验证" aria-hidden="true">#</a> 四、测试验证</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RabbitTemplate</span> rabbitTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_product</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 发送消息</span>
        rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;testQueue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;基本消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 等待</span>
        <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_product_fanout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;fanoutExchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;广播消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 等待</span>
        <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_product_route</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;routeExchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;routeKey1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;路由模式，消息1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;routeExchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;routeKey2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;路由模式，消息2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 等待</span>
        <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_product_topic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;topicExchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;topic.x&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;通配符模式，消息1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;topicExchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;topic.y.z&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;通配符模式，消息2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 等待</span>
        <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">22</span><span class="token operator">:</span><span class="token number">29</span><span class="token operator">:</span><span class="token number">46.792</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span></span>RabbitListenerEndpointContainer</span>#<span class="token number">0</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">Customer</span>               <span class="token operator">-</span> 接收消息：基本消息
<span class="token number">22</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">40.525</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span></span>RabbitListenerEndpointContainer</span>#<span class="token number">1</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">FanoutCustomer</span>         <span class="token operator">-</span> 接收消息【广播模式】：广播消息
<span class="token number">22</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">27.117</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span></span>RabbitListenerEndpointContainer</span>#<span class="token number">3</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">RouteCustomer</span>          <span class="token operator">-</span> 接收消息【路由模式】：路由模式，消息<span class="token number">2</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">27.117</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span></span>RabbitListenerEndpointContainer</span>#<span class="token number">2</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">RouteCustomer</span>          <span class="token operator">-</span> 接收消息【路由模式】：路由模式，消息<span class="token number">1</span>
<span class="token number">10</span><span class="token operator">:</span><span class="token number">32</span><span class="token operator">:</span><span class="token number">08.359</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span></span>RabbitListenerEndpointContainer</span>#<span class="token number">6</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">TopicCustomer</span>          <span class="token operator">-</span> 接收消息【通配符模式】listener03：通配符模式，消息<span class="token number">2</span>
<span class="token number">10</span><span class="token operator">:</span><span class="token number">32</span><span class="token operator">:</span><span class="token number">08.359</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span></span>RabbitListenerEndpointContainer</span>#<span class="token number">4</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">TopicCustomer</span>          <span class="token operator">-</span> 接收消息【通配符模式】listener01：通配符模式，消息<span class="token number">1</span>
<span class="token number">10</span><span class="token operator">:</span><span class="token number">32</span><span class="token operator">:</span><span class="token number">08.359</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span></span>RabbitListenerEndpointContainer</span>#<span class="token number">5</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">TopicCustomer</span>          <span class="token operator">-</span> 接收消息【通配符模式】listener02：通配符模式，消息<span class="token number">1</span>
<span class="token number">10</span><span class="token operator">:</span><span class="token number">32</span><span class="token operator">:</span><span class="token number">08.372</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span></span>RabbitListenerEndpointContainer</span>#<span class="token number">5</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name">TopicCustomer</span>          <span class="token operator">-</span> 接收消息【通配符模式】listener02：通配符模式，消息<span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以上案例，分别测试；基本消息、广播消息、路由消息、通配符消息。</li></ul>`,25);function L(I,S){const a=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("作者：小傅哥 "),r,s("博客："),n("a",k,[s("https://bugstack.cn"),t(a)])]),d,n("p",null,[s("本文的宗旨在于通过简单干净实践的方式教会读者，使用 Docker 配置 RabbitMQ 在 DDD 结构下验证使用。关于 MQ 的场景内容已经在 "),n("a",m,[s("RocketMQ"),t(a)]),s(" 一节中做了讲解，本文只要为大家扩展另外一种 MQ 的使用。方便有需要的伙伴可以做技术栈替换。")]),n("p",null,[n("a",v,[s("RabbitMQ"),t(a)]),s(" 是一个由 Erlang 开发的 AMQP (Advanced Message Queuing Protocol) 的开源实现。非常轻量，用于部署，有自己提供好的管理后台，非常容易上手使用。在功能上支持订阅、广播、路由和通配符，可以适合各类场景诉求。")]),b,n("ul",null,[n("li",null,[s("xfg-dev-tech-rabbitmq："),n("a",g,[s("https://gitcode.net/KnowledgePlanet/road-map/xfg-dev-tech-rabbitmq"),t(a)])]),n("li",null,[s("RabbitMQ Docker 安装："),n("a",h,[s("docs/dev-ops/docker-compose.yml"),t(a)])])]),q,n("p",null,[s("因为本文是在 "),n("a",f,[s("RocketMQ"),t(a)]),s(" 一节的扩展，所以只讲解下技术使用即可。")]),n("p",null,[s("本案例涉及了 RabbitMQ 的使用，都已经在工程中提供了安装脚本，可以按需执行。—— 前置条件已安装 "),n("a",y,[s("Docker"),t(a)]),s(" 环境。")]),w,_,n("ul",null,[n("li",null,[s("Mac 电脑会比较好安装一些，直接在 IntelliJ IDEA 点击小绿色按钮即可完成安装。安装完成后进入 "),n("a",x,[s("http://localhost:9000/#!/2/docker/containers"),t(a)]),s(" - 可看到 RabbitMQ 运行。")]),E,Q]),C,n("p",null,[s("登录 RabbitMQ 管理后台："),n("a",R,[s("http://127.0.0.1:15672/#/"),t(a)]),s(" - "),T]),j])}const D=p(l,[["render",L],["__file","rabbitmq.html.vue"]]);export{D as default};
