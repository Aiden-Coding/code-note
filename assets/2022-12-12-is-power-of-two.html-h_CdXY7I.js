import{_ as p,r as e,o,c,a as n,b as s,d as t,e as l}from"./app-3RcBQnkC.js";const i={},u=n("h1",{id:"《程序员数学-判断2次方数》——-除法、二进制、对数-你会用哪种方式判断",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#《程序员数学-判断2次方数》——-除法、二进制、对数-你会用哪种方式判断","aria-hidden":"true"},"#"),s(" 《程序员数学：判断2次方数》—— 除法、二进制、对数，你会用哪种方式判断？")],-1),r=n("br",null,null,-1),k={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("br",null,null,-1),m={href:"https://github.com/fuzhengwei/java-algorithms",target:"_blank",rel:"noopener noreferrer"},v=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),b=n("h2",{id:"一、前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、前言","aria-hidden":"true"},"#"),s(" 一、前言")],-1),h=n("p",null,[n("code",null,"每一个知识的索引都可能会牵扯出一片的内容")],-1),w=n("p",null,"记得以前看到一个文章内容，说国外的小孩留一个很开放的作文题目，但如果想把这样一个作业写下来，则需要索引大量的资料才能完成。但在这个过程中其实会收获很多，也学会了如何学习。",-1),g={href:"https://chat.openai.com/chat",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/fuzhengwei/java-algorithms/blob/main/%E4%BD%9C%E8%80%85%EF%BC%9A%E8%82%96%E6%81%A9%C2%B7%E5%9F%83%E9%9A%86%C2%B7%E5%AE%89%E5%BE%B7%E6%A3%AE%20seander%40cs%E3%80%82%E6%96%AF%E5%9D%A6%E7%A6%8F%E5%A4%A7%E5%AD%A6.pdf",target:"_blank",rel:"noopener noreferrer"},_=l(`<h2 id="二、判断2次方数" tabindex="-1"><a class="header-anchor" href="#二、判断2次方数" aria-hidden="true">#</a> 二、判断2次方数</h2><p>如果说判断一个数字是否满足2的次方，首先我会想到二进制，因为二进制的每一位都是2的次方数字。那么判断一个数字是否为2的次方可以从二进制中的数字特性下手，比如我们可以做二进制数字的判断，也就是一个数字的二进制必须只有1位为1，其他位都为0，那么这个数字就是2次方的数字。</p><p>🤔那除此之外还有其他手段吗？我们接下来就分别实现下</p><h3 id="_1-整除法" tabindex="-1"><a class="header-anchor" href="#_1-整除法" aria-hidden="true">#</a> 1. 整除法</h3><div align="center"><img src="https://bugstack.cn/images/article/algorithm/logic/is-power-of-two-01.png?raw=true" width="150px"></div><p><strong>代码实现</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPowerOfTwo01</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  
    <span class="token keyword">int</span> dividedNumber <span class="token operator">=</span> number<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>dividedNumber <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dividedNumber <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        dividedNumber <span class="token operator">=</span> dividedNumber <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>循环数字除以2的结果与2求模计算看余数是否为0，只要有一次不为0，那么就不是2的次方数。</li></ul><h3 id="_2-二进制" tabindex="-1"><a class="header-anchor" href="#_2-二进制" aria-hidden="true">#</a> 2. 二进制</h3><div align="center"><img src="https://bugstack.cn/images/article/algorithm/logic/is-power-of-two-02.png?raw=true" width="350px"></div><p><strong>代码实现</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPowerOfTwo02</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>number <span class="token operator">&amp;</span> <span class="token punctuation">(</span>number <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在斯坦福大学的计算资料中，有这么一条关于判断2的次方数的内容；<code>f = (v &amp; (v - 1)) == 0;</code> 错位进行 &amp; 与运算，结果为0则是2次方数【过程如图】。</li><li>此外这里我们过滤了小于的数字，如果不过滤则需要使用；<code>f = v &amp;&amp; !(v &amp; (v - 1));</code></li></ul><h3 id="_3-求对数" tabindex="-1"><a class="header-anchor" href="#_3-求对数" aria-hidden="true">#</a> 3. 求对数</h3><div align="center"><img src="https://bugstack.cn/images/article/algorithm/logic/is-power-of-two-03.png?raw=true" width="350px"></div><p><strong>代码实现</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPowerOfTwo03</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment">// log8 = log2^3 / log2 = 3</span>
    <span class="token keyword">double</span> x <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 向上和向下取整的结果判断</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>此方式为计算2为底数的对数，如果得到的数字向上和向下取整结果一致，那么则是2的次方。</li><li>这里做一个简单的推到，加入 number = 8，那么 log8 = log2^3 也就是用 log2^3 与 log2 做对比。这样就能看出来一个结果3，这个3是一个整数数字，则这个 number 也就是2次方数。</li></ul><h3 id="_4-位计算" tabindex="-1"><a class="header-anchor" href="#_4-位计算" aria-hidden="true">#</a> 4. 位计算</h3><div align="center"><img src="https://bugstack.cn/images/article/algorithm/logic/is-power-of-two-04.png?raw=true" width="350px"></div><p><strong>代码实现</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPowerOfTwo04</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>number <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cnt<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        number <span class="token operator">=</span> number <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cnt <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这个其实就是最开始说的，如果一个数字满足2次方，那么只要在二进制的转换中，它只有1位是1就可以了。</li></ul><h2 id="三、单元测试" tabindex="-1"><a class="header-anchor" href="#三、单元测试" aria-hidden="true">#</a> 三、单元测试</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_IsPowerOfTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">IsPowerOfTwo</span> isPowerOfTwo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IsPowerOfTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>isPowerOfTwo<span class="token punctuation">.</span><span class="token function">isPowerOfTwo01</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>isPowerOfTwo<span class="token punctuation">.</span><span class="token function">isPowerOfTwo02</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>isPowerOfTwo<span class="token punctuation">.</span><span class="token function">isPowerOfTwo03</span><span class="token punctuation">(</span><span class="token number">163</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>isPowerOfTwo<span class="token punctuation">.</span><span class="token function">isPowerOfTwo04</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test_math</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Math<span class="token punctuation">.</span>E</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token class-name">Math<span class="token punctuation">.</span>E</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在单元测试中除了验证4种判断2次方数的计算方式，也提供了关于log的计算，默认log是基于指数E的计算。读者也可以进行测试验证。a 的 x 次方 = N 那么 x = log(a)N</li></ul><h2 id="四、常见面试题" tabindex="-1"><a class="header-anchor" href="#四、常见面试题" aria-hidden="true">#</a> 四、常见面试题</h2><ul><li>如何判断一个数字是2的次方数</li><li>在Java中怎么计算log公式</li></ul>`,28);function y(x,E){const a=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("作者：小傅哥 "),r,s("博客："),n("a",k,[s("https://bugstack.cn"),t(a)]),d,s("源码："),n("a",m,[s("https://github.com/fuzhengwei/java-algorithms"),t(a)])]),v,b,h,w,n("p",null,[s("其实像小傅哥去编写这样的《程序员数学》资料时，也会去横向和纵向的对比一些数学上的文章和内容，有的来自维基百科，有的来自于论文资料，现在还可以从 "),n("a",g,[s("chatGPT"),t(a)]),s(" 中探索。")]),n("p",null,[s("另外还有一份斯坦福大学的课程资料，小傅哥把它转成 PDF 有需要的伙伴可以下载学习使用。"),n("a",f,[s("《计算机课程资料 - 斯坦福大学 @肖恩·埃隆·安德森》"),t(a)])]),_])}const P=p(i,[["render",y],["__file","2022-12-12-is-power-of-two.html.vue"]]);export{P as default};
