import{_ as e,r as o,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-3RcBQnkC.js";const l={},u=n("h1",{id:"重学-java-设计模式-实战备忘录模式「模拟互联网系统上线过程中-配置文件回滚场景」",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#重学-java-设计模式-实战备忘录模式「模拟互联网系统上线过程中-配置文件回滚场景」","aria-hidden":"true"},"#"),s(" 重学 Java 设计模式：实战备忘录模式「模拟互联网系统上线过程中，配置文件回滚场景」")],-1),k=n("br",null,null,-1),r={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("iframe",{id:"B-Video",src:"//player.bilibili.com/player.html?aid=768849195&bvid=BV19r4y1872K&cid=712483055&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"100%",height:"480"}," ",-1),v=p('<h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><p><code>实现不了是研发的借口？</code></p><p>实现不了，有时候是功能复杂度较高难以实现，有时候是工期较短实现不完。而编码的行为又是一个不太好量化的过程，同样一个功能每个人的实现方式不一样，遇到开发问题解决问题的速度也不一样。除此之外还很不好给产品解释具体为什么要这个工期时间，这就像盖楼的图纸最终要多少水泥砂浆一样。那么这时研发会尽可能的去通过一些经验，制定流程规范、设计、开发、评审等，确定一个可以完成的时间范围，又避免风险的时间点后。再被压缩，往往会出一些矛盾点，能压缩要解释为什么之前要那么多时间，不能压缩又有各方不断施加的压力。因此有时候不一定是借口，是要考虑如何让整个团队健康的发展。</p><p><code>鼓励有时比压力要重要！</code></p><p>在学习的过程中，很多时候我们听到的都是，<code>你要怎样，怎样，你瞧瞧谁谁谁</code>，哪怕今天听不到这样的声音了，但因为曾经反复听到过而导致内心抗拒。虽然也知道自己要去学，但是很难坚持，学着学着就没有了方向，看到还有那么多不会的就更慌了，以至于最后心态崩了，更不愿意学。其实程序员的压力并不小，想成长几乎是需要一直的学习，就像似乎再也不敢说精通java了一样，知识量实在是随着学习的深入，越来越深，越来越广。所以需要，开心学习，快乐成长！</p><p><code>临阵的你好像一直很着急！</code></p><p>经常的听到；<code>老师明天就要了你帮我弄弄吧</code>、<code>你给我写一下完事我就学这次着急</code>、<code>现在这不是没时间学吗快给我看看</code>。其实看到的类似的还有很多，很纳闷你的着急怎么来的，不太可能，人在家中坐，祸从天上落。老师怎么就那个时间找你了，老板怎么就今天管你要了，还不是日积月累你没有学习，临时抱佛脚乱着急！即使后来真的有人帮你了，但最好不要放松，要尽快学会，躲得过初一还有初二呢！</p><h2 id="二、开发环境" tabindex="-1"><a class="header-anchor" href="#二、开发环境" aria-hidden="true">#</a> 二、开发环境</h2>',8),g=n("li",null,"JDK 1.8",-1),b=n("li",null,"Idea + Maven",-1),f=n("strong",null,"公众号",-1),h={href:"https://bugstack.cn/assets/images/qrcode.png",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"bugstack虫洞栈",-1),w=n("code",null,"源码下载",-1),_=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"工程"),n("th",null,"描述")])]),n("tbody",null,[n("tr",null,[n("td",null,"itstack-demo-design-17-00"),n("td",null,"开发配置文件备忘录")])])],-1),y=n("h2",{id:"三、备忘录模式介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#三、备忘录模式介绍","aria-hidden":"true"},"#"),s(" 三、备忘录模式介绍")],-1),C=n("p",null,[n("img",{src:"https://bugstack.cn/assets/images/2020/itstack-demo-design-17-01.png",alt:"备忘录模式，图片来自 refactoringguru.cn"})],-1),F={href:"https://refactoringguru.cn/design-patterns/memento",target:"_blank",rel:"noopener noreferrer"},M=p(`<p>备忘录模式是以可以恢复或者说回滚，配置、版本、悔棋为核心功能的设计模式，而这种设计模式属于行为模式。在功能实现上是以不破坏原对象为基础增加备忘录操作类，记录原对象的行为从而实现备忘录模式。</p><p>这个设计在我们平常的生活或者开发中也是比较常见的，比如：后悔药、孟婆汤(一下回滚到0)，IDEA编辑和撤销、小霸王游戏机存档。当然还有我们非常常见的Photoshop，如下；</p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-17-02.png" alt="Photoshop 历史记录"></p><h2 id="四、案例场景模拟" tabindex="-1"><a class="header-anchor" href="#四、案例场景模拟" aria-hidden="true">#</a> 四、案例场景模拟</h2><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-17-03.png" alt="场景模拟；系统发布上线配置回滚"></p><p><strong>在本案例中我们模拟系统在发布上线的过程中记录线上配置文件用于紧急回滚</strong></p><p>在大型互联网公司系统的发布上线一定是易用、安全、可处理紧急状况的，同时为了可以隔离线上和本地环境，一般会把配置文件抽取出来放到线上，避免有人误操作导致本地的配置内容发布出去。同时线上的配置文件也会在每次变更的时候进行记录，包括；版本号、时间、MD5、内容信息和操作人。</p><p>在后续上线时如果发现紧急问题，系统就会需要回滚操作，如果执行回滚那么也可以设置配置文件是否回滚。因为每一个版本的系统可能会随着带着一些配置文件的信息，这个时候就可以很方便的让系统与配置文件一起回滚操作。</p><p>我们接下来就使用备忘录模式，模拟如何记录配置文件信息。实际的使用过程中还会将信息存放到库中进行保存，这里暂时只是使用内存记录。</p><h2 id="五、备忘录模式记录配置文件版本信息" tabindex="-1"><a class="header-anchor" href="#五、备忘录模式记录配置文件版本信息" aria-hidden="true">#</a> 五、备忘录模式记录配置文件版本信息</h2><p>备忘录的设计模式实现方式，重点在于不更改原有类的基础上，增加备忘录类存放记录。可能平时虽然不一定非得按照这个设计模式的代码结构来实现自己的需求，但是对于功能上可能也完成过类似的功能，记录系统的信息。</p><p>除了现在的这个案例外，还可以是运营人员在后台erp创建活动对信息的记录，方便运营人员可以上下修改自己的版本，而不至于因为误操作而丢失信息。</p><h3 id="_1-工程结构" tabindex="-1"><a class="header-anchor" href="#_1-工程结构" aria-hidden="true">#</a> 1. 工程结构</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>itstack<span class="token operator">-</span>demo<span class="token operator">-</span>design<span class="token operator">-</span><span class="token number">17</span><span class="token operator">-</span><span class="token number">00</span>
└── src
    ├── main
    │   └── java
    │       └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design
    │           ├── <span class="token class-name">Admin</span><span class="token punctuation">.</span>java
    │           ├── <span class="token class-name">ConfigFile</span><span class="token punctuation">.</span>java
    │           ├── <span class="token class-name">ConfigMemento</span><span class="token punctuation">.</span>java
    │           └── <span class="token class-name">ConfigOriginator</span><span class="token punctuation">.</span>java
    └── test
        └── java
            └── org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test
                └── <span class="token class-name">ApiTest</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>备忘录模式模型结构</strong></p><p><img src="https://bugstack.cn/assets/images/2020/itstack-demo-design-17-04.png" alt="备忘录模式模型结构"></p><ul><li>以上是工程结构的一个类图，其实相对来说并不复杂，除了原有的配置类(<code>ConfigFile</code>)以外，只新增加了三个类。</li><li><code>ConfigMemento</code>：备忘录类，相当于是对原有配置类的扩展</li><li><code>ConfigOriginator</code>：记录者类，获取和返回备忘录类对象信息</li><li><code>Admin</code>：管理员类，用于操作记录备忘信息，比如你一些列的顺序执行了什么或者某个版本下的内容信息</li></ul><h3 id="_2-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-代码实现" aria-hidden="true">#</a> 2. 代码实现</h3><h4 id="_2-1-配置信息类" tabindex="-1"><a class="header-anchor" href="#_2-1-配置信息类" aria-hidden="true">#</a> 2.1 配置信息类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigFile</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> versionNo<span class="token punctuation">;</span> <span class="token comment">// 版本号</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>   <span class="token comment">// 内容</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> dateTime<span class="token punctuation">;</span>    <span class="token comment">// 时间</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> operator<span class="token punctuation">;</span>  <span class="token comment">// 操作人</span>
    
    <span class="token comment">// ...get/set</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置类可以是任何形式的，这里只是简单的描述了一个基本的配置内容信息。</li></ul><h4 id="_2-2-备忘录类" tabindex="-1"><a class="header-anchor" href="#_2-2-备忘录类" aria-hidden="true">#</a> 2.2 备忘录类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigMemento</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ConfigFile</span> configFile<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ConfigMemento</span><span class="token punctuation">(</span><span class="token class-name">ConfigFile</span> configFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>configFile <span class="token operator">=</span> configFile<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ConfigFile</span> <span class="token function">getConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> configFile<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setConfigFile</span><span class="token punctuation">(</span><span class="token class-name">ConfigFile</span> configFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>configFile <span class="token operator">=</span> configFile<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>备忘录是对原有配置类的扩展，可以设置和获取配置信息。</li></ul><h4 id="_2-3-记录者类" tabindex="-1"><a class="header-anchor" href="#_2-3-记录者类" aria-hidden="true">#</a> 2.3 记录者类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigOriginator</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ConfigFile</span> configFile<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ConfigFile</span> <span class="token function">getConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> configFile<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setConfigFile</span><span class="token punctuation">(</span><span class="token class-name">ConfigFile</span> configFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>configFile <span class="token operator">=</span> configFile<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ConfigMemento</span> <span class="token function">saveMemento</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConfigMemento</span><span class="token punctuation">(</span>configFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getMemento</span><span class="token punctuation">(</span><span class="token class-name">ConfigMemento</span> memento<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>configFile <span class="token operator">=</span> memento<span class="token punctuation">.</span><span class="token function">getConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>记录者类除了对<code>ConfigFile</code>配置类增加了获取和设置方法外，还增加了保存<code>saveMemento()</code>、获取<code>getMemento(ConfigMemento memento)</code>。</li><li><code>saveMemento</code>：保存备忘录的时候会创建一个备忘录信息，并返回回去，交给管理者处理。</li><li><code>getMemento</code>：获取的之后并不是直接返回，而是把备忘录的信息交给现在的配置文件<code>this.configFile</code>，这部分需要注意。</li></ul><h4 id="_2-4-管理员类" tabindex="-1"><a class="header-anchor" href="#_2-4-管理员类" aria-hidden="true">#</a> 2.4 管理员类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Admin</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> cursorIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigMemento</span><span class="token punctuation">&gt;</span></span> mementoList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigMemento</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ConfigMemento</span><span class="token punctuation">&gt;</span></span> mementoMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ConfigMemento</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">ConfigMemento</span> memento<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mementoList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>memento<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mementoMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>memento<span class="token punctuation">.</span><span class="token function">getConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getVersionNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> memento<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cursorIdx<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ConfigMemento</span> <span class="token function">undo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">--</span>cursorIdx <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> mementoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> mementoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cursorIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ConfigMemento</span> <span class="token function">redo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>cursorIdx <span class="token operator">&gt;</span> mementoList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> mementoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mementoList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> mementoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cursorIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ConfigMemento</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span> versionNo<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> mementoMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>versionNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在这个类中主要实现的核心功能就是记录配置文件信息，也就是备忘录的效果，之后提供可以回滚和获取的方法，拿到备忘录的具体内容。</li><li>同时这里设置了两个数据结构来存放备忘录，实际使用中可以按需设置。<code>List&lt;ConfigMemento&gt;</code>、<code>Map&lt;String, ConfigMemento&gt;</code>。</li><li>最后是提供的备忘录操作方法；存放(<code>append</code>)、回滚(<code>undo</code>)、返回(<code>redo</code>)、定向获取(<code>get</code>)，这样四个操作方法。</li></ul><h3 id="_3-测试验证" tabindex="-1"><a class="header-anchor" href="#_3-测试验证" aria-hidden="true">#</a> 3. 测试验证</h3><h4 id="_3-1-编写测试类" tabindex="-1"><a class="header-anchor" href="#_3-1-编写测试类" aria-hidden="true">#</a> 3.1 编写测试类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Admin</span> admin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ConfigOriginator</span> configOriginator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigOriginator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    configOriginator<span class="token punctuation">.</span><span class="token function">setConfigFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConfigFile</span><span class="token punctuation">(</span><span class="token string">&quot;1000001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;配置内容A=哈哈&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    admin<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>configOriginator<span class="token punctuation">.</span><span class="token function">saveMemento</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 保存配置</span>
    configOriginator<span class="token punctuation">.</span><span class="token function">setConfigFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConfigFile</span><span class="token punctuation">(</span><span class="token string">&quot;1000002&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;配置内容A=嘻嘻&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    admin<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>configOriginator<span class="token punctuation">.</span><span class="token function">saveMemento</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 保存配置</span>
    configOriginator<span class="token punctuation">.</span><span class="token function">setConfigFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConfigFile</span><span class="token punctuation">(</span><span class="token string">&quot;1000003&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;配置内容A=么么&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    admin<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>configOriginator<span class="token punctuation">.</span><span class="token function">saveMemento</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 保存配置</span>
    configOriginator<span class="token punctuation">.</span><span class="token function">setConfigFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConfigFile</span><span class="token punctuation">(</span><span class="token string">&quot;1000004&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;配置内容A=嘿嘿&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    admin<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>configOriginator<span class="token punctuation">.</span><span class="token function">saveMemento</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 保存配置  </span>

    <span class="token comment">// 历史配置(回滚)</span>
    configOriginator<span class="token punctuation">.</span><span class="token function">getMemento</span><span class="token punctuation">(</span>admin<span class="token punctuation">.</span><span class="token function">undo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;历史配置(回滚)undo：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>configOriginator<span class="token punctuation">.</span><span class="token function">getConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token comment">// 历史配置(回滚)</span>
    configOriginator<span class="token punctuation">.</span><span class="token function">getMemento</span><span class="token punctuation">(</span>admin<span class="token punctuation">.</span><span class="token function">undo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;历史配置(回滚)undo：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>configOriginator<span class="token punctuation">.</span><span class="token function">getConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token comment">// 历史配置(前进)</span>
    configOriginator<span class="token punctuation">.</span><span class="token function">getMemento</span><span class="token punctuation">(</span>admin<span class="token punctuation">.</span><span class="token function">redo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;历史配置(前进)redo：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>configOriginator<span class="token punctuation">.</span><span class="token function">getConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token comment">// 历史配置(获取)</span>
    configOriginator<span class="token punctuation">.</span><span class="token function">getMemento</span><span class="token punctuation">(</span>admin<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;1000002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;历史配置(获取)get：{}&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>configOriginator<span class="token punctuation">.</span><span class="token function">getConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这个设计模式的学习有一部分重点是体现在了单元测试类上，这里包括了四次的信息存储和备忘录历史配置操作。</li><li>通过上面添加了四次配置后，下面分别进行操作是；<code>回滚1次</code>、<code>再回滚1次</code>，<code>之后向前进1次</code>，<code>最后是获取指定的版本配置</code>。具体的效果可以参考测试结果。</li></ul><h4 id="_3-2-测试结果" tabindex="-1"><a class="header-anchor" href="#_3-2-测试结果" aria-hidden="true">#</a> 3.2 测试结果</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">23</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">09.512</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 历史配置<span class="token punctuation">(</span>回滚<span class="token punctuation">)</span>undo：<span class="token punctuation">{</span><span class="token string">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;配置内容A=嘿嘿&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;dateTime&quot;</span><span class="token operator">:</span><span class="token number">159209829432</span><span class="token punctuation">,</span><span class="token string">&quot;operator&quot;</span><span class="token operator">:</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;versionNo&quot;</span><span class="token operator">:</span><span class="token string">&quot;1000004&quot;</span><span class="token punctuation">}</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">09.514</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 历史配置<span class="token punctuation">(</span>回滚<span class="token punctuation">)</span>undo：<span class="token punctuation">{</span><span class="token string">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;配置内容A=么么&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;dateTime&quot;</span><span class="token operator">:</span><span class="token number">159209829432</span><span class="token punctuation">,</span><span class="token string">&quot;operator&quot;</span><span class="token operator">:</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;versionNo&quot;</span><span class="token operator">:</span><span class="token string">&quot;1000003&quot;</span><span class="token punctuation">}</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">09.514</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 历史配置<span class="token punctuation">(</span>前进<span class="token punctuation">)</span>redo：<span class="token punctuation">{</span><span class="token string">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;配置内容A=嘿嘿&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;dateTime&quot;</span><span class="token operator">:</span><span class="token number">159209829432</span><span class="token punctuation">,</span><span class="token string">&quot;operator&quot;</span><span class="token operator">:</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;versionNo&quot;</span><span class="token operator">:</span><span class="token string">&quot;1000004&quot;</span><span class="token punctuation">}</span>
<span class="token number">23</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">09.514</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>itstack<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>design<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>ApiTest</span> <span class="token operator">-</span> 历史配置<span class="token punctuation">(</span>获取<span class="token punctuation">)</span>get：<span class="token punctuation">{</span><span class="token string">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;配置内容A=嘻嘻&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;dateTime&quot;</span><span class="token operator">:</span><span class="token number">159320989432</span><span class="token punctuation">,</span><span class="token string">&quot;operator&quot;</span><span class="token operator">:</span><span class="token string">&quot;小傅哥&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;versionNo&quot;</span><span class="token operator">:</span><span class="token string">&quot;1000002&quot;</span><span class="token punctuation">}</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从测试效果上可以看到，历史配置按照我们的指令进行了回滚和前进，以及最终通过指定的版本进行获取，符合预期结果。</li></ul><h2 id="六、总结" tabindex="-1"><a class="header-anchor" href="#六、总结" aria-hidden="true">#</a> 六、总结</h2><ul><li>此种设计模式的方式可以满足在不破坏原有属性类的基础上，扩充了备忘录的功能。虽然和我们平时使用的思路是一样的，但在具体实现上还可以细细品味，这样的方式在一些源码中也有所体现。</li><li>在以上的实现中我们是将配置模拟存放到内存中，如果关机了会导致配置信息丢失，因为在一些真实的场景里还是需要存放到数据库中。那么此种存放到内存中进行回复的场景也不是没有，比如；Photoshop、运营人员操作ERP配置活动，那么也就是即时性的一般不需要存放到库中进行恢复。另外如果是使用内存方式存放备忘录，需要考虑存储问题，避免造成内存大量消耗。</li><li>设计模式的学习都是为了更好的写出可扩展、可管理、易维护的代码，而这个学习的过程需要自己不断的尝试实际操作，理论的知识与实际结合还有很长一段距离。切记多多上手！</li></ul>`,39);function x(O,j){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[s("作者：小傅哥 "),k,s("博客："),n("a",r,[s("https://bugstack.cn"),t(a)])]),d,m,v,n("ol",null,[g,b,n("li",null,[s("涉及工程一个，可以通过关注"),f,s("："),n("a",h,[q,t(a)]),s("，回复"),w,s("获取(打开获取的链接，找到序号18)")])]),_,y,C,n("ul",null,[n("li",null,[s("图片来自："),n("a",F,[s("https://refactoringguru.cn/design-patterns/memento"),t(a)])])]),M])}const A=e(l,[["render",x],["__file","2020-06-28-zhongxue Java shejimoshi《shizhanbeiwanglumoshi》.html.vue"]]);export{A as default};
