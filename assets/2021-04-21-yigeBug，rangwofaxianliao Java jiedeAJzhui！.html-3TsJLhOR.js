import{_ as p,r as c,o,c as i,a as n,b as s,d as t,e}from"./app-3RcBQnkC.js";const l={},u=n("h1",{id:"一个bug-让我发现了-java-界的-aj-锥",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一个bug-让我发现了-java-界的-aj-锥","aria-hidden":"true"},"#"),s(" 一个Bug，让我发现了 Java 界的.AJ(锥)！")],-1),r=n("br",null,null,-1),d={href:"https://bugstack.cn",target:"_blank",rel:"noopener noreferrer"},k=n("br",null,null,-1),h={href:"https://mp.weixin.qq.com/s/ArZX-gA1WTon864tjtvjag",target:"_blank",rel:"noopener noreferrer"},v=n("blockquote",null,[n("p",null,"沉淀、分享、成长，让自己和他人都能有所收获！😄")],-1),m=n("h2",{id:"一、前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、前言","aria-hidden":"true"},"#"),s(" 一、前言")],-1),g=n("p",null,[n("code",null,"话我放这，踩过的坑越多头发越少！")],-1),b=n("p",null,[s("说来也是奇怪，只要是学编程的，从初次接触的 Java 到安装 JDK、IDEA、MYSQL， 再到接触 Spring、MyBatis、RPC、MQ，哪怕有时候在浅的坑也会跳进去尝尝鲜，一遍抓着头发，一手点着鼠标也几乎是你的常态。"),n("em",null,"你的键盘里总是有很多被抓碎的头发！")],-1),_={href:"https://bugstack.cn/itstack-ark-middleware/2021/03/31/SpringBoot-%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%BC%80%E5%8F%91-%E4%B8%93%E6%A0%8F%E5%B0%8F%E5%86%8C%E4%B8%8A%E7%BA%BF%E5%95%A6.html",target:"_blank",rel:"noopener noreferrer"},j=e('<p>接下来我带着大家一起看看什么是快乐星球，他是怎么一顿骚操作让切面拦截不到的！</p><h2 id="二、满脑子都是骚操作" tabindex="-1"><a class="header-anchor" href="#二、满脑子都是骚操作" aria-hidden="true">#</a> 二、满脑子都是骚操作</h2><h3 id="_1-遇到问题" tabindex="-1"><a class="header-anchor" href="#_1-遇到问题" aria-hidden="true">#</a> 1. 遇到问题</h3><p>上周，谢飞机(<s>化名</s>)发过来了自己的手撸的中间件源码，说这代码都没有啥怎么就不能切面呢？</p><p><img src="https://bugstack.cn/assets/images/story/story-2-01.png" alt=""></p><ul><li>最开始我大意了，让谢飞机发了一些代码截图。</li><li>看截图的代码，这完全就和我写的中间件里的代码一毛一样，没啥问题呀，包路径也能扫描到，咋就不能切面了？</li><li>我说你打个断点调试下，看看怎么切不到了呢？嘿，调试了，直接通过，就是没切面到。</li><li>此时我思考了JDK版本、环境配置、Spring上下文、切面的定义、包的路径以及这小子是否忽悠我？</li><li>最后我抱着这小子忽悠我的心里，把源码要过来了。</li></ul><h3 id="_2-发现问题" tabindex="-1"><a class="header-anchor" href="#_2-发现问题" aria-hidden="true">#</a> 2. 发现问题</h3><p>看了几遍源码没发现问题，开始调试，还真它哈拉哨的不进这个切面，接下来；</p><ul><li>谢飞机的源码保留，复制出来一份新的。</li><li>我的目的要先让他跑起来，在研究。接下来我把自己的工程里的 <code>DoJoinPoint</code> 拷贝过来粘贴进去，噗察一下贴进去了，没提示替换，虽然有报错但两个类能共存，如下： <img src="https://bugstack.cn/assets/images/story/story-2-02.png" alt=""><ul><li>这就神奇了哈，我当时怀疑是不它那 <code>DoJoinPoint</code> 不是一个正经 Java 类，路径不对？有看不见的特殊字符？</li></ul></li><li>既然发现这个类不对，那行先删掉。让程序先跑起来，确保除了这个类其他的内容没有问题，这样也好排查问题。</li><li>还别说，去掉这个错误类，程序可以正常运行，拦截到切面内容了。</li><li>既然程序能跑了，我就想着这可以看看问题出在哪了，没想到就只打开个文件夹，就发现了一个神奇的<strong>AJ</strong>！这货压根就不是 Java 类！ <img src="https://bugstack.cn/assets/images/story/story-2-03.png" alt=""></li></ul><h3 id="_3-排查问题" tabindex="-1"><a class="header-anchor" href="#_3-排查问题" aria-hidden="true">#</a> 3. 排查问题</h3><p>要不是IDEA把 <code>.aj</code> 这货显示成 C 类的图标，可能早就发现问题了。紧接着把这错误类的截图发给了谢飞机，问它你是怎么创建的？<em>他说实话了</em></p><ul><li>谢飞机先说自己偷懒了，哈哈哈，让人怪不好意思的！</li><li>他说在创建 <code>DoJoinPoint</code> 时，看到一个 Aspect 的选项，以为这个就是创建切面的快捷操作，如图； <img src="https://bugstack.cn/assets/images/story/story-2-04.png" alt=""></li><li>创建完成以后发现有点不对，不是 class 类型的，是个 aspect，于是他手动把 aspect 改成了 class，如图； <img src="https://bugstack.cn/assets/images/story/story-2-05.png" alt=""></li><li>所以，谢飞机实际创建出来的是一个 aspect 的以 <code>.aj</code> 结尾的类，并不是一个正经的 Java 类，所以切面不到，也根本没有对应的 class 文件。</li></ul><h2 id="三、如何正确使用-aspect-的-aj-类" tabindex="-1"><a class="header-anchor" href="#三、如何正确使用-aspect-的-aj-类" aria-hidden="true">#</a> 三、如何正确使用 Aspect 的 .aj 类</h2><p><strong>AspectJ</strong>，简称 AJ <s>我自己说的</s></p><p>AspectJ 其实也是 AOP 的一种实现技术，功能类似于拦截器，在集成在 IntelliJ IDEA 开发工具里。在使用 IntelliJ IDEA 编写 AspectJ 代码之前需要本机先安装 AspectJ 工具包。<em>否则你的 <code>.aj</code> 类不能运行，同时IDEA类显示出来的 <code>.aj</code> 类，也是C的标识</em></p><p>接下来我们就来聊聊关于这个东西怎么使用，别再被 <code>.aj</code> 骗了。</p><h3 id="_1-安装-aspectj" tabindex="-1"><a class="header-anchor" href="#_1-安装-aspectj" aria-hidden="true">#</a> 1. 安装 AspectJ</h3>',17),f={href:"https://www.eclipse.org/aspectj/downloads.php",target:"_blank",rel:"noopener noreferrer"},A=n("em",null,"如果官网下载的很慢，可以从我提供的源码中获取，也可以从其他途径搜索下载 aspectj-1.9.4.jar",-1),y=e(`<p>下载完成安装；</p><ul><li>双击安装</li><li>命令安装 <code>java -jar aspectj-1.9.4.jar</code></li><li>配置说明：没有配置，傻瓜式下一步就可以了</li></ul><p><img src="https://bugstack.cn/assets/images/story/story-2-06.png" alt=""></p><ul><li>默认配置安装完成以后会在C盘创建出一个文件夹 <code>C:\\aspectj1.9</code>，包括：bin、doc、lib等，后面我们就会使用到这些内容。</li></ul><h3 id="_2-aspectj-插件" tabindex="-1"><a class="header-anchor" href="#_2-aspectj-插件" aria-hidden="true">#</a> 2. AspectJ 插件</h3><p>在专业版 IDEA 中开发 AspectJ，需要安装以下两个插件：</p><ul><li><code>Spring AOP/@AspectJ</code></li><li><code>AspectJ Support</code></li></ul><p><img src="https://bugstack.cn/assets/images/story/story-2-07.png" alt=""></p><h3 id="_3-添加依赖-aspectjrt-jar" tabindex="-1"><a class="header-anchor" href="#_3-添加依赖-aspectjrt-jar" aria-hidden="true">#</a> 3. 添加依赖 aspectjrt.jar</h3><p>开始之前需要在项目中添加 <code>aspectjrt.jar</code> 依赖，<code>aspectjrt.jar</code> 即 AspectJ 安装目录中<code>lib</code>目录下的jar包。<em>你可以复制到工程中引入，也可以直接引入</em></p><p><img src="https://bugstack.cn/assets/images/story/story-2-08.png" alt=""></p><ol><li>在工程上鼠标右键，点击 Open Module Setting 打开 <code>Project Structure</code></li><li>点击 Libraries 选项卡，和上面的 + 号，创建 New Project Library</li><li>选择 <code>C:\\aspectj1.9\\lib\\aspectjrt.jar</code> 路径，点击即可配置完成</li></ol><h3 id="_4-配置aspectj编译器" tabindex="-1"><a class="header-anchor" href="#_4-配置aspectj编译器" aria-hidden="true">#</a> 4. 配置AspectJ编译器</h3><p>IDEA 默认使用 <code>javac</code> 编译器，这里需要配置 AspectJ 的编译器 <code>ajc</code>，在 IDEA 中做相应配置。</p><p><img src="https://bugstack.cn/assets/images/story/story-2-09.png" alt=""></p><ol><li>打开 <code>IDEA -&gt; File -&gt; Settings</code> 对话</li><li>选择 <code>Build，Execution，Deployment -&gt; Compiler -&gt; Java Compiler</code></li><li>Use complier：选择 Ajc</li><li>在 <code>Path to aspectjtools.jar</code> 里配置路径 <code>C:\\aspectj1.9\\lib\\aspectjtools.jar</code></li></ol><h3 id="_5-案例测试" tabindex="-1"><a class="header-anchor" href="#_5-案例测试" aria-hidden="true">#</a> 5. 案例测试</h3><p><strong>创建 Aspect 类</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> aspect <span class="token class-name">DoAspect</span> <span class="token punctuation">{</span>

    pointcut <span class="token function">logPointcut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token operator">*</span> <span class="token class-name">ApiTest</span><span class="token punctuation">.</span><span class="token function">hi</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">around</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token class-name">ApiTest</span><span class="token punctuation">.</span><span class="token function">hi</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call 开始...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;call 结束...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token function">logPointcut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;方法执行 before&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">after</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token function">logPointcut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;方法执行 after&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试类</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hi Aspect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ApiTest</span> apiTest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApiTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        apiTest<span class="token punctuation">.</span><span class="token function">hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试结果</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>call 开始<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
方法执行 before
<span class="token class-name">Hi</span> <span class="token class-name">Aspect</span>
call 结束<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
方法执行 after

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>到这，才是一个关于 Aspect 类的正确打开方式，关于 Aspect 的使用也可以尝试搞搞，此篇还只是关于此类切面写法的一个入门。</li></ul><h2 id="四、总结" tabindex="-1"><a class="header-anchor" href="#四、总结" aria-hidden="true">#</a> 四、总结</h2><ul><li>你的代码越粗犷、越豪放、越骚气，几乎你遇到的问题也是越多的，可能就是因为没有遵守一定的研发执行规范，所以遇到的这些有点傻的问题，几乎会浪费掉你一个上午或者一天。</li><li>但有些时候如果你能认真对待你弄出来的bug，深入分析下它是如何产生的，并把它复现出来一点点深入研究下，可能也会得到意想不到的收获，也说不定。所以凡是认真，凡事没有坏事。</li><li>关于切面、关于源码、关于开发，可能并不应该只注重于功能实现，甚至有时候要想办法逃离日复一日没有成长的工作内容。多在那些有价值的技术上下功夫，那你的收获也是最多的。</li></ul>`,26);function J(E,w){const a=c("ExternalLinkIcon");return o(),i("div",null,[u,n("p",null,[s("作者：小傅哥 "),r,s("博客："),n("a",d,[s("https://bugstack.cn"),t(a)]),k,s("原文："),n("a",h,[s("https://mp.weixin.qq.com/s/ArZX-gA1WTon864tjtvjag"),t(a)])]),v,m,g,b,n("p",null,[s("但，哪怕是抓了这么头发，还是遇到了一个满脑子都是骚操作的小伙。"),n("strong",null,[s("“傅哥，我的切面怎么拦截不到？我是照着你的"),n("a",_,[s("《SpringBoot 中间件设计和开发》"),t(a)]),s("专栏写的，你给我看看吧，我都弄了一天了”")])]),j,n("p",null,[s("在使用 AspectJ 之前，需要去官网下载一个安装包，地址："),n("a",f,[s("https://www.eclipse.org/aspectj/downloads.php"),t(a)]),s(),A]),y])}const B=p(l,[["render",J],["__file","2021-04-21-yigeBug，rangwofaxianliao Java jiedeAJzhui！.html.vue"]]);export{B as default};
